{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Home.svelte",
    "..\\..\\Tab.svelte",
    "..\\..\\TabList.svelte",
    "..\\..\\index.svelte"
  ],
  "sourcesContent": [
    "<svelte:head>\r\n\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n\t<!-- Appzi: Capture Insightful Feedback -->\r\n<script async src=\"https://w.appzi.io/bootstrap/bundle.js?token=6UPb5\"></script>\r\n<!-- End Appzi -->\r\n\r\n<!-- code for boei live chat popup type-->\r\n<script>window.Boei_Test_Hostname = \"designtack.com\";</script>\r\n<script async defer src=\"https://cdn.boei.help/hello.js\"></script>\r\n<!--code for crisp live chat-->\r\n<script type=\"text/javascript\">window.$crisp=[];window.CRISP_WEBSITE_ID=\"6449c6e5-35db-4d02-b1e7-4d5fa408074c\";(function(){d=document;s=d.createElement(\"script\");s.src=\"https://client.crisp.chat/l.js\";s.async=1;d.getElementsByTagName(\"head\")[0].appendChild(s);})();</script>\r\n</svelte:head>\r\n<style>\r\n\t#stage-parent {\r\n\t\tmax-width: 780px;\r\n        width: 100%;\r\n\t\tborder: 1px black solid;\r\n      }\r\n\r\n\t  .marketingTopic {\r\n\t\t  color:darkcyan;\r\n\t\t  font-size: 2em;\r\n\t\t  text-align: center;\r\n\t  }\r\n\t  .centerInfoText {\r\n\t\t  color: darkcyan;\r\n\t\t  padding: 5px;\r\n\t\t  font-size: 1em;\r\n\t\t  text-align: center;\r\n\t  }\r\n</style>\r\n<script>\r\n  import { auth, db, firebaseAnalytics } from './firebase';\r\n  let user = auth.currentUser;\r\n  let allowProAccess = false;\r\n\r\n  function proAccessCheck() {\r\n\tdb.collection('PROusers').doc(user.uid).get().then(doc => {\r\n        if (doc.exists) {\r\n        console.log(\"Pro Access ENABLED :)\");\r\n\t\tallowProAccess = true;\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"Pro Access Disabled\");\r\n        allowProAccess = false;\r\n    }\r\n    }).catch(function(error) {\r\n        console.log(\"Error:\", error);\r\n    });\r\n  }\r\n\r\n    import { Router, Link, Route } from \"svelte-routing\";\r\n\timport { Tabs, TabList, TabPanel, Tab } from './tabs.js';\r\n\timport { Alert, Row, Col, Button,ButtonGroup,Modal,ModalBody,ModalFooter,ModalHeader, Container,UncontrolledCollapse, Card, CardBody, Form, FormText, FormGroup, Label, Input, CustomInput } from \"sveltestrap\";\r\n\r\n\timport Konva from 'konva';\r\n\timport { onMount } from 'svelte';\r\n\timport { beforeUpdate, afterUpdate } from 'svelte';\r\n\timport { remixBackgroundColor, remixColorCombo } from './modules/Remix.svelte';\r\n\timport { marketingIdeas } from './modules/Inspiration.svelte';\r\n\t\r\n\tlet marketingIdea = marketingIdeas();\r\n\r\n\tfunction generateIdea() {\r\n        firebaseAnalytics.logEvent('idea_generation_clicked')\r\n\t\tmarketingIdea = marketingIdeas();\r\n\t}\r\n\t\r\n\tlet layer = new Konva.Layer();\r\n\tlet Shapelayer = new Konva.Layer();\r\n\tlet bglayer = new Konva.Layer();\r\n\r\n\tlet stage;\r\n\tlet smSettings= [{ size: 'auto', offset: 1 }];\r\n\tlet width,height;\r\n\tlet GUIDELINE_OFFSET = 5;\r\n\r\n\t//Default Object of Text\r\n\tlet userText ,bgRect;\r\n\r\n\t//For Select and Download Modal\r\n\tlet open = false;\r\n  \tlet size;\r\n\t  const toggle = () => {\r\n\t\tsize = undefined;\r\n\t\topen = !open;\r\n\t};\r\n\r\n\t  const toggleLg = () => {\r\n\t\tsize = \"lg\";\r\n\t\topen = !open;\r\n\t};\r\n\r\n\tlet toRemix = true;\r\n\tlet colorArray = remixColorCombo();\r\n\r\nfunction afterDownload(){\r\n\ttoggleLg();\r\n\t\r\n\tsetTimeout(function(){ alert(\"Thank you for downloading! If you have a moment, do share your feedback.\"); }, 1500);\r\n}\r\n\r\n\t// Main code to generate images with random combinations\r\n\tfunction selectAndDownload() {\r\n        firebaseAnalytics.logEvent('download_files_clicked')\r\n\t\tif (toRemix === true) {\r\n\t\tlet isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\t\tif (isMobile) {\r\n\t\t\t  console.log(\"Remix ON. You on Mobile\")\r\n\t\t\t  \t\tif (document.querySelector('#fb:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix,colorArray[1]);\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ln:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix,colorArray[1]);\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#tw:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix,colorArray[1]);\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n\t\t\t\t\t}\r\n\t\t} else {\r\n  \t\t\tconsole.log(\"Remix ON. You on Desktop\")\r\n\t\t\t\t\tif (document.querySelector('#fb:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix,colorArray[1]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ln:checked') !== null)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix,colorArray[1]);\r\n\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#tw:checked') !== null)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix,colorArray[1]);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n\t\t\t\t\t}\r\n\t}\r\n\tafterDownload();\r\n\t}\r\n\t\telse {\r\n\t\t\t//Remix is OFF, download files manually.\r\n\t\t\tdownloadIMG();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction randomBGcolor(){\r\n\t\tremixBackgroundColor();\r\n\t\taddBgColor();\r\n\t}\r\n\r\n\tfunction remixPattern() {\r\n        firebaseAnalytics.logEvent('remix_content_clicked')\r\n\t\tclearCanvas();\r\n\t\trandomBGcolor();\r\n\t\tgenerateShapes();\r\n\t}\r\n\t\r\n\tfunction addText(toRemix, txtColor) {\r\n\r\n\t\tif (toRemix === true) {\r\n\t\t\tconsole.log(\"REMIX ON:- \"+typeof(txtColor));\r\n\t\t\t//https://konvajs.org/api/Konva.Shape.html#fill\r\n\t\t\tuserText.fill(txtColor);\r\n\t\t\t/*userText = new Konva.Text({\r\n\t\t\tx: 15,\r\n\t\t\ty: 15,\r\n\t\t\ttext: document.getElementById('userText').value,\r\n\t\t\tfontSize: document.getElementById('userTextSize').value,\r\n\t\t\tfontFamily: document.getElementById('userTextFonts').value,\r\n\t\t\tfill: txtColor,\r\n\t\t\tdraggable: true,\r\n\t\t\tname: 'object'\r\n\t\t});*/\r\n\t  }\r\n\t\telse{\r\n\t\tuserText = new Konva.Text({\r\n        x: 15,\r\n        y: 15,\r\n        text: document.getElementById('userText').value,\r\n        fontSize: document.getElementById('userTextSize').value,\r\n        fontFamily: document.getElementById('userTextFonts').value,\r\n        fill: document.getElementById('userTextColor').value,\r\n\t\tdraggable: true,\r\n\t\tname: 'object'\r\n\t  });\r\n\t  }\r\n\r\n\t  //layer = new Konva.Layer();\r\n\t  layer.add(userText);\r\n\t  stage.add(layer);\r\n\t  layer.draw();\r\n\t}\r\n\r\n\tfunction addBgColor(toRemix, bgColor){\r\n\t\tconsole.log(\"addbgcolor called\");\r\n\t\t\r\n\t\tif (toRemix === true) {\r\n\t\t\tconsole.log(\"REMIX ON:- \"+typeof(bgColor));\r\n\t\t\tbgRect.fill(bgColor);\r\n\t\t\t/*bgRect = new Konva.Rect({\r\n\t\t\t\t\tx:0,y:0,\r\n\t\t\t\t\twidth: 780,\r\n\t\t\t\t\theight:350,\r\n\t\t\t\t\tfill: bgColor,\r\n\t\t\t\t\tdraggable: false,\r\n\t\t\t});*/\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconsole.log(typeof(document.getElementById('userBGcolor').value));\r\n\t\t\tbgRect = new Konva.Rect({\r\n\t\t\t\t\tx:0,y:0,\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight:height,\r\n\t\t\t\t\tfill: document.getElementById('userBGcolor').value,\r\n\t\t\t\t\tdraggable: false,\r\n\t\t\t});\r\n\t}\r\n\t\t\t\r\n\t\t\tbglayer.add(bgRect)\r\n\t\t\t//stage.add(bglayer)\r\n\t\t\t//bglayer.moveToBottom()\r\n\t\t\tbglayer.draw()\r\n\t}\r\n\r\n\tfunction generateShapes() {\r\n\t\tlet x;\r\n\t\tfor (x =0; x<5; x++){\r\n\r\n\t\tif (x%2 == 0){\r\n\t\t\tShapelayer.add(\r\n\t\t\tnew Konva.Rect({\r\n\t\t\t  x: Math.random() * stage.width(),\r\n\t\t\t  y: Math.random() * stage.height(),\r\n\t\t\t  width: 50 + Math.random() * 50,\r\n\t\t\t  height: 50 + Math.random() * 50,\r\n\t\t\t  fill: Konva.Util.getRandomColor(),\r\n\t\t\t  rotation: Math.random() * 360,\r\n\t\t\t  draggable: true,\r\n\t\t\t  name: 'object'\r\n\t\t\t})\r\n\t\t  );}\r\n\t\t  else {\r\n\t\t\tShapelayer.add(new Konva.Circle({\r\n\t\t\tx: Math.random() * stage.width(),\r\n\t\t\ty: Math.random() * stage.height(),\r\n\t\t\tradius: 70,\r\n\t\t\t  width: 50 + Math.random() * 50,\r\n\t\t\t  height: 50 + Math.random() * 50,\r\n\t\t\tfill: Konva.Util.getRandomColor(),\r\n\t\t\tstroke: Konva.Util.getRandomColor(),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\t  rotation: Math.random() * 360,\r\n\t\t\t  draggable: true,\r\n\t\t\t  name: 'object'\r\n\t\t\t}));\r\n\t\t  }\r\n\t\t\tstage.add(Shapelayer);\r\n\t\t\tShapelayer.draw();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearCanvas() {\r\n\t\t//This basically destorys the layer.\r\n\t\tstage.destroyChildren();\r\n\t\tconsole.log(stage.getLayers());\r\n\t\tstage = new Konva.Stage({\r\n\t\t\tcontainer: 'konva-stage',   // id of container <div>\r\n\t\t\twidth: 725,\r\n\t\t\theight: 350\r\n\t\t});\r\n\t\tlayer = new Konva.Layer();\r\n\t\tbglayer = new Konva.Layer();\r\n\t\tstage.add(bglayer)\r\n\t\tbglayer.moveToBottom()\r\n\t\tconsole.log(\"Canvas was cleared\");\t\r\n\t}\r\n\r\n\tfunction deleteLastElement() {\r\n\t\t//This basically destorys the layer, so we will use it to delete last element.\r\n\t\tlayer.destroy();\r\n\t\tlayer = new Konva.Layer();\r\n\t}\r\n\r\n\tfunction downloadURI(uri, name) {\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n\tfunction downloadIMG() {\r\n\t\t//remove transformer from the rect or selected shapes\r\n\t\tstage.find('Transformer').destroy();\r\n\t\t// reseting the canvas size incase user is using on mobile and downloads image for twitter which should be enlarged na of right dimension.\r\n\t\t//stage.width = 780;\r\n\t\t//stage.height = 350;\r\n\r\n\t\tlet isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\t\tif (isMobile) {\r\n\t\t\t  console.log(\"You on Mobile\")\r\n\t\t\t  if (document.querySelector('#fb:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ln:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#tw:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n\t\t\t\t\t}\r\n\t\t} else {\r\n  \t\t\tconsole.log(\"You on Desktop\")\r\n\t\t\t\t\tif (document.querySelector('#fb:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ln:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#tw:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n\t\t\t\t\t}\r\n\t}\r\n\tafterDownload();\r\n\t}\r\n\r\n\tfunction openUploadPopUp(){\r\n\t\tdocument.getElementById('userImgUpload').click()\r\n\t}\r\n\r\n\tfunction addIMGtoStage(event){\r\n\t\tvar image = new Image();\r\n\t\timage.src = URL.createObjectURL(event.target.files[0]);\r\n\r\n\t\timage.onload = function () {\r\n\t\t\tlet newIMG = new Konva.Image({\r\n\t\t\tx: 50,\r\n\t\t\ty: 50,\r\n\t\t\timage: image,\r\n\t\t\twidth: 106,\r\n\t\t\theight: 118,\r\n\t\t\tdraggable:true,\r\n\t\t\tname: 'object'\r\n\t\t\t});\r\n\t\t\tlayer = new Konva.Layer();\r\n\t\t\tlayer.add(newIMG);\r\n\t\t\tlayer.batchDraw();\r\n\t\t\tstage.add(layer)\r\n\t\t}\r\n\t}\r\n\r\n\tbeforeUpdate(() => {\r\n\t\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 725;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n\t\tlayer = new Konva.Layer();\r\n\t});\r\n\r\n\tafterUpdate(() =>{\r\n\t\tconsole.log(\"AfterUpdate was called\");\r\n\t\tfunction fitStageIntoParentContainer() {\r\n        let lcontainer = document.getElementById('stage-parent');\r\n\r\n        // now we need to fit stage into parent\r\n        var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n        // to do this we need to scale the stage\r\n        var scale = containerWidth / width;\r\n\r\n        stage.width(width * scale);\r\n        stage.height(height * scale);\r\n        stage.scale({ x: scale, y: scale });\r\n        stage.draw();\r\n      }\r\n\r\n      fitStageIntoParentContainer();\r\n      // adapt the stage on any window resize\r\n      window.addEventListener('resize', fitStageIntoParentContainer);\r\n\t});\r\n\r\n\tonMount(() => {\r\n\t\tconsole.log(\"OnMount was called\");\r\n\t\tconsole.log(\"Checking for Pro Access\");\r\n\t\tproAccessCheck();\r\n\t\t\r\n\t\t// first we need to create a stage\r\n\t\tstage = new Konva.Stage({\r\n\t\t\tcontainer: 'konva-stage',   // id of container <div>\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t});\r\n\t\tbglayer = new Konva.Layer();\r\n\t\tstage.add(bglayer)\r\n\t\tbglayer.moveToBottom()\r\n\r\n\t\tlet tooltipLayer = new Konva.Layer();\r\n\t\tlet tooltip = new Konva.Label({\r\n\t\t\topacity: 0.75,\r\n\t\t\tvisible: false,\r\n\t\t\tlistening: false\r\n\t\t  });\r\n\t\ttooltip.add(\r\n\t\t\tnew Konva.Tag({\r\n\t\t\t  fill: 'black',\r\n\t\t\t  pointerDirection: 'down',\r\n\t\t\t  pointerWidth: 10,\r\n\t\t\t  pointerHeight: 10,\r\n\t\t\t  lineJoin: 'round',\r\n\t\t\t  shadowColor: 'black',\r\n\t\t\t  shadowBlur: 10,\r\n\t\t\t  shadowOffset: 10,\r\n\t\t\t  shadowOpacity: 0.2\r\n\t\t\t})\r\n\t\t  );\r\n\t\ttooltip.add(\r\n\t\t  new Konva.Text({\r\n\t\t\ttext: 'Test',\r\n\t\t\tfontFamily: 'Calibri',\r\n\t\t\tfontSize: 18,\r\n\t\t\tpadding: 5,\r\n\t\t\tfill: 'white'\r\n\t\t  })\r\n\t\t);\r\n\t\t\r\n\t\ttooltipLayer.add(tooltip);\r\n\r\n\t\t//generateShapes()\r\n\t\t// were can we snap our objects?\r\n\t\tfunction getLineGuideStops(skipShape) {\r\n\t\t\t// we can snap to stage borders and the center of the stage\r\n\t\t\tlet vertical = [0, stage.width() / 2, stage.width()];\r\n\t\t\tlet horizontal = [0, stage.height() / 2, stage.height()];\r\n\t\t\t// and we snap over edges and center of each object on the canvas\r\n\t\t\tstage.find('.object').forEach(guideItem => {\r\n\t\t\t  if (guideItem === skipShape) {\r\n\t\t\t\treturn;\r\n\t\t\t  }\r\n\t\t\t  let box = guideItem.getClientRect();\r\n\t\t\t  // and we can snap to all edges of shapes\r\n\t\t\t  vertical.push([box.x, box.x + box.width, box.x + box.width / 2]);\r\n\t\t\t  horizontal.push([box.y, box.y + box.height, box.y + box.height / 2]);\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t  vertical: vertical.flat(),\r\n\t\t\t  horizontal: horizontal.flat()\r\n\t\t\t};\r\n\t\t  }\r\n\t\t  // what points of the object will trigger to snapping?\r\n\t\t  // it can be just center of the object\r\n\t\t  // but we will enable all edges and center\r\n\t\tfunction getObjectSnappingEdges(node) {\r\n\t\t\tlet box = node.getClientRect();\r\n\t\t\treturn {\r\n\t\t\t  vertical: [\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.x),\r\n\t\t\t\t  offset: Math.round(node.x() - box.x),\r\n\t\t\t\t  snap: 'start'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.x + box.width / 2),\r\n\t\t\t\t  offset: Math.round(node.x() - box.x - box.width / 2),\r\n\t\t\t\t  snap: 'center'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.x + box.width),\r\n\t\t\t\t  offset: Math.round(node.x() - box.x - box.width),\r\n\t\t\t\t  snap: 'end'\r\n\t\t\t\t}\r\n\t\t\t  ],\r\n\t\t\t  horizontal: [\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.y),\r\n\t\t\t\t  offset: Math.round(node.y() - box.y),\r\n\t\t\t\t  snap: 'start'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.y + box.height / 2),\r\n\t\t\t\t  offset: Math.round(node.y() - box.y - box.height / 2),\r\n\t\t\t\t  snap: 'center'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.y + box.height),\r\n\t\t\t\t  offset: Math.round(node.y() - box.y - box.height),\r\n\t\t\t\t  snap: 'end'\r\n\t\t\t\t}\r\n\t\t\t  ]\r\n\t\t\t};\r\n\t\t  }\r\n\t\t  // find all snapping possibilities\r\n\t\tfunction getGuides(lineGuideStops, itemBounds) {\r\n\t\t\tlet resultV = [];\r\n\t\t\tlet resultH = [];\r\n\t\t\tlineGuideStops.vertical.forEach(lineGuide => {\r\n\t\t\t  itemBounds.vertical.forEach(itemBound => {\r\n\t\t\t\tlet diff = Math.abs(lineGuide - itemBound.guide);\r\n\t\t\t\t// if the distance between guild line and object snap point is close we can consider this for snapping\r\n\t\t\t\tif (diff < GUIDELINE_OFFSET) {\r\n\t\t\t\t  resultV.push({\r\n\t\t\t\t\tlineGuide: lineGuide,\r\n\t\t\t\t\tdiff: diff,\r\n\t\t\t\t\tsnap: itemBound.snap,\r\n\t\t\t\t\toffset: itemBound.offset\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t});\r\n\t\t\tlineGuideStops.horizontal.forEach(lineGuide => {\r\n\t\t\t  itemBounds.horizontal.forEach(itemBound => {\r\n\t\t\t\tlet diff = Math.abs(lineGuide - itemBound.guide);\r\n\t\t\t\tif (diff < GUIDELINE_OFFSET) {\r\n\t\t\t\t  resultH.push({\r\n\t\t\t\t\tlineGuide: lineGuide,\r\n\t\t\t\t\tdiff: diff,\r\n\t\t\t\t\tsnap: itemBound.snap,\r\n\t\t\t\t\toffset: itemBound.offset\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t});\r\n\t\t  let guides = [];\r\n\t\t\t// find closest snap\r\n\t\t  let minV = resultV.sort((a, b) => a.diff - b.diff)[0];\r\n\t\t  let minH = resultH.sort((a, b) => a.diff - b.diff)[0];\r\n\t\t  if (minV) {\r\n\t\t\t  guides.push({\r\n\t\t\t\tlineGuide: minV.lineGuide,\r\n\t\t\t\toffset: minV.offset,\r\n\t\t\t\torientation: 'V',\r\n\t\t\t\tsnap: minV.snap\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  if (minH) {\r\n\t\t\t  guides.push({\r\n\t\t\t\tlineGuide: minH.lineGuide,\r\n\t\t\t\toffset: minH.offset,\r\n\t\t\t\torientation: 'H',\r\n\t\t\t\tsnap: minH.snap\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  return guides;\r\n\t\t}\r\n\t\tfunction drawGuides(guides) {\r\n\t\t\tguides.forEach(lg => {\r\n\t\t\t  if (lg.orientation === 'H') {\r\n\t\t\t\tlet line = new Konva.Line({\r\n\t\t\t\t  points: [-6000, lg.lineGuide, 6000, lg.lineGuide],\r\n\t\t\t\t  stroke: 'rgb(0, 161, 255)',\r\n\t\t\t\t  strokeWidth: 1,\r\n\t\t\t\t  name: 'guid-line',\r\n\t\t\t\t  dash: [4, 6]\r\n\t\t\t\t});\r\n\t\t\t\tlayer.add(line);\r\n\t\t\t\tlayer.batchDraw();\r\n\t\t\t  } else if (lg.orientation === 'V') {\r\n\t\t\t\tlet line = new Konva.Line({\r\n\t\t\t\t  points: [lg.lineGuide, -6000, lg.lineGuide, 6000],\r\n\t\t\t\t  stroke: 'rgb(0, 161, 255)',\r\n\t\t\t\t  strokeWidth: 1,\r\n\t\t\t\t  name: 'guid-line',\r\n\t\t\t\t  dash: [4, 6]\r\n\t\t\t\t});\r\n\t\t\t\tlayer.add(line);\r\n\t\t\t\tlayer.batchDraw();\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t  }\r\n\t\tlayer.on('dragmove', function(e) {\r\n\t\t\t// clear all previous lines on the screen\r\n\t\t\tlayer.find('.guid-line').destroy();\r\n\t\t\t// find possible snapping lines\r\n\t\t\tlet lineGuideStops = getLineGuideStops(e.target);\r\n\t\t\t// find snapping points of current object\r\n\t\t\tlet itemBounds = getObjectSnappingEdges(e.target);\r\n\t\t\t// now find where can we snap current object\r\n\t\t\tlet guides = getGuides(lineGuideStops, itemBounds);\r\n\t\t\t// do nothing of no snapping\r\n\t\t\tif (!guides.length) {\r\n\t\t\t  return;\r\n\t\t\t}\r\n\t\tdrawGuides(guides);\r\n\t\t// now force object position\r\n\t\tguides.forEach(lg => {\r\n\t\t\t  switch (lg.snap) {\r\n\t\t\t\tcase 'start': {\r\n\t\t\t\t  switch (lg.orientation) {\r\n\t\t\t\t\tcase 'V': {\r\n\t\t\t\t\t  e.target.x(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase 'H': {\r\n\t\t\t\t\t  e.target.y(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'center': {\r\n\t\t\t\t  switch (lg.orientation) {\r\n\t\t\t\t\tcase 'V': {\r\n\t\t\t\t\t  e.target.x(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase 'H': {\r\n\t\t\t\t\t  e.target.y(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'end': {\r\n\t\t\t\t  switch (lg.orientation) {\r\n\t\t\t\t\tcase 'V': {\r\n\t\t\t\t\t  e.target.x(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase 'H': {\r\n\t\t\t\t\t  e.target.y(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t  });\r\n\t\tlayer.on('dragend', function(e) {\r\n\t\t  // clear all previous lines on the screen\r\n\t\t  layer.find('.guid-line').destroy();\r\n\t\t  layer.batchDraw();\r\n\t\t});\r\n\t\tlayer.draw();\r\n\t\t\r\n\t\tstage.on('click tap', function(e) {\r\n\t\t  // if click on empty area - remove all transformers\r\n\t\t  if (e.target === stage) {\r\n\t\t\tstage.find('Transformer').destroy();\r\n\t\t\tlayer.draw();\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  // do nothing if clicked NOT on our rectangles\r\n\t\t  if (!e.target.hasName('object')) {\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  // remove old transformers\r\n\t\t  // TODO: we can skip it if current rect is already selected\r\n\t\t  stage.find('Transformer').destroy();\r\n\t\t  // create new transformer\r\n\t\t  let tr = new Konva.Transformer();\r\n\t\t  layer.add(tr);\r\n\t\t  tr.attachTo(e.target);\r\n\t\t  layer.draw();\r\n\t\t  let mousePos = e.getStage().getPointerPosition();\r\n\t\t  tooltip.position({\r\n\t\t\t  x: mousePos.x,\r\n\t\t\t  y: mousePos.y - 5\r\n\t\t  });\r\n\t\t  tooltip\r\n\t\t\t  .getText()\r\n\t\t\t  .text('object: ' + e.id() + ', color: ' + e.fill());\r\n\t\t\ttooltip.show();\r\n\t\t\ttooltipLayer.batchDraw();\r\n\t\t  });\r\n\t\t\r\n\t\tstage.on('mouseout', function(evt) {\r\n\t\t  tooltip.hide();\r\n\t\t  tooltipLayer.draw();\r\n\t\t});\r\n\r\n\t\t// add the layer to the stage\r\n\t\tstage.add(tooltipLayer);\r\n\t\tstage.add(layer);\r\n\t\t// draw the image\r\n\t\tlayer.draw();\r\n\t\t\r\n\t\t});\r\n\r\n\t</script>\r\n\t<div>\r\n\t\t<!--<div class=\"position-fixed\" style=\"z-index: 9999999\">\r\n\t\t\t<span class=\"badge badge-warning d-inline-block d-sm-none\">XS</span>\r\n\t\t\t<span class=\"badge badge-warning d-none d-sm-inline-block d-md-none\">SM</span>\r\n\t\t\t<span class=\"badge badge-warning d-none d-md-inline-block d-lg-none\">MD</span>\r\n\t\t\t<span class=\"badge badge-warning d-none d-lg-inline-block d-xl-none\">LG</span>\r\n\t\t\t<span class=\"badge badge-warning d-none d-xl-inline-block\">XL</span>\r\n\t\t</div>\t-->\t\r\n\r\n\t<Row class=\"mt-3\">\r\n\t\t<!-- Canvas / Stage / Layer Component-->\r\n\t\t<Col lg=\"6\">\r\n\t\t\t<div id=\"stage-parent\">\r\n\t\t\t\t\t<div id=\"konva-stage\"></div>\r\n\t\t\t</div>\r\n\t\t\t<Row class=\"mt-2\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t<Button block color=\"success\" size=\"lg\" on:click={toggleLg}>Select and Download</Button>\r\n\t\t\t\t<Modal isOpen={open} {toggle} {size}>\r\n\t\t\t\t\t<ModalHeader {toggle}>Select Your Channels</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t  <Row>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t\t<CustomInput\r\n        type=\"checkbox\"\r\n        name=\"fb\" id=\"fb\" label=\"Facebook\"  />\r\n\t\t\t\t\t\t  </Col>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t\t<CustomInput\r\n        type=\"checkbox\"\r\n        name=\"tw\" id=\"tw\" label=\"Twitter\" />\r\n\t\t\t\t\t\t  </Col>\r\n\t\t\t\t\t  </Row>\r\n\t\t\t\t\t  <Row>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t\t<CustomInput\r\n        type=\"checkbox\"\r\n        name=\"ln\" id=\"ln\" label=\"LinkedIn\" />\r\n\t\t\t\t\t\t  </Col>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t\t<CustomInput\r\n        type=\"checkbox\"\r\n        name=\"ig\" id=\"ig\" label=\"Instagram (Soon)\" disabled />\r\n\t\t\t\t\t\t  </Col>\r\n\t\t\t\t\t  </Row>\r\n\t\t\t\t\t  <Row>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t  <div class=\"centerInfoText\">\r\n\t\t\t\t\t\t\t{#if toRemix}\r\n\t\t\t\t\t\t\t<span>Content WILL be remixed and unique. You can change the setting in \"Remix\" Tab.</span>\r\n\t\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t<span>Content WILL NOT be remixed and unique. You can change the setting in \"Remix\" Tab.</span>\r\n\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t  </Row>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t  <Button color=\"primary\" on:click={selectAndDownload}>\r\n\t\t\t\t\t\tDownload My Files\r\n\t\t\t\t\t  </Button>\r\n\t\t\t\t\t  <Button color=\"secondary\" on:click={toggle}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t  </Button>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t  </Modal>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Col>\r\n\r\n\t<Col lg=\"5\" offset=\"1\">\r\n<Row>\r\n<Col>\r\n\t<Tabs>\r\n\t\t<TabList>\r\n\t\t\t<Tab><h4>✏ Text</h4></Tab>\r\n\t\t\t<Tab><h4>🖼 Background</h4></Tab>\r\n\t\t\t<Tab><h4>💡 Idea</h4></Tab>\r\n\t\t\t<Tab><h4>✨Remix</h4></Tab>\r\n\t\t</TabList>\r\n\t\r\n\t\t<TabPanel>\r\n\t\t<!-- Text Editor Component-->\r\n\t\t<Row class=\"mt-3\">\r\n\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t<Label for=\"inputText\">Enter Text:-</Label>\r\n\t\t\t</Col>\r\n\t\t\t<Col lg=\"5\">\r\n\t\t\t\t<Input type=\"textarea\" placeholder=\"Happy Birthday!\" name=\"userText\" id=\"userText\"/>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t<Row class=\"mt-3\">\r\n\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t<Label for=\"inputColor\">Font Color:-</Label>\r\n\t\t\t</Col>\r\n\t\t\t<Col lg=\"5\">\r\n\t\t\t\t<Input\r\n\t\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\t\tname=\"color\"\r\n\t\t\t\t\t\tid=\"userTextColor\"\r\n\t\t\t\t\t\tplaceholder=\"colorPicker\" />\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t<Row>\r\n\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t<Label for=\"inputFont\">Font Type:-</Label>\r\n\t\t\t</Col>\r\n\t\t\t<Col lg=\"5\">\r\n\t\t\t\t<Input type=\"select\" id=\"userTextFonts\" name=\"userTextFonts\">\r\n\t\t\t\t\t<option value=\"verdana\">Verdana</option>\r\n\t\t\t\t\t<option selected value=\"Calibri\">Calibri</option>\r\n\t\t\t\t\t<option value=\"sans-serif\">Sans-serif</option>\r\n\t\t\t\t\t<option value=\"cursive\">Cursive</option>\r\n\t\t\t\t\t<option value=\"fantasy\">Fantasy</option>\r\n\t\t\t\t\t<option value=\"monospace\">Monospace</option>\r\n\t\t\t\t\t<option value=\"'Helvetica Neue'\">Helvetica Neue</option>\r\n\t\t\t\t\t<option value=\"Helvetica\">Helvetica</option>\r\n\t\t\t\t\t<option value=\"Arial\">Arial</option>\r\n\t\t\t\t</Input>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t<Row class=\"mt-3\">\r\n\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t<Label for=\"inputFontSize\">Font Size:-</Label>\r\n\t\t\t</Col>\r\n\t\t\t<Col lg=\"5\">\r\n\t\t\t\t<Input type=\"number\" placeholder=\"30\" min=\"0\" max=\"100\" name=\"userTextSize\" id=\"userTextSize\"/>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t<Row class=\"mt-3\">\r\n\t\t\t<Col sm=\"12\">\r\n\t\t\t\t<Button class=\"m-1\" block color=\"success\" size=\"lg\" on:click={addText}>Add New Text</Button>\r\n\t\t\t</Col>\r\n\t\t\t<Col sm=\"12\">\r\n\t\t\t\t<Button class=\"m-1\" block color=\"danger\" size=\"lg\" on:click={deleteLastElement}>Delete Last Element</Button>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t</TabPanel>\r\n\t\r\n\t\t<TabPanel>\r\n\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t\t<Label for=\"inputColor\">Add Background Color</Label>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg=\"5\">\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\t\tname=\"bgcolor\"\r\n\t\t\t\t\t\tvalue=\"#FFFFFF\"\r\n\t\t\t\t\t\tid=\"userBGcolor\"\r\n\t\t\t\t\t\tplaceholder=\"colorPicker\" />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t<Button class=\"m-1\" block color=\"secondary\" size=\"lg\" on:click={addBgColor}>Apply BG</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t\t<Button class=\"m-1\" block outline color=\"danger\" size=\"lg\" on:click={clearCanvas}>Clear Canvas</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Label for=\"randomBg\">Apply Random Background:-</Label>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t<Button class=\"m-1\" block color=\"success\" size=\"lg\" on:click={randomBGcolor}>Color</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t<Button class=\"m-1\" block color=\"info\" size=\"lg\" on:click={generateShapes}>Shapes</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t<Button class=\"m-1\" block color=\"warning\" size=\"lg\" on:click={remixPattern}>Pattern</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Label for=\"randomBg\">Upload Image (Please apply Background before uploading an Image):-</Label>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t<Button class=\"m-1\" block color=\"primary\" size=\"lg\" on:click={openUploadPopUp}>Upload Image</Button>\r\n\t\t\t\t\t<Input type=\"file\" name=\"file\" id=\"userImgUpload\" on:change={addIMGtoStage} hidden/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t</TabPanel>\r\n\t\t<TabPanel>\r\n\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h3>Content Inspiration</h3>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tGet inspiration for Content and Designs to help you get started. Click on the button to generate random idea.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{#if allowProAccess}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm=\"12\" md=\"{{ size: 6, offset: 3 }}\">\r\n\t\t\t\t<Button class=\"m-1\" block color=\"success\" size=\"lg\" on:click={generateIdea}>Generate Idea</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t<div class=\"marketingTopic\">\r\n\t\t\t\t\t\t{marketingIdea}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{:else}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm=\"12\" class='text-center'>\r\n\t\t\t\t\t<h4 class=\"text-warning\">Access this feature by upgrading to PRO.</h4>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{/if}\r\n\t\t</TabPanel>\r\n\t\t<TabPanel>\r\n\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h3>Remix Content</h3>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\tRemix Your Content for all Designs for different Social Media Channels.\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{#if allowProAccess}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Alert color=\"light\">\r\n\t\t\t\t\tRemix will USE your design and generate DIFFERENT styles of it. You can toggle it here. This is ON by Default.\t\r\n\t\t\t\t\t</Alert>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm=\"12\" md=\"{{ size: 6, offset: 3 }}\">\r\n\t\t\t\t<Button class=\"m-1\" block color=\"warning\" size=\"lg\" on:click={()=>{toRemix=!toRemix;}}>Toggle Remix.</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col sm=\"12\" md=\"{{ size: 6, offset: 3 }}\">\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t<div class=\"marketingTopic\"><h4>Status:- {#if toRemix}\r\n\t\t\t\t\t\tI want Remixed Content.\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\tI want Same Design.\r\n\t\t\t\t\t{/if}</h4></div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{:else}\r\n\t\t\t<Row>\r\n\t\t\t\t<Col sm=\"12\" class='text-center'>\r\n\t\t\t\t\t<h4 class=\"text-warning\">Access this feature by upgrading to PRO.</h4>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t{/if}\r\n\t\t</TabPanel>\r\n\t</Tabs>\r\n</Col>\r\n</Row>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t<Container class=\"mt-2\" fluid>\r\n\t\t\t\t<Card body>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<h5 class=\"text-info\">Tips to get started</h5>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t\t\t<p>1. Start by choosing a 🖼<b>Background</b>. You can take idea on what to make from 💡<b>Idea</b>.</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t\t\t<p>2. Add a <b>Logo</b> with Upload Image option in the bottom of 🖼<b>Background</b> tab.</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t\t\t<p>3. Then write some text, customize and Add with the ✏ <b>Text</b> option.</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col md=\"3\">\r\n\t\t\t\t\t\t\t<p>4. Add shapes, or enable/disable ✨ <b>Remix</b> option as per your need. Download and share your amazing content!</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Card>\r\n\t\t</Container>\r\n\t</div>\r\n",
    "<svelte:head>\r\n<!-- Bootstrap CSS -->\t\r\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n<meta name=\"Description\" content=\"Designtack is an online tool to quickly design social media content, in bulk. We help you save your time on creating content for your social media channels.\">\r\n<!-- Cookie Consent -->\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.wpcc.io/lib/1.0.2/cookieconsent.min.css\" />\r\n<script src=\"https://cdn.wpcc.io/lib/1.0.2/cookieconsent.min.js\"></script>\r\n<script>\r\n\twindow.addEventListener(\"load\", function(){window.wpcc.init({\"border\":\"normal\",\"corners\":\"small\",\"colors\":{\"popup\":{\"background\":\"#edfdfa\",\"text\":\"#000000\",\"border\":\"#5ec2b6\"},\"button\":{\"background\":\"#5ec2b6\",\"text\":\"#ffffff\"}},\"fontsize\":\"small\",\"content\":{\"href\":\"/PrivacyPolicy\"}})});\r\n</script>\r\n</svelte:head>\r\n<style>\r\n\tiframe {\r\n\t\tmax-width: 560px;\r\n\t\twidth: 100%;\r\n\t}\r\n</style>\r\n<script>\r\n  import {Row, Col, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n  let hpVectorImg='./images/mainHPimg.png';\r\n  let logo = 'https://i.imgur.com/5CHnbDm.png';\r\n\r\n  let vectFirst = './images/vectr_dodm.png' \r\n  let vectSecond = './images/vectr_contentMulti.png';\r\n  let vectrThird = './images/vectr_variation.png';\r\n\r\n</script>\r\n<div>\r\n\t<!-- Navbar above-->\r\n\t<Row class='h-25 align-items-center py-4 ml-3'>\r\n\t\t<Col lg=\"6\" offset=\"1\">\r\n\t\t\t<h1 class=\"display-4\">Tired of Creating Social Media Content?</h1>\r\n\t\t\t<h4>Designtack saves you time and does all the hard-work. </h4>\r\n\t\t</Col>\r\n\t\t<Col lg=\"5\">\r\n\t\t\t<div class=\"m-1\">\r\n\t\t\t<img src={hpVectorImg} alt=\"hpVector\" class=\"img-fluid\" width=\"800\" height=\"600\" />\r\n\t\t</div>\r\n\t\t</Col>\r\n\t</Row>\t\r\n\t<Row>\r\n\t\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t\t<Link to=\"/Login\"><Button class=\"w-25\" color=\"success\" size=\"lg\">Ready? Let's Create!</Button></Link>\r\n\t\t</Col>\r\n\t\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t\t<a href=\"#scrollToInfo\" >Learn more</a>\r\n\t\t</Col>\r\n\t</Row>\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"p-4\">\r\n\t\t\t<h1 class=\"text-center\">What is Designtack?</h1>\r\n\t\t</Col>\r\n\t\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t\t<h4>Designtack is a tool which can design unique social media content, in bulk. Learn how it works in this quick video.</h4>\r\n\t\t</Col>\r\n\t\t<Col sm=\"12\" class=\"pt-4 text-center\" fluid>\r\n\t\t\t<iframe title=\"official how-to video\" height=\"315\" src=\"https://www.youtube.com/embed/t0HGiZLyvWs?controls=0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" SameSite=\"Secure\"></iframe>\r\n\t\t</Col>\r\n\t\t<Col sm=\"12\" class=\"pt-4 text-center\" fluid>\r\n\t\t\t<a href=\"https://www.producthunt.com/posts/designtack?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-designtack\" target=\"_blank\"><img src=\"https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=211183&theme=dark\" alt=\"Designtack - Create Unique Social Media Content, in Bulk! | Product Hunt Embed\" style=\"width: 250px; height: 44px;\" width=\"250px\" height=\"44px\" /></a>\r\n\t\t</Col>\r\n\t</Row>\r\n\t<div class=\"py-5\">\r\n\t\t<div class=\"py-5\">\r\n\t\t  <div class=\"row align-items-center m-5\">\r\n\t\t\t<div class=\"col-sm-12 text-center\">\r\n\t\t\t\t<h1 class=\"text-primary text-center\">Features</h1>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-lg-6 order-2 order-lg-1\">\r\n\t\t\t  <h2 class=\"font-weight-light text-primary\">Design Once. Design Many.</h2>\r\n\t\t\t  <h4 class=\"font-italic text-muted mb-4\">You have to design once and we will create the rest for you.</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-lg-5 px-5 mx-auto order-1 order-lg-2\"><img src={vectFirst} alt=\"Design once, design many.\" height=\"709\" width=\"629\" class=\"img-fluid mb-4 mb-lg-0\"></div>\r\n\t\t  </div>\r\n\t\t  <div class=\"row align-items-center m-5\">\r\n\t\t\t<div class=\"col-lg-5 px-5 mx-auto\"><img src={vectSecond} alt=\"Your Content is Multiplied.\" class=\"img-fluid mb-4 mb-lg-0\"></div>\r\n\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t  <h2 class=\"font-weight-light text-primary\">Your Content. Multiplied.</h2>\r\n\t\t\t  <h4 class=\"font-italic text-muted mb-4\">Created for Twitter? We'll make it for Facebook, LinkedIn and more!</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"row align-items-center m-5\">\r\n\t\t\t\t<div class=\"col-lg-6 order-2 order-lg-1\">\r\n\t\t\t\t  <h2 class=\"font-weight-light text-primary\">Variety of Variations.</h2>\r\n\t\t\t\t  <h4 class=\"font-italic text-muted mb-4\">You can remix your content for different styles, for different platforms. Unique content made easy!</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-5 px-5 mx-auto order-1 order-lg-2\"><img src={vectrThird} height=\"709\" width=\"629\" alt=\"variations\" class=\"img-fluid mb-2 mb-lg-0\"></div>\r\n\t\t\t  </div>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t  </div>\r\n\r\n\t  <!-- Call to action by Boostrapious -->\r\n\t<div style=\"background-image: linear-gradient(to right, #43e97b 0%, #38f9d7 100%);\" class=\"jumbotron bg-cover text-white\">\r\n\t\t<div class=\"container py-5 text-center\">\r\n\t\t\t<h1 class=\"display-4\">Ready to Design your content?</h1>\r\n\t\t\t<p></p>\r\n\t\t\t<Link to=\"/Login\"><Button class=\"mt-2 w-25\" color=\"light\" size=\"lg\">Let's Create</Button></Link>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<!--Footer Menu Component-->\r\n\t<Footer />\r\n\t  <!-- End -->\r\n</div>\r\n",
    "<script>\n\timport { getContext } from 'svelte';\n\timport { TABS } from './Tabs.svelte';\n\n\tconst tab = {};\n\tconst { registerTab, selectTab, selectedTab } = getContext(TABS);\n\n\tregisterTab(tab);\n</script>\n\n<style>\n\tbutton {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tborder-bottom: 2px solid white;\n\t\tborder-radius: 0;\n\t\tmargin: 0;\n\t\tcolor: #ccc;\n\t}\n\t\n\t.selected {\n\t\tborder-bottom: 2px solid teal;\n\t\tcolor: #333;\n\t}\n</style>\n\n<button class:selected=\"{$selectedTab === tab}\" on:click=\"{() => selectTab(tab)}\">\n\t<slot></slot>\n</button>",
    "<div class=\"tab-list\">\n\t<slot></slot>\n</div>\n\n<style>\n\t.tab-list {\n\t\tborder-bottom: 1px solid teal;\n\t}\n</style>",
    "<svelte:head>\r\n\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n    Link {\r\n        color:lime;\r\n        text-decoration: none;\r\n    }\r\n</style>\r\n<script>\r\n  import { Router, Link,link, Route } from \"svelte-routing\";\r\n  import {Row, Container, Button, Col,Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem,NavLink,UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem} from 'sveltestrap';\r\n  \r\n  import App from './App.svelte';\r\n  import Home from './Home.svelte';\r\n  import Login from './Login.svelte';\r\n  import Pricing from './Pricing.svelte';\r\n  import About from './About.svelte';\r\n  import PrivacyPolicy from './PrivacyPolicy.svelte';\r\n  import TOS from './TOS.svelte';\r\n  import Support from './Support.svelte'\r\n\r\n  export let url = \"\";\r\n\r\n  let isOpen = false;\r\n\r\nfunction handleUpdate(event) {\r\n  isOpen = event.detail.isOpen;\r\n}\r\n\r\n</script>\r\n<Container fluid>\r\n    <!-- Navbar -->\r\n            <Router url=\"{url}\">\r\n                <Navbar class=\"navbar-expand-lg navbar-dark bg-primary\">\r\n                    <NavbarBrand href=\"/\">Designtack</NavbarBrand>\r\n                    <NavbarToggler on:click={() => (isOpen = !isOpen)} />\r\n                    <Collapse {isOpen} navbar expand=\"md\" on:update={handleUpdate}>\r\n                        <Nav class=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <a class=\"nav-link\" href=\"/Pricing\" use:link>Pricing</a>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <a class=\"nav-link\" href=\"/Support\" use:link>Support</a>\r\n                        </NavItem>\r\n                        <UncontrolledDropdown>\r\n                            <DropdownToggle nav caret>Legal</DropdownToggle>\r\n                            <DropdownMenu class=\"bg-primary\" right>\r\n                            <DropdownItem><a class=\"nav-link\" href=\"/PrivacyPolicy\" use:link>Privacy Policy</a></DropdownItem>\r\n                            <DropdownItem><a class=\"nav-link\" href=\"/TOS\" use:link>Terms</a></DropdownItem>\r\n                            <DropdownItem><a class=\"nav-link\" href=\"/About\" use:link>About</a></DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                        <NavItem>\r\n                            <a href=\"/Login\" use:link><Button color=\"info\">My Account</Button></a>\r\n                        </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n                <div>\r\n                    <Route path=\"/\" component=\"{Home}\" />\r\n                    <Route path=\"/Login\" component=\"{Login}\" />\r\n                    <Route path=\"/App\" component=\"{App}\" />\r\n                    <Route path=\"/Support\" component=\"{Support}\" />\r\n                    <Route path=\"/PrivacyPolicy\" component=\"{PrivacyPolicy}\" />\r\n                    <Route path=\"/TOS\" component=\"{TOS}\" />\r\n                    <Route path=\"/Pricing\" component=\"{Pricing}\" />\r\n                    <Route path=\"/About\" component=\"{About}\" />\r\n                  </div>\r\n            </Router>\r\n        </Container>\r\n"
  ],
  "names": [],
  "mappings": "AAaC,aAAa,cAAC,CAAC,AACd,SAAS,CAAE,KAAK,CACV,KAAK,CAAE,IAAI,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,AACnB,CAAC,AAEJ,eAAe,cAAC,CAAC,AAChB,MAAM,QAAQ,CACd,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,AACnB,CAAC,AACD,eAAe,cAAC,CAAC,AAChB,KAAK,CAAE,QAAQ,CACf,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,AACnB,CAAC;ACjBH,MAAM,cAAC,CAAC,AACP,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,AACZ,CAAC;ACJD,MAAM,cAAC,CAAC,AACP,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAC9B,aAAa,CAAE,CAAC,CAChB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,SAAS,cAAC,CAAC,AACV,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC7B,KAAK,CAAE,IAAI,AACZ,CAAC;AClBD,SAAS,eAAC,CAAC,AACV,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC9B,CAAC;ACHE,IAAI,eAAC,CAAC,AACF,MAAM,IAAI,CACV,eAAe,CAAE,IAAI,AACzB,CAAC"
}