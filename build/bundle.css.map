{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Datepicker.svelte",
    "..\\..\\Month.svelte",
    "..\\..\\NavBar.svelte",
    "..\\..\\Popover.svelte",
    "..\\..\\Week.svelte",
    "..\\..\\About.svelte",
    "..\\..\\App.svelte",
    "..\\..\\AppSumo.svelte",
    "..\\..\\Changelog.svelte",
    "..\\..\\Difference.svelte",
    "..\\..\\Footer.svelte",
    "..\\..\\Home.svelte",
    "..\\..\\Login.svelte",
    "..\\..\\NotFound.svelte",
    "..\\..\\PrivacyPolicy.svelte",
    "..\\..\\Profile.svelte",
    "..\\..\\Support.svelte",
    "..\\..\\TOS.svelte",
    "..\\..\\Tab.svelte",
    "..\\..\\TabList.svelte",
    "..\\..\\Template.svelte",
    "..\\..\\UseCases.svelte",
    "..\\..\\index.svelte",
    "..\\..\\newApp.svelte",
    "..\\..\\Aesthetic.svelte",
    "..\\..\\Blob.svelte",
    "..\\..\\Gradient.svelte",
    "..\\..\\HalfRect.svelte",
    "..\\..\\Quotes-2.svelte",
    "..\\..\\Quotes-3.svelte",
    "..\\..\\Quotes.svelte",
    "..\\..\\Rect.svelte",
    "..\\..\\Simple.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Month from './Month.svelte';\n  import NavBar from './NavBar.svelte';\n  import Popover from './Popover.svelte';\n  import { getMonths } from './lib/helpers';\n  import { formatDate, internationalize } from 'timeUtils';\n  import { keyCodes, keyCodesArray } from './lib/keyCodes';\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  const today = new Date();\n  const oneYear = 1000 * 60 * 60 * 24 * 365;\n\n  let popover;\n\n  export let format = '#{m}/#{d}/#{Y}';\n  export let start = new Date(Date.now() - oneYear);\n  export let end = new Date(Date.now() + oneYear);\n  export let selected = today;\n  export let dateChosen = false;\n  export let trigger = null;\n  export let selectableCallback = null;\n  export let weekStart = 0;\n  export let daysOfWeek = [\n    ['Sunday', 'Sun'],\n    ['Monday', 'Mon'],\n    ['Tuesday', 'Tue'],\n    ['Wednesday', 'Wed'],\n    ['Thursday', 'Thu'],\n    ['Friday', 'Fri'],\n    ['Saturday', 'Sat']\n  ];\n  export let monthsOfYear = [\n    ['January', 'Jan'],\n    ['February', 'Feb'],\n    ['March', 'Mar'],\n    ['April', 'Apr'],\n    ['May', 'May'],\n    ['June', 'Jun'],\n    ['July', 'Jul'],\n    ['August', 'Aug'],\n    ['September', 'Sep'],\n    ['October', 'Oct'],\n    ['November', 'Nov'],\n    ['December', 'Dec']\n  ];\n\n  selected = (\n    selected.getTime() < start.getTime()\n    || selected.getTime() > end.getTime()\n  ) ? start : selected;\n\n  export let style = '';\n\n  // theming variables:\n  export let buttonBackgroundColor = '#fff';\n  export let buttonBorderColor = '#eee';\n  export let buttonTextColor = '#333';\n  export let highlightColor = '#f7901e';\n  export let dayBackgroundColor = 'none';\n  export let dayTextColor = '#4a4a4a';\n  export let dayHighlightedBackgroundColor = '#efefef';\n  export let dayHighlightedTextColor = '#4a4a4a';\n\n  internationalize({ daysOfWeek, monthsOfYear });\n  let sortedDaysOfWeek = weekStart === 0 ? daysOfWeek : (() => {\n    let dow = daysOfWeek.slice();\n    dow.push(dow.shift());\n    return dow;\n  })();\n\n  let highlighted = today;\n  let shouldShakeDate = false;\n  let shakeHighlightTimeout;\n  let month = today.getMonth();\n  let year = today.getFullYear();\n\n  let isOpen = false;\n  let isClosing = false;\n\n  today.setHours(0, 0, 0, 0);\n\n  function assignmentHandler(formatted) {\n    if (!trigger) return;\n    trigger.innerHTML = formatted;\n  }\n\n  $: months = getMonths(start, end, selectableCallback, weekStart);\n\n  let monthIndex = 0;\n  $: {\n    monthIndex = 0;\n    for (let i = 0; i < months.length; i += 1) {\n      if (months[i].month === month && months[i].year === year) {\n        monthIndex = i;\n      }\n    }\n  }\n  $: visibleMonth = months[monthIndex];\n\n  $: visibleMonthId = year + month / 100;\n  $: lastVisibleDate = visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;\n  $: firstVisibleDate = visibleMonth.weeks[0].days[0].date;\n  $: canIncrementMonth = monthIndex < months.length - 1;\n  $: canDecrementMonth = monthIndex > 0;\n  $: wrapperStyle = `\n    --button-background-color: ${buttonBackgroundColor};\n    --button-border-color: ${buttonBorderColor};\n    --button-text-color: ${buttonTextColor};\n    --highlight-color: ${highlightColor};\n    --day-background-color: ${dayBackgroundColor};\n    --day-text-color: ${dayTextColor};\n    --day-highlighted-background-color: ${dayHighlightedBackgroundColor};\n    --day-highlighted-text-color: ${dayHighlightedTextColor};\n    ${style}\n  `;\n\n  export let formattedSelected;\n  $: {\n    formattedSelected = typeof format === 'function'\n      ? format(selected)\n      : formatDate(selected, format);\n  }\n\n  onMount(() => {\n    month = selected.getMonth();\n    year = selected.getFullYear();\n  });\n\n  function changeMonth(selectedMonth) {\n    month = selectedMonth;\n    highlighted = new Date(year, month, 1);\n  }\n\n  function incrementMonth(direction, day = 1) {\n    if (direction === 1 && !canIncrementMonth) return;\n    if (direction === -1 && !canDecrementMonth) return;\n    let current = new Date(year, month, 1);\n    current.setMonth(current.getMonth() + direction);\n    month = current.getMonth();\n    year = current.getFullYear();\n    highlighted = new Date(year, month, day);\n  }\n\n  function getDefaultHighlighted() {\n    return new Date(selected);\n  }\n\n  const getDay = (m, d, y) => {\n    let theMonth = months.find(aMonth => aMonth.month === m && aMonth.year === y);\n    if (!theMonth) return null;\n    // eslint-disable-next-line\n    for (let i = 0; i < theMonth.weeks.length; ++i) {\n      // eslint-disable-next-line\n      for (let j = 0; j < theMonth.weeks[i].days.length; ++j) {\n        let aDay = theMonth.weeks[i].days[j];\n        if (aDay.month === m && aDay.day === d && aDay.year === y) return aDay;\n      }\n    }\n    return null;\n  };\n\n  function incrementDayHighlighted(amount) {\n    let proposedDate = new Date(highlighted);\n    proposedDate.setDate(highlighted.getDate() + amount);\n    let correspondingDayObj = getDay(\n      proposedDate.getMonth(),\n      proposedDate.getDate(),\n      proposedDate.getFullYear()\n    );\n    if (!correspondingDayObj || !correspondingDayObj.isInRange) return;\n    highlighted = proposedDate;\n    if (amount > 0 && highlighted > lastVisibleDate) {\n      incrementMonth(1, highlighted.getDate());\n    }\n    if (amount < 0 && highlighted < firstVisibleDate) {\n      incrementMonth(-1, highlighted.getDate());\n    }\n  }\n\n  function checkIfVisibleDateIsSelectable(date) {\n    const proposedDay = getDay(date.getMonth(), date.getDate(), date.getFullYear());\n    return proposedDay && proposedDay.selectable;\n  }\n\n  function shakeDate(date) {\n    clearTimeout(shakeHighlightTimeout);\n    shouldShakeDate = date;\n    shakeHighlightTimeout = setTimeout(() => {\n      shouldShakeDate = false;\n    }, 700);\n  }\n\n  function assignValueToTrigger(formatted) {\n    assignmentHandler(formatted);\n  }\n\n  function registerSelection(chosen) {\n    if (!checkIfVisibleDateIsSelectable(chosen)) return shakeDate(chosen);\n    // eslint-disable-next-line\n    close();\n    selected = chosen;\n    dateChosen = true;\n    assignValueToTrigger(formattedSelected);\n    return dispatch('dateSelected', { date: chosen });\n  }\n\n  function handleKeyPress(evt) {\n    if (keyCodesArray.indexOf(evt.keyCode) === -1) return;\n    evt.preventDefault();\n    switch (evt.keyCode) {\n      case keyCodes.left:\n        incrementDayHighlighted(-1);\n        break;\n      case keyCodes.up:\n        incrementDayHighlighted(-7);\n        break;\n      case keyCodes.right:\n        incrementDayHighlighted(1);\n        break;\n      case keyCodes.down:\n        incrementDayHighlighted(7);\n        break;\n      case keyCodes.pgup:\n        incrementMonth(-1);\n        break;\n      case keyCodes.pgdown:\n        incrementMonth(1);\n        break;\n      case keyCodes.escape:\n        // eslint-disable-next-line\n        close();\n        break;\n      case keyCodes.enter:\n        registerSelection(highlighted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function registerClose() {\n    document.removeEventListener('keydown', handleKeyPress);\n    dispatch('close');\n  }\n\n  function close() {\n    popover.close();\n    registerClose();\n  }\n\n  function registerOpen() {\n    highlighted = getDefaultHighlighted();\n    month = selected.getMonth();\n    year = selected.getFullYear();\n    document.addEventListener('keydown', handleKeyPress);\n    dispatch('open');\n  }\n</script>\n\n<div\n  class=\"datepicker\"\n  class:open=\"{isOpen}\"\n  class:closing=\"{isClosing}\"\n  style={wrapperStyle}\n>\n  <Popover\n    bind:this=\"{popover}\"\n    bind:open=\"{isOpen}\"\n    bind:shrink=\"{isClosing}\"\n    {trigger}\n    on:opened=\"{registerOpen}\"\n    on:closed=\"{registerClose}\"\n  >\n    <div slot=\"trigger\">\n      <slot {selected} {formattedSelected}>\n        {#if !trigger}\n        <button class=\"calendar-button\" type=\"button\">\n          {formattedSelected}\n        </button>\n        {/if}\n      </slot>\n    </div>\n    <div slot=\"contents\">\n      <div class=\"calendar\">\n        <NavBar\n          {month}\n          {year}\n          {canIncrementMonth}\n          {canDecrementMonth}\n          {start}\n          {end}\n          {monthsOfYear}\n          on:monthSelected={e => changeMonth(e.detail)}\n          on:incrementMonth={e => incrementMonth(e.detail)}\n        />\n        <div class=\"legend\">\n          {#each sortedDaysOfWeek as day}\n          <span>{day[1]}</span>\n          {/each}\n        </div>\n        <Month\n          {visibleMonth}\n          {selected}\n          {highlighted}\n          {shouldShakeDate}\n          id={visibleMonthId}\n          on:dateSelected={e => registerSelection(e.detail)}\n        />\n      </div>\n    </div>\n  </Popover>\n</div>\n\n<style>\n  .datepicker {\n    display: inline-block;\n    margin: 0 auto;\n    text-align: center;\n    overflow: visible;\n  }\n\n  .calendar-button {\n    padding: 10px 20px;\n    border: 1px solid var(--button-border-color);\n    display: block;\n    text-align: center;\n    width: 300px;\n    text-decoration: none;\n    cursor: pointer;\n    background: var(--button-background-color);\n    color: var(--button-text-color);\n    border-radius: 7px;\n    box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  .calendar {\n    box-sizing: border-box;\n    position: relative;\n    overflow: hidden;\n    user-select: none;\n    width: 100vw;\n    padding: 10px;\n    padding-top: 0;\n  }\n\n  @media (min-width: 480px) {\n    .calendar {\n      height: auto;\n      width: 340px;\n      max-width: 100%;\n    }\n  }\n\n  .legend {\n    color: #4a4a4a;\n    padding: 10px 0;\n    margin-bottom: 5px;\n  }\n\n  .legend span {\n    width: 14.285714%;\n    display: inline-block;\n    text-align: center;\n  }\n</style>\n",
    "<script>\n  import Week from './Week.svelte';\n\n  export let id;\n  export let visibleMonth;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n\n  let lastId = id;\n  let direction;\n\n  $: {\n    direction = lastId < id ? 1 : -1;\n    lastId = id;\n  }\n</script>\n\n<div class=\"month-container\">\n  {#each visibleMonth.weeks as week (week.id) }\n    <Week \n      days={week.days} \n      {selected} \n      {highlighted} \n      {shouldShakeDate} \n      {direction}\n      on:dateSelected \n    />\n  {/each}\n</div>\n\n<style>\n  .month-container { \n    width: 100%;\n    display: -ms-grid;\n    display: grid;\n    -ms-grid-columns: 1fr;\n    -ms-grid-rows: 1fr;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let month;\n  export let year;\n  export let start;\n  export let end;\n  export let canIncrementMonth;\n  export let canDecrementMonth;\n  export let monthsOfYear;\n\n  let monthSelectorOpen = false;\n  let availableMonths;\n\n  $: {\n    let isOnLowerBoundary = start.getFullYear() === year;\n    let isOnUpperBoundary = end.getFullYear() === year;\n    availableMonths = monthsOfYear.map((m, i) => {\n      return Object.assign({}, {\n        name: m[0],\n        abbrev: m[1]\n      }, {\n        selectable:\n          (!isOnLowerBoundary && !isOnUpperBoundary)\n          || (\n            (!isOnLowerBoundary || i >= start.getMonth())\n            && (!isOnUpperBoundary || i <= end.getMonth())\n          )\n      });\n    });\n  }\n\n  function toggleMonthSelectorOpen() {\n    monthSelectorOpen = !monthSelectorOpen;\n  }\n\n  function monthSelected(event, { m, i }) {\n    event.stopPropagation();\n    if (!m.selectable) return;\n    dispatch('monthSelected', i);\n    toggleMonthSelectorOpen();\n  }\n</script>\n\n<div class=\"title\">\n  <div class=\"heading-section\">\n    <div class=\"control\" \n      class:enabled={canDecrementMonth}\n      on:click={() => dispatch('incrementMonth', -1)}>\n      <i class=\"arrow left\"></i>\n    </div>\n    <div class=\"label\" on:click={toggleMonthSelectorOpen}>\n      {monthsOfYear[month][0]} {year}\n    </div> \n    <div class=\"control\"\n      class:enabled={canIncrementMonth}\n      on:click={() => dispatch('incrementMonth', 1)}>\n      <i class=\"arrow right\"></i>\n    </div>\n  </div>\n  <div class=\"month-selector\" class:open={monthSelectorOpen}>\n    {#each availableMonths as monthDefinition, index}\n      <div \n        class=\"month-selector--month\" \n        class:selected={index === month}\n        class:selectable={monthDefinition.selectable}\n        on:click={e => monthSelected(e, { m: monthDefinition, i: index })}\n      >\n        <span>{monthDefinition.abbrev}</span>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .heading-section { \n    font-size: 20px;\n    padding: 24px 15px;\n    display: flex;\n    justify-content: space-between;\n    color: #3d4548;\n    font-weight: bold;\n  }\n  .label { \n    cursor: pointer;\n  }\n  .month-selector { \n    position: absolute;\n    top: 75px; \n    left: 0; \n    right: 0; \n    bottom: 0; \n    background-color: #fff;\n    transition: all 300ms; \n    transform: scale(1.2); \n    opacity: 0; \n    visibility: hidden;\n    z-index: 1;\n    text-align: center;\n  }\n  .month-selector.open { \n    transform: scale(1); \n    visibility: visible;\n    opacity: 1;\n  }\n  .month-selector--month { \n    width: 31.333%; \n    margin: .5%; \n    height: 23%;\n    display: inline-block;\n    color: #4a4a4a;\n    border: 1px solid #efefef;\n    opacity: 0.2;\n  }\n  .month-selector--month.selectable { \n    opacity: 1; \n  }\n  .month-selector--month.selectable:hover { \n    cursor: pointer;\n    box-shadow: 0px 0px 3px rgba(0,0,0,0.15);\n  }\n  .month-selector--month.selected { \n    background: var(--highlight-color);\n    color: #fff;\n  }\n  .month-selector--month:before { \n    content: ' ';\n    display: inline-block;\n    height: 100%;\n    vertical-align: middle;\n  }\n  .month-selector--month span { \n    vertical-align: middle; \n    display: inline-block;\n  }\n\n  .control { \n    padding: 0 8px;\n    opacity: 0.2;\n    transform: translateY(3px);\n  }\n\n  .control.enabled { \n    opacity: 1; \n    cursor: pointer;\n  }\n\n  .arrow {\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    border-style: solid;\n    border-color: #a9a9a9;\n    border-width: 0;\n    border-bottom-width: 2px;\n    border-right-width: 2px;\n  }\n\n  .arrow.right {\n    transform: rotate(-45deg);\n    -webkit-transform: rotate(-45deg);\n  }\n\n  .arrow.left {\n    transform: rotate(135deg);\n    -webkit-transform: rotate(135deg);\n  }\n\n</style>\n",
    "<script>\n  import { onMount, createEventDispatcher, tick } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let once = (el, evt, cb) => {\n    function handler() {\n      cb.apply(this, arguments);\n      el.removeEventListener(evt, handler);\n    }\n    el.addEventListener(evt, handler);\n  };\n\n  let popover;\n  let w;\n  let triggerContainer;\n  let contentsAnimated;\n  let contentsWrapper;\n  let translateY = 0;\n  let translateX = 0;\n\n  export let open = false;\n  export let shrink;\n  export let trigger;\n  export const close = () => {\n    shrink = true;\n    once(contentsAnimated, 'animationend', () => {\n      shrink = false;\n      open = false;\n      dispatch('closed');\n    });\n  };\n\n  function checkForFocusLoss(evt) {\n    if (!open) return;\n    let el = evt.target;\n    // eslint-disable-next-line\n    do {\n      if (el === popover) return;\n    // eslint-disable-next-line\n    } while (el = el.parentNode);\n    close();\n  }\n\n  onMount(() => {\n    document.addEventListener('click', checkForFocusLoss);\n    if (!trigger) return;\n    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));\n\n    // eslint-disable-next-line\n    return () => {\n      document.removeEventListener('click', checkForFocusLoss);\n    };\n  });\n\n  const getDistanceToEdges = async () => {\n    if (!open) { open = true; }\n    await tick();\n    let rect = contentsWrapper.getBoundingClientRect();\n    return {\n      top: rect.top + (-1 * translateY),\n      bottom: window.innerHeight - rect.bottom + translateY,\n      left: rect.left + (-1 * translateX),\n      right: document.body.clientWidth - rect.right + translateX\n    };\n  };\n\n  const getTranslate = async () => {\n    let dist = await getDistanceToEdges();\n    let x; let\n      y;\n    if (w < 480) {\n      y = dist.bottom;\n    } else if (dist.top < 0) {\n      y = Math.abs(dist.top);\n    } else if (dist.bottom < 0) {\n      y = dist.bottom;\n    } else {\n      y = 0;\n    }\n    if (dist.left < 0) {\n      x = Math.abs(dist.left);\n    } else if (dist.right < 0) {\n      x = dist.right;\n    } else {\n      x = 0;\n    }\n    return { x, y };\n  };\n\n  const doOpen = async () => {\n    const { x, y } = await getTranslate();\n\n    translateX = x;\n    translateY = y;\n    open = true;\n\n    dispatch('opened');\n  };\n</script>\n\n<svelte:window bind:innerWidth={w} />\n<div class=\"sc-popover\" bind:this={popover}>\n  <div class=\"trigger\" on:click={doOpen} bind:this={triggerContainer}>\n    <slot name=\"trigger\">\n    </slot>\n  </div>\n  <div \n    class=\"contents-wrapper\" \n    class:visible={open}\n    class:shrink={shrink}\n    style=\"transform: translate(-50%,-50%) translate({translateX}px, {translateY}px)\" \n    bind:this={contentsWrapper}>\n    <div class=\"contents\" bind:this={contentsAnimated}>\n      <div class=\"contents-inner\">\n        <slot name=\"contents\"></slot>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  .sc-popover { \n    position: relative;\n  }\n\n  .contents-wrapper { \n    transform: translate(-50%, -50%); \n    position: absolute;\n    top: 50%; \n    left: 50%; \n    transition: none;\n    z-index: 2;\n    display: none;\n  }\n\n  .contents { \n    background: #fff;\n    box-shadow: 0px 10px 26px rgba(0,0,0,0.4) ;\n    opacity: .8; \n    padding-top: 0;\n    display: none;\n    animation: grow 200ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  .contents-inner { \n    animation: fadeIn 400ms forwards;\n  }\n\n  .contents-wrapper.visible { \n    display: block;\n  }\n\n  .contents-wrapper.visible .contents { \n    opacity: 1; \n    transform: scale(1);\n    display: block;\n  }\n\n  .contents-wrapper.shrink .contents { \n    animation: shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  @keyframes grow { \n    0% { \n      transform: scale(.9,.1); \n      opacity: 0; \n    }\n    30% { \n      opacity: 1; \n    }\n    100% { \n      transform: scale(1);\n    }\n  }\n\n  @keyframes shrink { \n    0% { \n      transform: scale(1); \n      opacity: 1; \n    }\n    70% { \n      opacity: 1; \n    }\n    100% { \n      opacity: 0; \n      transform: scale(.9,.1);\n    }\n  }\n\n  @keyframes fadeIn { \n    0% { \n      opacity: 0; \n    }\n    50% { \n      opacity: 0;\n    }\n    100% { \n      opacity: 1; \n    }\n  }\n</style>\n",
    "<script>\n  import { areDatesEquivalent } from './lib/helpers';\n  import { fly, fade } from 'svelte/transition';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let days;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n  export let direction;\n</script>\n\n<div \n  class=\"week\" \n  in:fly|local={{ x: direction * 50, duration: 180, delay: 90 }}\n  out:fade|local={{ duration: 180 }}\n>\n  {#each days as day}\n    <div \n      class=\"day\" \n      class:outside-month={!day.partOfMonth}\n      class:is-today={day.isToday}\n      class:is-disabled={!day.selectable}\n    >\n      <button \n        class=\"day--label\" \n        class:selected={areDatesEquivalent(day.date, selected)}\n        class:highlighted={areDatesEquivalent(day.date, highlighted)}\n        class:shake-date={shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate)}\n        class:disabled={!day.selectable}\n        type=\"button\"\n        on:click={() => dispatch('dateSelected', day.date)}\n      >\n        {day.date.getDate()}\n      </button>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .week { \n    padding: 0;\n    margin: 0;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    flex-flow: row;\n    -webkit-flex-flow: row;\n    justify-content: space-around;\n    -ms-grid-column: 1;\n    grid-column: 1; \n  }\n  .week:nth-child(6n + 1) { \n    -ms-grid-row: 1; \n    grid-row: 1; \n  }\n  .week:nth-child(6n + 2) { \n    -ms-grid-row: 2; \n    grid-row: 2; \n  }\n  .week:nth-child(6n + 3) { \n    -ms-grid-row: 3; \n    grid-row: 3; \n  }\n  .week:nth-child(6n + 4) { \n    -ms-grid-row: 4; \n    grid-row: 4; \n  }\n  .week:nth-child(6n + 5) { \n    -ms-grid-row: 5; \n    grid-row: 5; \n  }\n  .week:nth-child(6n + 6) { \n    -ms-grid-row: 6; \n    grid-row: 6; \n  }\n  .day { \n    margin: 2px;\n    color: var(--day-text-color);\n    font-weight: bold;\n    text-align: center;\n    font-size: 16px;\n    flex: 1 0 auto;\n    height: auto;\n    display: flex; \n    flex-basis: 0;\n  }\n  .day.outside-month, \n  .day.is-disabled { \n    opacity: 0.35;\n  }\n  .day:before { \n    content: '';\n    float: left;\n    padding-top: 100%;\n  }\n  .day--label { \n    color: var(--day-text-color);\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    position: relative;\n    border: 1px solid #fff;\n    border-radius: 50%; \n    margin: 10%;\n    padding: 0;\n    align-items: center;\n    background: var(--day-background-color);\n    cursor: pointer;\n    transition: all 100ms linear;\n    font-weight: normal;\n  }\n  .day--label.disabled { \n    cursor: default;\n  }\n  @media (min-width: 480px) { \n    .day--label.highlighted,\n    .day--label:not(.disabled):hover { \n      background: var(--day-highlighted-background-color);\n      border-color: var(--day-highlighted-background-color);\n      color: var(--day-highlighted-text-color);\n    }\n  }\n  .day--label.shake-date { \n    animation: shake 0.4s 1 linear;\n  }\n  .day--label.selected:hover,\n  .day--label.selected,\n  .day--label:active:not(.disabled) { \n    background-color: var(--highlight-color);\n    border-color: var(--highlight-color);\n    color: #fff;\n  }\n  .day.is-today .day--label, \n  .day.is-today .day--label:hover { \n    opacity: 1; \n    background: none;\n    border-color: var(--highlight-color);\n    color: #000;\n  }\n\n  @keyframes shake {\n    0% { transform: translate(7px); }\n    20% { transform: translate(-7px); }\n    40% { transform: translate(3px); }\n    60% { transform: translate(-3px); }\n    80% { transform: translate(1px); }\n    100% { transform: translate(0px); }\n  }\n</style>\n",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n</svelte:head>\r\n<style>\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n\t.bluishBG{\r\n\t\tbackground-color: #8fa7ff;\r\n\t\tmargin-top: 5%;\r\n\t}\r\n    #textWhite{\r\n        color: white;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<p class=\"display-4 textBlue font-weight-bold text-center\">About</p>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4>Designtack is a tool to quickly design social media content, in bulk.</h4>\r\n            <h4>Our Aim is to save your time on creating content for your social media channels.</h4>\r\n\t\t</Col>\r\n    </Row>\r\n<Row class=\"pt-5\">\r\n    <Col sm=\"12\" class=\"p-3\">\r\n        <p class=\"display-4 font-weight-bold text-center\">Why Designtack?</p>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <h4>Designtack's ulterior motive has always been to make marketing easier for those of us who find it extremely difficult and time-consuming.</h4>\r\n        <h4>With the help of technology, We will try our level best to help you achieve your social goals and support you on this journey.</h4>\r\n    </Col>\r\n</Row>\r\n<div class=\"bluishBG\">\r\n\t<Row class=\"py-5\">\r\n\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"p-4\">\r\n\t\t<p id=\"textWhite\" class=\"display-4 font-weight-bold text-center\">Start Making Content</p>\r\n\t</Col>\r\n\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t<a href=\"/Login\" class=\"pressDown btn btn-lg\" use:link>Get Started for Free</a>\r\n\t</Col>\r\n\t</Row>\r\n\t</div>\r\n<Footer />\r\n</Container>\r\n</div>",
    "<svelte:head>\r\n\t<!-- Appzi: Capture Insightful Feedback -->\r\n\t<script async src=\"https://w.appzi.io/bootstrap/bundle.js?token=6UPb5\"></script>\r\n\t<!-- End Appzi -->\r\n</svelte:head>\r\n<style>\r\n\r\n\t#stage-parent {\r\n\t\tmin-width: 300px;\r\n        width: 100%;\r\n\t\tborder: 1px black solid;\r\n      }\r\n\r\n\t  .textBlue {\r\n\t\t  color:#5778f3;\r\n\t  }\r\n\r\n\t  .marketingTopic {\r\n\t\t  color:#202020;\r\n\t\t  font-size: 2em;\r\n\t\t  text-align: center;\r\n\t  }\r\n\t  .centerInfoText {\r\n\t\t  color: #5778f3;\r\n\t\t  padding: 5px;\r\n\t\t  font-size: 1em;\r\n\t\t  text-align: center;\r\n\t  }\r\n\r\n\t  .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n\t.fakelink:hover{\r\n\t\ttext-decoration: underline;\r\n\t}\r\n</style>\r\n<script>\r\n  import { auth, db, firebaseAnalytics } from './firebase';\r\n  let authinfo = localStorage.getItem('usrkey');\r\n  let user = JSON.parse(authinfo);\r\n  let allowProAccess = false;\r\n\r\n  function proAccessCheck() {\r\n\tdb.collection('PROusers').doc(user).get().then(doc => {\r\n        if (doc.exists) {\r\n        console.log(\"Pro Access ENABLED :)\");\r\n\t\tallowProAccess = true;\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"Pro Access Disabled\");\r\n        allowProAccess = false;\r\n    }\r\n    }).catch(function(error) {\r\n        console.log(\"Error:\", error);\r\n    });\r\n  }\r\n\r\n//code to check if user downloaded and then increment.\r\n  let timesave, contentMadeSoFar=0;\r\n\r\n  function statsCounter(){\r\n\tdb.collection('usersDB').doc(user).get().then(doc => {\r\n        if (doc.exists) {\r\n\t\t\t//alert(\"stat counter if statement me aya hu\")\r\n            //if user is already there, then add +1\r\n                let val = contentMadeSoFar+1\r\n                db.collection('usersDB').doc(user).set({\r\n                        totalCreated: val\r\n                })\r\n                contentMadeSoFar = val\r\n                timesaved()\r\n        } else {\r\n\t\t\t//alert(\"stat counter else statement me aya hu\")\r\n            db.collection('usersDB').doc(user).set({\r\n                        totalCreated: val\r\n                })\r\n                contentMadeSoFar = val\r\n                timesaved()\r\n        }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n  }\r\n\r\n    import { Router, Link, Route, link } from \"svelte-routing\";\r\n\timport { Tabs, TabList, TabPanel, Tab } from './tabs.js';\r\n\timport { Alert, Row, Col, Button,ButtonGroup,Modal,ModalBody,ModalFooter,ModalHeader, Container,UncontrolledCollapse, Card, CardBody, Form, FormText, FormGroup, Label, Input, CustomInput } from \"sveltestrap\";\r\n\r\n\timport Konva from 'konva';\r\n\timport { onMount } from 'svelte';\r\n\timport { beforeUpdate, afterUpdate } from 'svelte';\r\n\timport { generateRandomFontStyle, generateRandomTextColor, remixBackgroundColor, remixColorCombo } from './modules/Remix.svelte';\r\n\timport { marketingIdeas } from './modules/Inspiration.svelte';\r\n\tlet marketingIdea = marketingIdeas();\r\n\r\n\timport { FiveBlobs } from './modules/Blob.svelte';\r\n\tlet svgPaths = FiveBlobs();\r\n\t\r\n\timport {colorPalette, randDarkColor} from './modules/Color.svelte';\r\n    let colorArr = colorPalette();\r\n\t\r\n\tfunction generateIdea() {\r\n        // disabling manual iteration of this ----->  firebaseAnalytics.logEvent('idea_generation_clicked')\r\n\t\tmarketingIdea = marketingIdeas();\r\n\t}\r\n\t\r\n\tlet Shapelayer = new Konva.Layer();\r\n\tlet layer = new Konva.Layer();\r\n\tlet bglayer = new Konva.Layer();\r\n\r\n\tlet stage;\r\n\tlet smSettings= [{ size: 'auto', offset: 1 }];\r\n\tlet width,height;\r\n\tlet GUIDELINE_OFFSET = 5;\r\n\r\n\t//Default Object of Text\r\n\tlet bgRect,userText=null;\r\n\tlet textElementArray=[];\r\n\r\n\t//For Select and Download Modal\r\n\tlet open = false;\r\n  \tlet size;\r\n\t  const toggle = () => {\r\n\t\tsize = undefined;\r\n\t\topen = !open;\r\n\t};\r\n\r\n\t  const toggleLg = () => {\r\n\t\tsize = \"lg\";\r\n\t\topen = !open;\r\n\t};\r\n\r\n\tlet toRemix = false;\r\n\tlet colorArray = remixColorCombo();\r\n\t\r\n\r\nfunction afterDownload(){\r\n\ttoggleLg();\r\n\tstatsCounter();\r\n\t//appzi.openWidget('3c0830c3-04df-40bf-9881-d01009b923e5');\r\n}\r\n\r\nfunction downloadRemixedDesigns(){\r\n\ttoRemix = true;\r\n\tlet pixelRatioArr = [2,2,1,2,4];\r\n\t\r\n\tfor (var i=0;i<5;i++){\r\n\t\tcolorArray = remixColorCombo();\r\n\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\taddText(toRemix);\r\n\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\tpixelRatio: pixelRatioArr[i] });\r\n\t\tdownloadURI(dataURL, 'poster'+i+'.png');\r\n\t}\r\n}\r\n\r\n\t// Main code to generate images with random combinations\r\n\tfunction selectAndDownload() {\r\n        firebaseAnalytics.logEvent('download_files_clicked')\r\n\t\t//remove transformer if there are any.\r\n\t\t\r\n\t\tif (toRemix === true) {\r\n\t\tlet isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\t\tif (isMobile) {\r\n\t\t\t  console.log(\"Remix ON. You on Mobile\")\r\n\t\t\t  \t\tif (document.querySelector('#fb:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ln:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#tw:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#og:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterBestFit.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ig:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterInstagram.png');\r\n\t\t\t\t\t}\r\n\t\t} else {\r\n  \t\t\tconsole.log(\"Remix ON. You on Desktop\")\r\n\t\t\t\t\tif (document.querySelector('#fb:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ln:checked') !== null)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#tw:checked') !== null)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (document.querySelector('#og:checked') !== null)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterBestFit.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ig:checked') !== null)\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\tcolorArray = remixColorCombo();\r\n\t\t\t\t\taddBgColor(toRemix,colorArray[0]);\r\n\t\t\t\t\taddText(toRemix);\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterInstagram.png');\r\n\t\t\t\t\t}\r\n\t}\r\n\tafterDownload();\r\n\t}\r\n\t\telse {\r\n\t\t\t//Remix is OFF, download files manually.\r\n\t\t\tdownloadIMG();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction randomBGcolor(){\r\n\t\tremixBackgroundColor();\r\n\t\taddBgColor();\r\n        firebaseAnalytics.logEvent('Random_bg_color_clicked')\r\n\t}\r\n\r\n    function remixCurrentDesign(){\r\n\t//colorArray = remixColorCombo();\r\n\t//addBgColor(toRemix,colorArray[0]);\r\n\r\n\t// This takes the bg color from the randDarkColor() func. of Color.svelte which generates BETTER dark colors.\r\n\taddBgColor(toRemix,randDarkColor());\r\n\t\r\n\taddText(toRemix);\r\n}\r\n\t\r\n\tfunction addText(toRemix) {\r\n\t\tconsole.log(stage.getLayers())\r\n\t\tconsole.log(layer.getChildren())\r\n\t\tif (toRemix === true) {\r\n\t\t\t//console.log(\"REMIX ON:- \"+typeof(txtColor));\r\n\t\t\t//https://konvajs.org/api/Konva.Shape.html#fill\r\n\t\t\tfor(let i =0;i<textElementArray.length;i++){\r\n\t\t\t\tlet color = generateRandomTextColor();\r\n\t\t\t\tlet fontStyle = generateRandomFontStyle();\r\n\t\t\t\ttextElementArray[i].fill(color);\r\n\t\t\t\ttextElementArray[i].fontFamily(fontStyle);\r\n\t\t\t}\r\n\t  }\r\n\t\telse{\r\n\t\tuserText = new Konva.Text({\r\n        x: 15,\r\n\t\ty: 15,\r\n\t\tellipsis: true,\r\n        text: document.getElementById('userText').value,\r\n        fontSize: document.getElementById('userTextSize').value,\r\n        fill: document.getElementById('userTextColor').value,\r\n\t\tdraggable: true,\r\n\t\tname: 'object'\r\n\t  });\r\n\t  }\r\n\r\n\t  userText.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = userText.getAbsolutePosition();\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: stageBox.left + textPosition.x,\r\n          y: stageBox.top + textPosition.y,\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = userText.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = areaPosition.x + 'px';\r\n        textarea.style.width = userText.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            userText.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n\r\n\t  layer.add(userText);\r\n\t  stage.add(layer);\r\n\t  layer.moveToTop();\r\n\r\n\t  textElementArray.push(userText);\r\n\t  layer.draw();\r\n\t  \r\n\t}\r\n\r\n\tfunction makeTextBold() {\r\n\t\tlet fontStyle = userText.fontStyle();\r\n\t\r\n\t\tif(fontStyle === 'bold') {\r\n\t\t\tuserText.fontStyle('normal');\r\n\t\t}\r\n\t\telse {\t\r\n\t\t\tuserText.fontStyle('bold');\r\n\t\t}\r\n\t\t\r\n\t\tlayer.draw();\r\n\t}\r\n\r\n\tfunction makeTextItalic() {\r\n\t\tlet fontStyle = userText.fontStyle();\r\n\t\r\n\t\tif(fontStyle === 'italic') {\r\n\t\t\tuserText.fontStyle('normal');\r\n\t\t}\r\n\t\telse {\t\r\n\t\t\tuserText.fontStyle('italic');\r\n\t\t}\r\n\t\t\r\n\t\tlayer.draw();\r\n\t}\r\n\r\n\tfunction applyRandomTextColor(){\r\n\t\tlet color = generateRandomTextColor();\r\n\t\tuserText.fill(color);\r\n\t\tlayer.draw();\r\n\t}\r\n\r\n\tlet dailyquote='', dailyquoteauthor='', textContent='';\r\n\r\nasync function dailyQuote() {\r\n    await fetch('https://api.quotable.io/random')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            textContent = data.content\r\n    })\r\n}\r\n\r\n\tfunction addBgColor(toRemix, bgColor){\r\n\t\t//console.log(\"addbgcolor called\");\r\n\t\tconsole.log(layer.getParent());\r\n\t\t\r\n\t\tif (toRemix === true) {\r\n\t\t//\tconsole.log(\"REMIX ON:- \"+typeof(bgColor));\r\n\t\t\tbgRect.fill(bgColor);\r\n\t\t\t/*bgRect = new Konva.Rect({\r\n\t\t\t\t\tx:0,y:0,\r\n\t\t\t\t\twidth: 780,\r\n\t\t\t\t\theight:350,\r\n\t\t\t\t\tfill: bgColor,\r\n\t\t\t\t\tdraggable: false,\r\n\t\t\t});*/\r\n\t\t}\r\n\t\telse {\r\n\t\t\t//console.log(typeof(document.getElementById('userBGcolor').value));\r\n\t\t\tbgRect = new Konva.Rect({\r\n\t\t\t\t\tx:0,y:0,\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight: height,\r\n\t\t\t\t\tfill: document.getElementById('userBGcolor').value,\r\n\t\t\t\t\tdraggable: false,\r\n\t\t\t});\r\n\t}\r\n\t\t\t\r\n\t\t\tbglayer.add(bgRect)\r\n\t\t\tbglayer.moveToBottom()\r\n\t\t\t//stage.add(bglayer)\r\n\t\t\tbglayer.draw()\r\n\t}\r\n\r\nfunction returnRandom(){\r\n        return Math.floor(Math.random() * 300) + 50 ;\r\n}\r\n\r\nfunction returnRandomY(){\r\n        return Math.floor(Math.random() * 100) + 50 ;\r\n}\r\n\r\nfunction addBlobs() {\r\n        // I generate the d value in <path> from Blob.svelte's generateColor\r\n        \r\n    \tlet colorArr = colorPalette();\r\n        for(let i=0;i<5;i++)\r\n        {\r\n            let SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\"> <path fill=\"'+colorArr[i+1]+'\" d=\"'+svgPaths[i]+'\" transform=\"translate(100 100)\" /> </svg>'    \r\n            let url =  'data:image/svg+xml;base64,' + window.btoa(SVG);\r\n            Konva.Image.fromURL(url, image => {\r\n        image.draggable(true);\r\n        image.x(returnRandom());\r\n        image.y(returnRandomY());\r\n\t\tstage.add(Shapelayer);\r\n\t\tShapelayer.add(image);\r\n\t\t\r\n\t\t// If you uncomment below option, it causes the blobs to be not added in the stage. it shows in editor but not downloaded image.\r\n\t\t//Shapelayer.moveToBottom();\r\n        })\r\n        }\r\n}\r\n\r\n\tfunction generateShapes() {\r\n\t\tlet x;\r\n\t\tfor (x =0; x<10; x++){\r\n\r\n\t\tif (x%2 == 0){\r\n\t\t\tShapelayer.add(\r\n\t\t\tnew Konva.Rect({\r\n\t\t\t  x: Math.random() * stage.width(),\r\n\t\t\t  y: Math.random() * stage.height(),\r\n\t\t\t  width: 20 + Math.random() * 20,\r\n\t\t\t  height: 20 + Math.random() * 20,\r\n\t\t\t  fill: Konva.Util.getRandomColor(),\r\n\t\t\t  rotation: Math.random() * 360,\r\n\t\t\t  draggable: true,\r\n\t\t\t  name: 'object'\r\n\t\t\t})\r\n\t\t  );}\r\n\t\t  else {\r\n\t\t\tShapelayer.add(new Konva.Circle({\r\n\t\t\tx: Math.random() * stage.width(),\r\n\t\t\ty: Math.random() * stage.height(),\r\n\t\t\tradius: 70,\r\n\t\t\t  width: 20 + Math.random() * 50,\r\n\t\t\t  height: 20 + Math.random() * 50,\r\n\t\t\tfill: Konva.Util.getRandomColor(),\r\n\t\t\tstroke: Konva.Util.getRandomColor(),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\t  rotation: Math.random() * 360,\r\n\t\t\t  draggable: true,\r\n\t\t\t  name: 'object'\r\n\t\t\t}));\r\n\t\t  }\r\n\t\t\tstage.add(Shapelayer);\r\n\t\t\tShapelayer.draw();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removeTransformer(){\r\n\t\t\t//bglayer.find('Transformer').destroy();\r\n\t\t\t//stage.find('Transformer').destroy();\r\n\t\t\tlayer.find('Transformer').destroy();\r\n\t\t\tbglayer.draw();\r\n\t\t\tlayer.draw();\r\n}\r\n\r\n\tfunction clearCanvas() {\r\n\t\t//This basically destorys the layer.\r\n\t\tstage.destroyChildren();\r\n\t\tbglayer = new Konva.Layer();\r\n\t\tstage.add(bglayer)\r\n\t\tbglayer.moveToBottom()\r\n\t\t/*layer = new Konva.Layer();\r\n\t\tstage.add(tooltipLayer)\r\n\t\tstage.add(layer)*/\r\n\t//\tconsole.log(\"Canvas was cleared\");\t\r\n\t}\r\n\r\n\tfunction deleteShapes(){\r\n\t\tShapelayer.destroy();\r\n\t}\r\n\r\n\tfunction deleteLastElement() {\r\n\t\t\r\n\t\t// get the last element which was added in layer as well as the array of texts.\r\n\t\tlet texttodel = textElementArray.slice(-1);\r\n\t\t//delete from layer and also from array\r\n\t\ttexttodel[0].destroy()\r\n\t\ttextElementArray.pop();\r\n\t\tlayer.draw();\r\n\t}\r\n\r\n\tfunction downloadURI(uri, name) {\r\n        //part of funnel in firebase\r\n        firebaseAnalytics.logEvent('Downloaded_from_Editor_Mode');\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n\tfunction downloadIMG() {\r\n\t\t//remove transformer from the rect or selected shapes\r\n\t\tstage.find('Transformer').destroy();\r\n\t\t// reseting the canvas size incase user is using on mobile and downloads image for twitter which should be enlarged na of right dimension.\r\n\t\t//stage.width = 780;\r\n\t\t//stage.height = 350;\r\n\r\n\t\tlet isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\t\tif (isMobile) {\r\n\t\t\t  console.log(\"You on Mobile\")\r\n\t\t\t  if (document.querySelector('#fb:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ln:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#tw:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#og:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterBestFit.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ig:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterInstagram.png');\r\n\t\t\t\t\t}\r\n\t\t} else {\r\n  \t\t\tconsole.log(\"You on Desktop\")\r\n\t\t\t\t\tif (document.querySelector('#fb:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ln:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#tw:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#og:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({ \r\n\t\t\t\t\t\tpixelRatio: 2 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterBestFit.png');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (document.querySelector('#ig:checked') !== null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\tvar dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\t\t\tdownloadURI(dataURL, 'posterInstagram.png');\r\n\t\t\t\t\t}\r\n\t}\r\n\tafterDownload();\r\n\t}\r\n\r\n\tfunction openUploadPopUp(){\r\n\t\tdocument.getElementById('userImgUpload').click()\r\n\t}\r\n\r\n\tfunction addIMGtoStage(event){\r\n\t\tvar image = new Image();\r\n\t\timage.src = URL.createObjectURL(event.target.files[0]);\r\n\r\n\t\timage.onload = function () {\r\n\t\t\tlet newIMG = new Konva.Image({\r\n\t\t\tx: 50,\r\n\t\t\ty: 50,\r\n\t\t\timage: image,\r\n\t\t\twidth: 106,\r\n\t\t\theight: 118,\r\n\t\t\tdraggable:true,\r\n\t\t\tname: 'object'\r\n\t\t\t});\r\n\t\t\t//layer = new Konva.Layer();\r\n\t\t\tlayer.add(newIMG);\r\n\t\t\tstage.add(layer)\r\n\t \t\tlayer.draw();\r\n\t\t\taddText();\r\n\t\t}\r\n        firebaseAnalytics.logEvent('upload_img_clicked')\r\n\t}\r\n\r\n\tbeforeUpdate(() => {\r\n\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 720;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n\t\t//layer = new Konva.Layer();\r\n\t});\r\n\r\n\tafterUpdate(() =>{\r\n\t\tconsole.log(\"AfterUpdate was called\");\r\n\r\n\t\tfunction fitStageIntoParentContainer() {\r\n        let lcontainer = document.getElementById('stage-parent');\r\n\r\n        // now we need to fit stage into parent\r\n        var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n        // to do this we need to scale the stage\r\n        var scale = containerWidth / width;\r\n\r\n        stage.width(width * scale);\r\n        stage.height(height * scale);\r\n        stage.scale({ x: scale, y: scale });\r\n        stage.draw();\r\n      }\r\n\r\n\t  fitStageIntoParentContainer();\r\n      // adapt the stage on any window resize\r\n      window.addEventListener('resize', fitStageIntoParentContainer);\r\n\r\n\t  /*let tooltipLayer = new Konva.Layer();\r\n\t\tlet tooltip = new Konva.Label({\r\n\t\t\topacity: 0.75,\r\n\t\t\tvisible: false,\r\n\t\t\tlistening: false\r\n\t\t  });*/\r\n\t\t/*tooltip.add(\r\n\t\t\tnew Konva.Tag({\r\n\t\t\t  fill: 'black',\r\n\t\t\t  pointerDirection: 'down',\r\n\t\t\t  pointerWidth: 10,\r\n\t\t\t  pointerHeight: 10,\r\n\t\t\t  lineJoin: 'round',\r\n\t\t\t  shadowColor: 'black',\r\n\t\t\t  shadowBlur: 10,\r\n\t\t\t  shadowOffset: 10,\r\n\t\t\t  shadowOpacity: 0.2\r\n\t\t\t})\r\n\t\t  );\r\n\t\ttooltip.add(\r\n\t\t  new Konva.Text({\r\n\t\t\ttext: 'Test',\r\n\t\t\tfontFamily: 'Calibri',\r\n\t\t\tfontSize: 18,\r\n\t\t\tpadding: 5,\r\n\t\t\tfill: 'white'\r\n\t\t  })\r\n\t\t);*/\r\n\t\t\r\n\t\t//tooltipLayer.add(tooltip);\r\n\r\n\t\t// were can we snap our objects?\r\n\t\tfunction getLineGuideStops(skipShape) {\r\n\t\t\t// we can snap to stage borders and the center of the stage\r\n\t\t\tlet vertical = [0, stage.width() / 2, stage.width()];\r\n\t\t\tlet horizontal = [0, stage.height() / 2, stage.height()];\r\n\t\t\t// and we snap over edges and center of each object on the canvas\r\n\t\t\tstage.find('.object').forEach(guideItem => {\r\n\t\t\t  if (guideItem === skipShape) {\r\n\t\t\t\treturn;\r\n\t\t\t  }\r\n\t\t\t  let box = guideItem.getClientRect();\r\n\t\t\t  // and we can snap to all edges of shapes\r\n\t\t\t  vertical.push([box.x, box.x + box.width, box.x + box.width / 2]);\r\n\t\t\t  horizontal.push([box.y, box.y + box.height, box.y + box.height / 2]);\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t  vertical: vertical.flat(),\r\n\t\t\t  horizontal: horizontal.flat()\r\n\t\t\t};\r\n\t\t  }\r\n\t\t  // what points of the object will trigger to snapping?\r\n\t\t  // it can be just center of the object\r\n\t\t  // but we will enable all edges and center\r\n\t\tfunction getObjectSnappingEdges(node) {\r\n\t\t\tlet box = node.getClientRect();\r\n\t\t\treturn {\r\n\t\t\t  vertical: [\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.x),\r\n\t\t\t\t  offset: Math.round(node.x() - box.x),\r\n\t\t\t\t  snap: 'start'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.x + box.width / 2),\r\n\t\t\t\t  offset: Math.round(node.x() - box.x - box.width / 2),\r\n\t\t\t\t  snap: 'center'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.x + box.width),\r\n\t\t\t\t  offset: Math.round(node.x() - box.x - box.width),\r\n\t\t\t\t  snap: 'end'\r\n\t\t\t\t}\r\n\t\t\t  ],\r\n\t\t\t  horizontal: [\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.y),\r\n\t\t\t\t  offset: Math.round(node.y() - box.y),\r\n\t\t\t\t  snap: 'start'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.y + box.height / 2),\r\n\t\t\t\t  offset: Math.round(node.y() - box.y - box.height / 2),\r\n\t\t\t\t  snap: 'center'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t  guide: Math.round(box.y + box.height),\r\n\t\t\t\t  offset: Math.round(node.y() - box.y - box.height),\r\n\t\t\t\t  snap: 'end'\r\n\t\t\t\t}\r\n\t\t\t  ]\r\n\t\t\t};\r\n\t\t  }\r\n\t\t  // find all snapping possibilities\r\n\t\tfunction getGuides(lineGuideStops, itemBounds) {\r\n\t\t\tlet resultV = [];\r\n\t\t\tlet resultH = [];\r\n\t\t\tlineGuideStops.vertical.forEach(lineGuide => {\r\n\t\t\t  itemBounds.vertical.forEach(itemBound => {\r\n\t\t\t\tlet diff = Math.abs(lineGuide - itemBound.guide);\r\n\t\t\t\t// if the distance between guild line and object snap point is close we can consider this for snapping\r\n\t\t\t\tif (diff < GUIDELINE_OFFSET) {\r\n\t\t\t\t  resultV.push({\r\n\t\t\t\t\tlineGuide: lineGuide,\r\n\t\t\t\t\tdiff: diff,\r\n\t\t\t\t\tsnap: itemBound.snap,\r\n\t\t\t\t\toffset: itemBound.offset\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t});\r\n\t\t\tlineGuideStops.horizontal.forEach(lineGuide => {\r\n\t\t\t  itemBounds.horizontal.forEach(itemBound => {\r\n\t\t\t\tlet diff = Math.abs(lineGuide - itemBound.guide);\r\n\t\t\t\tif (diff < GUIDELINE_OFFSET) {\r\n\t\t\t\t  resultH.push({\r\n\t\t\t\t\tlineGuide: lineGuide,\r\n\t\t\t\t\tdiff: diff,\r\n\t\t\t\t\tsnap: itemBound.snap,\r\n\t\t\t\t\toffset: itemBound.offset\r\n\t\t\t\t  });\r\n\t\t\t\t}\r\n\t\t\t  });\r\n\t\t\t});\r\n\t\t  let guides = [];\r\n\t\t\t// find closest snap\r\n\t\t  let minV = resultV.sort((a, b) => a.diff - b.diff)[0];\r\n\t\t  let minH = resultH.sort((a, b) => a.diff - b.diff)[0];\r\n\t\t  if (minV) {\r\n\t\t\t  guides.push({\r\n\t\t\t\tlineGuide: minV.lineGuide,\r\n\t\t\t\toffset: minV.offset,\r\n\t\t\t\torientation: 'V',\r\n\t\t\t\tsnap: minV.snap\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  if (minH) {\r\n\t\t\t  guides.push({\r\n\t\t\t\tlineGuide: minH.lineGuide,\r\n\t\t\t\toffset: minH.offset,\r\n\t\t\t\torientation: 'H',\r\n\t\t\t\tsnap: minH.snap\r\n\t\t\t  });\r\n\t\t\t}\r\n\t\t  return guides;\r\n\t\t}\r\n\t\tfunction drawGuides(guides) {\r\n\t\t\tguides.forEach(lg => {\r\n\t\t\t  if (lg.orientation === 'H') {\r\n\t\t\t\tlet line = new Konva.Line({\r\n\t\t\t\t  points: [-6000, lg.lineGuide, 6000, lg.lineGuide],\r\n\t\t\t\t  stroke: 'rgb(0, 161, 255)',\r\n\t\t\t\t  strokeWidth: 1,\r\n\t\t\t\t  name: 'guid-line',\r\n\t\t\t\t  dash: [4, 6]\r\n\t\t\t\t});\r\n\t\t\t\tlayer.add(line);\r\n\t\t\t\tlayer.batchDraw();\r\n\t\t\t  } else if (lg.orientation === 'V') {\r\n\t\t\t\tlet line = new Konva.Line({\r\n\t\t\t\t  points: [lg.lineGuide, -6000, lg.lineGuide, 6000],\r\n\t\t\t\t  stroke: 'rgb(0, 161, 255)',\r\n\t\t\t\t  strokeWidth: 1,\r\n\t\t\t\t  name: 'guid-line',\r\n\t\t\t\t  dash: [4, 6]\r\n\t\t\t\t});\r\n\t\t\t\tlayer.add(line);\r\n\t\t\t\tlayer.batchDraw();\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t  }\r\n\t\tlayer.on('dragmove', function(e) {\r\n\t\t\t// clear all previous lines on the screen\r\n\t\t\tlayer.find('.guid-line').destroy();\r\n\t\t\t// find possible snapping lines\r\n\t\t\tlet lineGuideStops = getLineGuideStops(e.target);\r\n\t\t\t// find snapping points of current object\r\n\t\t\tlet itemBounds = getObjectSnappingEdges(e.target);\r\n\t\t\t// now find where can we snap current object\r\n\t\t\tlet guides = getGuides(lineGuideStops, itemBounds);\r\n\t\t\t// do nothing of no snapping\r\n\t\t\tif (!guides.length) {\r\n\t\t\t \t\t\t\t return;\r\n\t\t\t\t\t\t\t}\r\n\t\tdrawGuides(guides);\r\n\t\t// now force object position\r\n\t\tguides.forEach(lg => {\r\n\t\t\t  switch (lg.snap) {\r\n\t\t\t\tcase 'start': {\r\n\t\t\t\t  switch (lg.orientation) {\r\n\t\t\t\t\tcase 'V': {\r\n\t\t\t\t\t  e.target.x(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase 'H': {\r\n\t\t\t\t\t  e.target.y(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'center': {\r\n\t\t\t\t  switch (lg.orientation) {\r\n\t\t\t\t\tcase 'V': {\r\n\t\t\t\t\t  e.target.x(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase 'H': {\r\n\t\t\t\t\t  e.target.y(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t\tcase 'end': {\r\n\t\t\t\t  switch (lg.orientation) {\r\n\t\t\t\t\tcase 'V': {\r\n\t\t\t\t\t  e.target.x(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase 'H': {\r\n\t\t\t\t\t  e.target.y(lg.lineGuide + lg.offset);\r\n\t\t\t\t\t  break;\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t  break;\r\n\t\t\t\t}\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\t  });\r\n\t\tlayer.on('dragend', function(e) {\r\n\t\t  // clear all previous lines on the screen\r\n\t\t  layer.find('.guid-line').destroy();\r\n\t\t  layer.batchDraw();\r\n\t\t});\r\n\t\tlayer.draw();\r\n\t\t\r\n\t\tstage.on('click tap', function(e) {\r\n\t\t  // if click on empty area - remove all transformers\r\n\t\t  if (e.target === stage) {\r\n\t\t\tstage.find('Transformer').destroy();\r\n\t\t\tlayer.find('Transformer').destroy();\r\n\t\t\tbglayer.find('Transformer').destroy();\r\n\t\t\t//we tried alerting but this area is for when no bg is present, then it removes transformer\r\n\t\t\tlayer.draw();\r\n\t\t\tbglayer.draw();\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  // do nothing if clicked NOT on our rectangles\r\n\t\t  if (!e.target.hasName('object')) {\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  // remove old transformers\r\n\t\t  // TODO: we can skip it if current rect is already selected\r\n\t\t  stage.find('Transformer').destroy();\r\n\t\t  layer.find('Transformer').destroy();\r\n\t\t  bglayer.find('Transformer').destroy();\r\n\t\t  // create new transformer\r\n\t\t  let tr = new Konva.Transformer();\r\n\t\t  layer.add(tr);\r\n\t\t  tr.attachTo(e.target);\r\n\t\t  layer.draw();\r\n\t\t  let mousePos = e.target.getStage().getPointerPosition();\r\n\t\t /* tooltip.position({\r\n\t\t\t  x: mousePos.x,\r\n\t\t\t  y: mousePos.y - 5\r\n\t\t  });*/\r\n\t\t  /*tooltip\r\n\t\t\t  .getText()\r\n\t\t\t  .text('object: ' + e.target.id() + ', color: ' + e.target.fill());\r\n\t\t\ttooltip.show();\r\n\t\t\ttooltipLayer.batchDraw();*/\r\n\t\t  });\r\n\r\n\t\t  layer.on('click tap', function(e) {\r\n\t\t  // if click on empty area - remove all transformers\r\n\t\t  if (e.target === layer) {\r\n\t\t\tremoveTransformer();\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  // do nothing if clicked NOT on our shapes or text\r\n\t\t  if (!e.target.hasName('object')) {\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t});\r\n\r\n\t\tbglayer.on('click tap', function(e) {\r\n\t\t  // if click on empty area - do nothing\r\n\t\t  if (e.target === bglayer) {\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t  // while it do nothing if clicked NOT on our shapes or text, we have to make it do something ie remove transformer.\r\n\t\t  if (!e.target.hasName('object')) {\r\n\t\t\t  // this right here removes transformers if we click on bglayer which is basically a layer with huge ass rectangle, which acts as background.\r\n\t\t\tremoveTransformer();\r\n\t\t\treturn;\r\n\t\t  }\r\n\t\t});\r\n\t\t\r\n\t\t/*stage.on('mouseout', function(evt) {\r\n\t\t  tooltip.hide();\r\n\t\t  tooltipLayer.draw();\r\n\t\t});*/\r\n\r\n\t\t// add the layer to the stage\r\n\t\t/*stage.add(tooltipLayer);*/\r\n\t\tstage.add(layer);\r\n\t\t// draw the image\r\n\t\tlayer.draw();\r\n\t});\r\n\r\n\tonMount(() => {\r\n\t\t\r\n        firebaseAnalytics.logEvent('Editor_Mode_Selected');\r\n\t//\tconsole.log(\"OnMount was called\");\r\n\t//\tconsole.log(\"Checking for Pro Access\");\r\n// code to intialize counter for stats\r\n\tdb.collection('usersDB').doc(user).get().then(doc => {\r\n        if (doc.exists) {\r\n            let userData = doc.data();\r\n            contentMadeSoFar = userData.totalCreated;\r\n        } else {\r\n            db.collection('usersDB').doc(user).set({\r\n                        totalCreated: 0\r\n            })\r\n        }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n\r\n\t\tproAccessCheck();\r\n\t\t// first we need to create a stage\r\n\t\tstage = new Konva.Stage({\r\n\t\t\tcontainer: 'konva-stage',   // id of container <div>\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t});\r\n\t\tbglayer = new Konva.Layer();\r\n\t\tstage.add(bglayer)\r\n\t\tbglayer.moveToBottom()\r\n\t\tShapelayer.moveToBottom();\r\n\t \tlayer.moveToTop();\r\n\t\tstage.add(layer)\r\n\t\t\r\n\t\trandomBGcolor();\r\n\r\n\t\t// Generate a content idea and show it in the footer\r\n\t\tgenerateIdea();\r\n\t\t});\r\n\t\r\n\t</script>\r\n<div>\r\n\t<Container class=\"mt-2\" fluid>\r\n\t<Row class=\"mt-2\">\r\n\t\t<!-- Canvas / Stage / Layer Component-->\r\n\t\t<Col lg=\"6\">\r\n\t\t\t<div id=\"stage-parent\">\r\n\t\t\t\t\t<div id=\"konva-stage\"></div>\r\n\t\t\t</div>\r\n\t\t\t<Row class=\"mt-2\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t<span class=\"pressDown btn btn-block btn-lg\" on:click={toggleLg}>Select and Download</span>\r\n\t\t\t\t<Modal class=\".modal-dialog-centered\" isOpen={open} {toggle} {size}>\r\n\t\t\t\t\t<ModalHeader {toggle}><h4 class=\"textBlue\">Select Your Platforms</h4></ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t  <Row>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tname=\"fb\" id=\"fb\">\r\n\t\t\t\t\t\t\t<Label for=\"fb\"><h5 class=\"text-primary\">Facebook (1200x717px)</h5></Label></CustomInput>\r\n\t\t\t\t\t\t  </Col>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tname=\"tw\" id=\"tw\">\r\n\t\t\t\t\t\t\t<Label for=\"tw\"><h5 class=\"text-primary\">Twitter (506 x 253)</h5></Label></CustomInput>\r\n\t\t\t\t\t\t  </Col>\r\n\t\t\t\t\t  </Row>\r\n\t\t\t\t\t  <Row>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tname=\"ln\" id=\"ln\">\r\n\t\t\t\t\t\t\t<Label for=\"ln\"><h5 class=\"text-primary\">LinkedIn (1536 x 768)</h5></Label></CustomInput>\r\n\t\t\t\t\t\t  </Col>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t\t<CustomInput\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tname=\"ig\" id=\"ig\">\r\n\t\t\t\t\t\t\t<Label for=\"ig\"><h5 class=\"text-primary\">Instagram (1.91:1)</h5></Label></CustomInput>\r\n\t\t\t\t\t\t  </Col>\r\n\t\t\t\t\t  </Row>\r\n\t\t\t\t\t  <Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t  <CustomInput\r\n\t\t\t\t\t\t  type=\"checkbox\"\r\n\t\t\t\t\t\t  name=\"og\" id=\"og\">\r\n\t\t\t\t\t\t  <Label for=\"og\"><h5 class=\"text-primary\">High Quality</h5></Label></CustomInput>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t  </Row>\r\n\t\t\t\t\t  <Row>\r\n\t\t\t\t\t\t  <Col>\r\n\t\t\t\t\t\t  \t<div class=\"centerInfoText\">\r\n\t\t\t\t\t\t\t  <hr/>\r\n\t\t\t\t\t\t\t\t{#if toRemix}\r\n\t\t\t\t\t\t\t\t<span>Your designs <u>WILL</u> be remixed. You can change this setting in \"Remix\" Tab.</span>\r\n\t\t\t\t\t\t\t\t{:else}\r\n\t\t\t\t\t\t\t\t<span>Your designs <u>WILL NOT</u> be remixed. You can change this setting in \"Remix\" Tab.</span>\r\n\t\t\t\t\t\t\t\t{/if}\r\n\t\t\t\t\t\t  \t</div>\r\n\t\t\t\t\t\t  </Col>\r\n\t\t\t\t\t  </Row>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t  <span class=\"pressDown btn btn-block btn-lg\" on:click={selectAndDownload}>\r\n\t\t\t\t\t\tDownload My Files\r\n\t\t\t\t\t  </span>\r\n\t\t\t\t\t  <!--Button color=\"secondary\" on:click={toggle}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t  </Button-->\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t  </Modal>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Col>\r\n\r\n\r\n\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t<Card body>\r\n\t\t<Row>\r\n\t\t<Col>\r\n\t\t\t<Tabs>\r\n\t\t\t\t<TabList>\r\n\t\t\t\t\t<Tab><h4>🖼 Background</h4></Tab>\r\n\t\t\t\t\t<Tab><h4>✏ Text</h4></Tab>\r\n\t\t\t\t\t<!--<Tab><h4> Idea</h4></Tab>-->\r\n\t\t\t\t\t<Tab><h4>✨Remix</h4></Tab>\r\n\t\t\t\t\t<Tab><h4>💡 Tips</h4></Tab>\r\n\t\t\t\t</TabList>\r\n\r\n\t\t\t\t<!-- Background tab-->\r\n\t\t\t\t<TabPanel>\r\n\t\t\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t\t\t\t<Label class=\"font-weight-bold\" for=\"inputColor\">Add Background Color:-</Label>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg=\"5\">\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\t\t\t\tname=\"bgcolor\"\r\n\t\t\t\t\t\t\t\tvalue=\"#FFFFFF\"\r\n\t\t\t\t\t\t\t\tid=\"userBGcolor\"\r\n\t\t\t\t\t\t\t\ton:change={addBgColor}\r\n\t\t\t\t\t\t\t\tplaceholder=\"colorPicker\" />\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg=\"1\">\r\n\t\t\t\t\t\t\t<Button outline color=\"primary\" size='lg' on:click={randomBGcolor}>🎲</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<!--<Row class=\"mt-3\">\r\n\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t<Button class=\"m-1\" block color=\"primary\" size=\"lg\" on:click={addBgColor}>Apply BG</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>-->\r\n\t\t\t\t\t<Row class='mt-1'>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Label class=\"font-weight-bold\" for=\"randomBg\">Add illustrations:-</Label>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row class=\"mt-1\">\r\n\t\t\t\t\t\t<Col lg='5' offset='1'>\r\n\t\t\t\t\t\t\t<Button block color=\"success\" size=\"lg\" on:click={generateShapes}>Shapes</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg='5'>\r\n\t\t\t\t\t\t\t<Button block color=\"info\" size=\"lg\" on:click={addBlobs}>Blobs</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg='1'>\r\n\t\t\t\t\t\t\t<Button outline color='danger' size='lg' on:click={deleteShapes}>❌</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t\t\t\t<Label class=\"font-weight-bold\" for=\"randomBg\">Add Images:-</Label>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg=\"5\">\r\n\t\t\t\t\t\t\t<Button class=\"m-1\" size=\"lg\" block color=\"primary\" on:click={openUploadPopUp}>Select Image</Button>\r\n\t\t\t\t\t\t\t<Input type=\"file\" name=\"file\" id=\"userImgUpload\" on:change={addIMGtoStage} hidden/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t\t\t\t\t<Label class=\"font-weight-bold\" for=\"randomBg\">Clear Canvas:-</Label>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col lg=\"5\">\r\n\t\t\t\t\t\t\t\t<Button class=\"m-1\" size=\"lg\" block outline color=\"danger\" on:click={clearCanvas}>Clear</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel>\r\n\t\t\t\t<!-- Text Editor Component-->\r\n\t\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t\t\t<Label class=\"font-weight-bold\" for=\"inputText\">Enter Text:-</Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg=\"5\">\r\n\t\t\t\t\t\t<Input bind:value={textContent} type=\"textarea\" placeholder=\"Happy Birthday!\" name=\"userText\" id=\"userText\"/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg='1'>\r\n\t\t\t\t\t\t\t<Button outline color=\"primary\" size='lg' on:click={dailyQuote}>🎲</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row class='mt-2'>\r\n\t\t\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t\t\t<Label class=\"font-weight-bold\" for=\"inputColor\">Font Color:-</Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg=\"5\">\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\t\t\t\tname=\"color\"\r\n\t\t\t\t\t\t\t\tid=\"userTextColor\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"colorPicker\" />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t\t\t<Label class=\"font-weight-bold\" for=\"inputFont\">Font Type:-</Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg=\"5\">\r\n\t\t\t\t\t\t<Input type=\"select\" id=\"userTextFonts\" name=\"userTextFonts\">\r\n\t\t\t\t\t\t\t<option value=\"verdana\">Verdana</option>\r\n\t\t\t\t\t\t\t<option value=\"Garamond\">Garamond</option>\r\n\t\t\t\t\t\t\t<option selected value=\"Calibri\">Calibri</option>\r\n\t\t\t\t\t\t\t<option value=\"sans-serif\">Sans-serif</option>\r\n\t\t\t\t\t\t\t<option value=\"cursive\">Cursive</option>\r\n\t\t\t\t\t\t\t<option value=\"fantasy\">Fantasy</option>\r\n\t\t\t\t\t\t\t<option value=\"monospace\">Monospace</option>\r\n\t\t\t\t\t\t\t<option value=\"'Helvetica Neue'\">Helvetica Neue</option>\r\n\t\t\t\t\t\t\t<option value=\"Helvetica\">Helvetica</option>\r\n\t\t\t\t\t\t\t<option value=\"Arial\">Arial</option>\r\n\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row class=\"mt-1\">\r\n\t\t\t\t\t<Col lg=\"5\" offset=\"1\">\r\n\t\t\t\t\t\t<Label class=\"font-weight-bold\" for=\"inputFontSize\">Font Size:-</Label>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col lg=\"5\">\r\n\t\t\t\t\t\t<Input type=\"number\" placeholder=\"30\" min=\"0\" max=\"100\" name=\"userTextSize\" id=\"userTextSize\" value=\"25\"/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\t\r\n\t\t\t\t<Row class=\"text-center\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Button class=\"m-1\" block color=\"primary\" size=\"lg\" on:click={addText}>Add New Text</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Button class=\"m-1\" block outline color=\"danger\" size=\"lg\" on:click={deleteLastElement}>Delete Last Element</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\t\t\t\t\r\n\t\t\t\t<Row class='text-center'>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Button class=\"m-1\" block outline color=\"primary\" size=\"lg\" on:click={makeTextBold}><b>B</b></Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Button class=\"m-1\" block outline color=\"primary\" size=\"lg\" on:click={makeTextItalic}><b><i>I</i></b></Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Button class=\"m-1\" block outline color=\"primary\" size='lg' on:click={applyRandomTextColor}>✒️</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t\t</TabPanel>\r\n\t\r\n\t\t\t\t\r\n\t\t\t\t<!-- Shifting this section to the main dashboard to promote its usage.\r\n\t\t\t\t\t<TabPanel>\r\n\t\t\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<h3 class=\"font-weight-bold textBlue\">Content Inspiration</h3>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tGet inspiration for Content and Designs to help you get started. Click on the button to generate random idea.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t{#if allowProAccess}\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm=\"12\" md=\"{{ size: 6, offset: 3 }}\">\r\n\t\t\t\t\t\t<a class=\"pressDown btn btn-block btn-lg m-1\" on:click={generateIdea}>Generate Idea</a>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t<div class=\"marketingTopic\">\r\n\t\t\t\t\t\t\t\t{marketingIdea}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm=\"12\" class='text-center'>\r\n\t\t\t\t\t\t\t<h4 class=\"text-warning\">Access this feature by upgrading to PRO.</h4>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm=\"12\" class='m-2 text-center'>\r\n\t\t\t\t\t\t\t<a href=\"/Login\" replace><Button class=\"w-25\" color=\"primary\">Upgrade Now</Button></a>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</TabPanel> -->\r\n\t\t\t\t<TabPanel>\r\n\t\t\t\t\t<Row class=\"mt-3\">\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<h4 class=\"font-weight-bold textBlue\">Remix Content</h4>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tRemix your Design for unique variations for different Social Media Channels.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t{#if allowProAccess}\r\n\t\t\t\t\t<!--Row>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\tRemix will USE your design and generate DIFFERENT styles of it. You can toggle it here. This is ON by Default.\t\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row-->\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t<Button class=\"m-1\" block color=\"primary\" size=\"lg\" on:click={()=>{toRemix=!toRemix;}}>Toggle Remix - {#if toRemix}\r\n\t\t\t\t\t\t\tON\r\n\t\t\t\t\t\t{:else}\r\n\t\t\t\t\t\tOFF\r\n\t\t\t\t\t\t{/if}</Button>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t\t<a href=\"#\" class=\"pressDown btn btn-block btn-lg m-1\" on:click={remixCurrentDesign}>Remix Design</a>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\t\t<h6 class=\"text-center\">Based on your design on left, Remixed Designs will be generated and downloaded.</h6>\r\n\t\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t\t\t<a href=\"#\" class=\"pressDown btn btn-block btn-lg m-1\" on:click={downloadRemixedDesigns}>Download Remixed Designs</a>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t{:else}\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm=\"12\" class='text-center'>\r\n\t\t\t\t\t\t\t<h4>Access this feature by upgrading to PRO.</h4>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm=\"12\" class='m-2 text-center'>\r\n\t\t\t\t\t\t\t<a class='pressDown btn' href=\"/Login\" replace>Upgrade Now</a>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t{/if}\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t\t<div class=\"m-3 marketingTopic\">\r\n\t\t\t\t\t\t\t<h4 class=\"font-weight-bold textBlue\">Tips to get started</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t\t<p>1. Start by choosing a 🖼<b>Background</b> color from your Design. You can also randomly pick one.</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t\t<p>2. Add a <b>Logo</b> with Upload Image option in the bottom of 🖼<b>Background</b> tab.</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t\t<p>3. With the ✏ <b>Text</b> option, write your text & customize it! Double-click the text to resize it.</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t\t<p>4. Add shapes, or enable/disable ✨ <b>Remix</b> option as per your need. Download and share your amazing content!</p>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</Tabs>\r\n\t\t</Col>\r\n\t\t</Row>\r\n\t\t</Card>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t\t<Card class=\"text-center mt-3\" body>\r\n\t\t\t<h5 class=\"textBlue font-weight-bold text-left\">Content Idea 💡</h5>\r\n\t\t\t<span class='font-weight-bold'>{marketingIdea}</span>\r\n\t\t</Card>\r\n\t\t</Container>\r\n\t</div>\r\n",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n</svelte:head>\r\n<style>\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n\t.bluishBG{\r\n\t\tbackground-color: #8fa7ff;\r\n\t\tmargin-top: 5%;\r\n\t}\r\n    #textWhite{\r\n        color: white;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Form, FormGroup, FormText, Input, Label, Row, Col, Container, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, link, Route } from \"svelte-routing\";\r\n\r\n\r\n  import Footer from './Footer.svelte';\r\n  import {testCode} from './SumoCodes.svelte';\r\n  import {onMount} from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n  import { auth, db, firebaseAnalytics } from './firebase';\r\n\r\n  function isEmpty(obj) {\r\n    for(var key in obj) {\r\n        if(obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction addAccountToFirebase(){\r\n    // first we will create account then add it in PROdb of firebase.\r\n    //get data from form\r\n    let name = document.getElementById('username').value;\r\n    let email = document.getElementById('email').value;\r\n    let pass = document.getElementById('password').value;\r\n    let code = document.getElementById('appsumocode').value;\r\n\r\n    auth.createUserWithEmailAndPassword(email, pass).catch(function(error) {\r\n  // Handle Errors here.\r\n  var errorCode = error.code;\r\n  var errorMessage = error.message;\r\n  // ...\r\n}).then(()=>{\r\n    console.log(\"Account created!\");\r\n    auth.signInWithEmailAndPassword(email, pass).catch(function(error) {\r\n    // Handle Errors here.\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n    // ...\r\n    })  \r\n}).then(()=>{\r\n    let user = auth.currentUser;\r\n    //now we will give the user, PRO access\r\n    user.updateProfile({\r\n    displayName: name\r\n    })\r\n    console.log(\"username applied.\");\r\n    db.collection('PROusers').doc(user.uid).set({\r\n                        email: email,\r\n                        checkoutId: code,\r\n                        planType: \"AppSumo LifeTime\",\r\n                        SubscriptionDate: Date()\r\n                    })\r\n    console.log(\"Account added in db.\")\r\n}).then(()=>{\r\n    alert(\"Your Account was created successfully! Login & Enjoy your Lifetime Access :)\");\r\n    //Redirect();\r\n});\r\n}\r\n\r\nfunction Redirect() {\r\n               window.location = \"http://www.designtack.com/\";\r\n}\r\n\r\n\r\n  function submitFunction(e){\r\n      e.preventDefault();\r\n    //console.log(\"got code --\"+document.getElementById('appsumocode').value);\r\n    //testCode();\r\n\r\n    let name = document.getElementById('username').value;\r\n    let email = document.getElementById('email').value;\r\n    let pass = document.getElementById('password').value;\r\n    let code = document.getElementById('appsumocode').value;\r\n\r\n    if(name == \"\" || email == \"\" || pass == \"\" || code == \"\")\r\n    {\r\n        alert(\"One or more fields are empty\")\r\n    } \r\n    else {\r\n    let c = document.getElementById('appsumocode').value;\r\n    let url = 'https://api.sheety.co/46f1b341d8cbdb82a6dc567068c9894f/redemptionCodesForDesigntack/sheet?filter[code]='+c;\r\n    try {\r\n        fetch(url)\r\n        .then((response) => response.json())\r\n        .then(json => {\r\n        // Do something with the data\r\n        let data = json.sheet;\r\n        //console.log(data+typeof(data));\r\n        if(data.length > 0){\r\n            //this means code found in our spreadsheet file, \r\n            //TODO - write here the code which will initiate the registration in firebase process + edit the row and add a prefix \"CODEUSED\" to code field\r\n            data = json.sheet[0];\r\n            console.log(data.code+\" \"+data.id)\r\n            //below code to overwrite the code\r\n            let url = 'https://api.sheety.co/46f1b341d8cbdb82a6dc567068c9894f/redemptionCodesForDesigntack/sheet/'+data.id;\r\n            let body = {\r\n                sheet: {\r\n                    \"code\": 'CODEUSED'+data.code,\r\n                    \"id\": data.id\r\n                }\r\n            }\r\n            fetch(url, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(body),\r\n            headers: {'Content-Type':'application/json'} \r\n            })\r\n            .then((response) => response.json())\r\n            .then(json => {\r\n                // Do something with the data\r\n                //console.log(json);\r\n            })\r\n\r\n            //calling function to create account in PROdb and in firebase\r\n            addAccountToFirebase();\r\n        }\r\n        else{\r\n            //this means code NOT found in our spreadsheet file\r\n            alert(\"Oops! The code you entered is used or invalid. Please try again or Contact us.\")\r\n        }\r\n        });\r\n        }\r\n        catch(err) {\r\n        }\r\n    }\r\n  }\r\n\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<p class=\"display-4 textBlue font-weight-bold text-center\">DT ♥ AppSumo</p>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4>Fill the form below with your information.</h4>\r\n\t\t</Col>\r\n    </Row>\r\n    <Form method=\"POST\">\r\n    <Row class=\"pt-5\">\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <FormGroup>\r\n            <Label class=\"font-weight-bold\" for=\"username\">Your Name</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              id=\"username\" required/>\r\n          </FormGroup>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <FormGroup>\r\n            <Label class=\"font-weight-bold\" for=\"email\">Your Email</Label>\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\" required/>\r\n          </FormGroup>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <FormGroup>\r\n            <Label class=\"font-weight-bold\" for=\"password\">Your Password</Label>\r\n            <Input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\" required/>\r\n          </FormGroup>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <FormGroup>\r\n            <Label class=\"font-weight-bold\" for=\"appsumocode\">Your AppSumo Code</Label>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"appsumocode\"\r\n              id=\"appsumocode\" required/>\r\n          </FormGroup>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <button type=\"submit\" class=\"btn btn-lg pressDown\" on:click={submitFunction}>Submit & Sign in</button>\r\n    </Col>\r\n    </Row>\r\n    </Form>\r\n<div class=\"bluishBG\">\r\n\t<Row class=\"py-5\">\r\n\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"p-4\">\r\n\t\t<p id=\"textWhite\" class=\"display-4 font-weight-bold text-center\">Start Making Content</p>\r\n\t</Col>\r\n\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t<a href=\"/Login\" class=\"pressDown btn btn-lg\" use:link>Get Started for Free</a>\r\n\t</Col>\r\n\t</Row>\r\n\t</div>\r\n<Footer />\r\n</Container>\r\n</div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n</svelte:head>\r\n<style>\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n</style>\r\n<script>\r\n  import {Row, Col, Card, Container, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Changelog</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-primary text-center\">\r\n            <h5>Updates and Roadmap 🚧</h5>\r\n\t\t</Col>\r\n    </Row>\r\n    <Row class=\"pt-2\">\r\n        <Col sm=\"12\" class=\"p-3\">\r\n            <h3 class=\"text-center textBlue\">1.5.0</h3>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <Container fluid>\r\n                <Card body>\r\n            <Row>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold textBlue\">Major updates:-</h6>\r\n                    <h6>1. Improved Editor Mode with Better Selection, New Randomiser Options, New font options and more.</h6>\r\n                    <h6>2. Improved Dashboard layout with less clutter and simple layout.</h6>\r\n                    <h6>3. Content Idea is back in Editor Mode. No more hard-thinking! (One more text feature is there, discover it yourself :)</h6>\r\n                    <h6>4. Templates now has prefill values option. Write once and apply text to all!</h6>\r\n                    <h6>5. You will notice more UI and UX changes which are made to make experience better.</h6>\r\n                    <h6>6. All the 9+ Templates are available to remix for free!</h6>\r\n                </Col>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold textBlue\">Coming up:-</h6>\r\n                    <h6>Magical Template Generator!</h6>\r\n                </Col>\r\n            </Row>\r\n            </Card>\r\n            </Container>    \r\n        </Col>\r\n    </Row>\r\n    <Row class=\"pt-2\">\r\n        <Col sm=\"12\" class=\"p-3\">\r\n            <h3 class=\"text-center textBlue\">1.4.5</h3>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <Container fluid>\r\n                <Card body>\r\n            <Row>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold textBlue\">Major updates:-</h6>\r\n                    <h6>1. A lot of bugs were mainly fixed in this release and some of the existing features were improved and enhanced.</h6>\r\n                    <h6>2. Remix tab includes a new button called Download Remix Designs. Try it out! 🥳</h6>\r\n                    <h6>3. Content Idea Generator now resides on your Dashboard. Less procrastination, More Designing!</h6>\r\n                    <h6>4. Some templates had font issues which are fixed now. Still figuring out the Blob on Safari error 😥.</h6>\r\n                    <h6>5. You will notice some UI and UX changes which are made to make experience better.</h6>\r\n                    <h6>6. All the 9+ Templates are Mobile Responsive now.</h6>\r\n                </Col>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold textBlue\">Coming soon:-</h6>\r\n                    <h6>More updates next year! Enjoy the rest of the December :)</h6>\r\n                </Col>\r\n            </Row>\r\n            </Card>\r\n            </Container>    \r\n        </Col>\r\n    </Row>\r\n    <Row class=\"pt-2\">\r\n        <Col sm=\"12\" class=\"p-3\">\r\n            <h3 class=\"text-center textBlue\">1.4.0</h3>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <Container fluid>\r\n                <Card body>\r\n            <Row>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold textBlue\">Major updates:-</h6>\r\n                    <h6>1. Introducing <b>Templates Library</b>. Quick Mode is now part of Templates Library where you can work with multiple designs and create content in seconds! <span role=\"img\">🎉</span></h6>\r\n                    <h6>2. Featuring upto 9+ Templates, available for all users. More being added soon! </h6>\r\n                    <h6>3. All Template Designs can be <b>remixed</b> to have a unique design.</h6>\r\n                </Col>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold\">Other updates:-</h6>\r\n                    <h6>1. Feedback options added. If you are reading this, do know that your feedback matters. Show your support and provide feedback!</h6>\r\n                    <h6>2. Fixed bugs in Quick Mode. </h6>\r\n                    <h6>3. New font added for Editor Mode.</h6>\r\n                </Col>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold textBlue\">Coming soon:-</h6>\r\n                    <h6>...<span role=\"img\">✍</span></h6>\r\n                </Col>\r\n            </Row>\r\n            </Card>\r\n            </Container>    \r\n        </Col>\r\n    </Row>\r\n    <Row class=\"pt-2\">\r\n        <Col sm=\"12\" class=\"p-3\">\r\n            <h3 class=\"text-center textBlue\">1.3.1</h3>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <Container fluid>\r\n                <Card body>\r\n            <Row>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold textBlue\">Major updates:-</h6>\r\n                    <h6>1. Added <b>Instagram</b> Option which has the highest resolution, fit for both Landscape and Portrait! <span role=\"img\">🎉</span></h6>\r\n                    <h6>2. Changed the randomisation with <b>new background colors</b> in Editor Mode. Better Remixes now! </h6>\r\n                    <h6>3. Quick Mode now has a <b>new footer text</b> option. Stand out better :)</h6>\r\n                </Col>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold\">Other updates:-</h6>\r\n                    <h6>1. Re-designed all other pages.</h6>\r\n                    <h6>2. Fixed a bug which caused the blobs to not appear in downloaded images in editor mode. </h6>\r\n                </Col>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold textBlue\">Coming soon:-</h6>\r\n                    <h6>Exciting updates to both Modes.</h6>\r\n                    <h6>advddsfeguides&tutorialssdvsdgwe<span role=\"img\">🤖</span></h6>\r\n                </Col>\r\n            </Row>\r\n            </Card>\r\n            </Container>    \r\n        </Col>\r\n    </Row>\r\n    <Row class=\"pt-2\">\r\n        <Col sm=\"12\" class=\"p-3\">\r\n            <h3 class=\"text-center textBlue\">1.3.0</h3>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <Container fluid>\r\n                <Card body>\r\n            <Row>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold textBlue\">Major updates:-</h6>\r\n                    <h6>1. New Content Style - Blobs! Now add shapes or blobs or both.</h6>\r\n                    <h6>2. Editor Mode Tweaked with more possibilities!</h6>\r\n                    <h6>3. Quick Mode totally revamped with Blob based content generation. </h6>\r\n                    <h6>4. Homepage revamped with better explanation.</h6>\r\n                    <h6>5. Content generation & delivered right in your email. 😲 (PRO)</h6>\r\n                </Col>\r\n                <Col sm=\"12\" class=\"text-left\">\r\n                    <h6 class=\"font-weight-bold\">Other updates:-</h6>\r\n                    <h6>1. Re-designed all other pages.</h6>\r\n                    <h6>2. Bugs fixed to make your experience better. </h6>\r\n                    <h6>3. Timer is gone! </h6>\r\n                </Col>\r\n            </Row>\r\n            </Card>\r\n            </Container>    \r\n        </Col>\r\n    </Row>\r\n<Row class=\"pt-2\">\r\n    <Col sm=\"12\" class=\"p-3\">\r\n        <h3 class=\"text-center textBlue\">1.2.1</h3>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <Container fluid>\r\n            <Card body>\r\n        <Row>\r\n            <Col sm=\"12\" class=\"text-left\">\r\n                <h6 class=\"font-weight-bold textBlue\">Major updates:-</h6>\r\n                <h6>1. Quick Mode added. Now you can create content in seconds by just adding just your website+text content. Check it out!</h6>\r\n                <h6>2. New Comparison page which shows in tabular form the difference of Designtack with others.</h6>\r\n                <h6>3. New Dashboard which automatically logs your content creation habit. </h6>\r\n                <h6>4. A Countdown has been set in the footer.. 👀</h6>\r\n            </Col>\r\n            <Col sm=\"12\" class=\"text-left\">\r\n                <h6 class=\"font-weight-bold\">Other updates:-</h6>\r\n                <h6>1. Re-designed Sign-in page and Home page.</h6>\r\n                <h6>2. Minor bugs here and there were fixed. </h6>\r\n            </Col>\r\n        </Row>\r\n        </Card>\r\n        </Container>    \r\n    </Col>\r\n</Row>\r\n<Row class=\"pt-2\">\r\n    <Col sm=\"12\" class=\"p-3\">\r\n        <h3 class=\"text-center textBlue\">1.2.0</h3>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <Container fluid>\r\n            <Card body>\r\n        <Row>\r\n            <Col sm=\"12\" class=\"text-left\">\r\n                <h6  class=\"font-weight-bold textBlue\">Major updates:-</h6>\r\n                <h6>1. Website is redesigned! The whole UI has been improved and simplified for your better experience.</h6>\r\n                <h6>2. Now remix has become better than ever. It even remixes your font styles!</h6>\r\n                <h6>3. Fixed the bug where multiple texts weren't being remixed properly. Content becomes more uniquer than before. </h6>\r\n                <h6>4. Pro users can now do unlimited remixes before downloading!</h6>\r\n                <h6>5. Canvas color dynamically changes when you select it from the color picker.</h6>\r\n                <h6>6. Fixed the bug where deleting last element removed all the text. Fear not, it's no more.</h6>\r\n                <h6>7. You CAN now resize the text after it has been added to canvas. Double-click to highlight it.</h6>\r\n                \r\n            </Col>\r\n            <Col sm=\"12\" class=\"text-left\">\r\n                <h6 class=\"font-weight-bold\">Other updates:-</h6>\r\n                <h6>1. To prevent spam, email verification has been made mandatory.</h6>\r\n                <h6>2. Minor bugs here and there were squashed. </h6>\r\n            </Col>\r\n        </Row>\r\n        </Card>\r\n        </Container>    \r\n    </Col>\r\n</Row>\r\n<Row class=\"pt-5\">\r\n    <Col sm=\"12\" class=\"p-3\">\r\n        <h3 class=\"text-center textBlue\">1.0.0</h3>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <Container fluid>\r\n            <Card body>\r\n        <Row>\r\n            <Col sm=\"12\" class=\"text-left\">\r\n                <h6>- Some bugs were fixed! Your feedback is valuable to us. You can give feedback in the App page, with the <span class=\"text-info\">Feedback</span> button on App page.</h6>\r\n            </Col>\r\n            <Col sm=\"12\" class=\"text-left\">\r\n                <h6>- This Web Application is Cached and thus, it works fast 🚀. You can make designs on mobile as well .</h6>\r\n            </Col>\r\n        </Row>\r\n        </Card>\r\n        </Container>    \r\n    </Col>\r\n</Row>\r\n</Container>\r\n<!--<Row class=\"pt-5\">\r\n    <Col sm=\"12\" class=\"p-3\">\r\n        <h3 class=\"text-center text-success\">The Who</h3>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <h4>The idea came up when small business and indepedent </h4>\r\n    </Col>\r\n</Row>-->\r\n<Footer />\r\n\r\n</div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n</svelte:head>\r\n<style>\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n    .midBanner{\r\n\t\tbackground-color: #5778f3;\r\n\t\tcolor: #ffffff;\r\n\t\twidth: 100%;\r\n\t\tpadding: 30px;\r\n\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n\t}\r\n\t.bluishBG{\r\n\t\tbackground-color: #8fa7ff;\r\n\t\tmargin-top: 5%;\r\n\t}\r\n    #textWhite{\r\n        color: white;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col,Container,Card, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Why Designtack?</h1>\r\n\t\t</Col>\r\n    </Row>\r\n<Row class=\"pt-5\">\r\n    <Col sm=\"12\" class=\"pt-2 text-center\" >\r\n    <h4 class=\"font-weight-bold\">The main goal of designtack is to create content quickly, in a very short amount of time, and in bulk.<br> It follows <a class=\"textBlue\" href=\"https://en.wikipedia.org/wiki/Pareto_principle\">The Pareto principle</a>. Spend less time, create more content!</h4>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"pt-2\">\r\n        <table style=\"width: 100%;\" border=\"1\" cellpadding=\"10\">\r\n            <tbody>\r\n            <tr>\r\n            <td></td>\r\n            <td class=\"font-weight-bold\">Designtack</td>\r\n            <td class=\"font-weight-bold\">Canva and Others</td>\r\n            </tr>\r\n            <tr>\r\n            <td>Create Content in Bulk from 1 Design</td>\r\n            <td>✅</td>\r\n            <td>❌</td>\r\n            </tr>\r\n            <tr>\r\n            <td>Remix Your Content</td>\r\n            <td>✅</td>\r\n            <td>❌</td>\r\n            </tr>\r\n            <tr>\r\n            <td>Unlimited Variation Options</td>\r\n            <td>✅</td>\r\n            <td>❌</td>\r\n            </tr>\r\n            <tr>\r\n            <td>Minimum Time Required</td>\r\n            <td>~ 10 seconds on Quick Mode / ~30 seconds on Editor</td>\r\n            <td>1-2 minute </td>\r\n            </tr>\r\n            </tbody>\r\n            </table>    \r\n    <hr/>\r\n</Col>\r\n</Row>\r\n    <div class=\"bluishBG\">\r\n\t<Row class=\"py-5\">\r\n\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"p-4\">\r\n\t\t<p id=\"textWhite\" class=\"display-4 font-weight-bold text-center\">See for Yourself!</p>\r\n\t</Col>\r\n\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t<a href=\"/Login\" class=\"pressDown btn btn-lg\" use:link>Get Started for Free</a>\r\n\t</Col>\r\n\t</Row>\r\n\t</div>\r\n</Container>\r\n<Footer />\r\n</div>",
    "<svelte:head>\r\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n  \r\n\t<!-- font awesome for footer icons-->\r\n\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\">\r\n\r\n</svelte:head>\r\n<style>\r\n\ta:hover{\r\n\t\ttext-decoration: none;\r\n    font-weight: bold;\r\n\t}\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n  .pricing .btn {\r\n    font-size: 80%;\r\n    border-radius: 5rem;\r\n    letter-spacing: .1rem;\r\n    font-weight: bold;\r\n    padding: 1rem;\r\n    opacity: 0.7;\r\n    transition: all 0.2s;\r\n    background-color: blue;\r\n    color:white;\r\n  }\r\n  \r\n  /* Hover Effects on Card */\r\n  \r\n  @media (min-width: 992px) {\r\n    .pricing .card:hover {\r\n      margin-top: -.25rem;\r\n      margin-bottom: .25rem;\r\n      box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.3);\r\n    }\r\n    .pricing .card:hover .btn {\r\n      opacity: 1;\r\n    }\r\n  }\r\n</style>\r\n<script>\r\n  import {Row, Col, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route, link } from \"svelte-routing\";\r\n  \r\n  let hpVectorImg='https://i.imgur.com/LOBVlXr.png';\r\n  let logo = 'https://i.imgur.com/5CHnbDm.png';\r\n  \r\n  //social icons\r\n  let fbIcon = './images/fb_social.png';\r\n  let twIcon = './images/twitter_social.png';\r\n\r\n/*\r\n  var countDownDate = new Date(\"Sep 18, 2020 00:00:00\").getTime();\r\n\r\n  // Run myfunc every second\r\n  var myfunc = setInterval(function() {\r\n\r\n  var now = new Date().getTime();\r\n  var timeleft = countDownDate - now;\r\n      \r\n  // Calculating the days, hours, minutes and seconds left\r\n  var days = Math.floor(timeleft / (1000 * 60 * 60 * 24));\r\n  var hours = Math.floor((timeleft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  var minutes = Math.floor((timeleft % (1000 * 60 * 60)) / (1000 * 60));\r\n  var seconds = Math.floor((timeleft % (1000 * 60)) / 1000);\r\n      \r\n  // Result is output to the specific element\r\n  document.getElementById(\"days\").innerHTML = days + \"d \"\r\n  document.getElementById(\"hours\").innerHTML = hours + \"h \" \r\n  document.getElementById(\"mins\").innerHTML = minutes + \"m \" \r\n  document.getElementById(\"secs\").innerHTML = seconds + \"s \" \r\n      \r\n  // Display the message when countdown is over\r\n  if (timeleft < 0) {\r\n      clearInterval(myfunc);\r\n      document.getElementById(\"days\").innerHTML = \"\"\r\n      document.getElementById(\"hours\").innerHTML = \"\" \r\n      document.getElementById(\"mins\").innerHTML = \"\"\r\n      document.getElementById(\"secs\").innerHTML = \"\"\r\n      document.getElementById(\"end\").innerHTML = \"Time is up for Designtack!\";\r\n  }\r\n  }, 1000);*/\r\n\r\n</script>\r\n<footer class=\"bg-white\">\r\n<Router>\r\n    <div class=\"container py-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4 col-md-6 mb-4 mb-lg-0\"><img src={logo} alt=\"logo\" width=\"100\" class=\"mb-3\">\r\n          <p class=\"text-muted mb-0\">© 2021 Designtack. All rights reserved.</p>\r\n          <ul class=\"list-inline\">\r\n            <li class=\"list-inline-item\"><a href=\"https://www.facebook.com/Designtack\" replace><img src={fbIcon} alt=\"twitter_Share_Button\" height=\"20\" width=\"20\"/></a></li>\r\n            <li class=\"list-inline-item\"><a href=\"https://www.twitter.com/realdesigntack\" replace><img src={twIcon} alt=\"twitter_Share_Button\" height=\"20\" width=\"20\"/></a></li>\r\n          </ul>\r\n        </div>\r\n       <div class=\"col-lg-2 col-md-6 mb-4 mb-lg-0\">\r\n          <h6 class=\"text-uppercase font-weight-bold mb-4\">Navigation</h6>\r\n          <ul class=\"list-unstyled mb-0\">\r\n            <li class=\"mb-2\"><a href=\"/UseCases\" use:link><span class=\"textBlue\">Use Cases</span></a></li>\r\n            <li class=\"mb-2\"><a href=\"/Difference\"><span class=\"textBlue\">Comparison</span></a></li>\r\n            <li class=\"mb-2\"><a href=\"https://appsumo.com/designtack/\"><span class=\"textBlue\">Lifetime Offer</span></a></li>\r\n            <li class=\"mb-2\"><a href=\"/Support\" use:link><span class=\"textBlue\">Support</span></a></li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"col-lg-2 col-md-6 mb-4 mb-lg-0\">\r\n          <h6 class=\"text-uppercase font-weight-bold mb-4\">Legal</h6>\r\n          <ul class=\"list-unstyled mb-0\">\r\n            <li class=\"mb-2\"><a href=\"/PrivacyPolicy\" use:link><span class=\"textBlue\">Privacy Policy</span></a></li>\r\n            <li class=\"mb-2\"><a href=\"/TOS\" use:link><span class=\"textBlue\">Terms of Conditions</span></a></li>\r\n            <li class=\"mb-2\"><a href=\"/About\" use:link><span class=\"textBlue\">About</span></a></li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"col-lg-4 col-md-6 mb-lg-0\">\r\n          <h6 class=\"text-uppercase font-weight-bold mb-4\">Join us at Facebook</h6>\r\n          <p class=\"text-muted mb-4\">Discuss & Learn more about Content Marketing, Giveaways, Top Strategies and more! </p>\r\n          <div class=\"p-2 rounded border\">\r\n            <a href=\"https://www.facebook.com/groups/614010692879949/\" class=\"btn btn-block font-weight-bold text-uppercase\" use:link>💌 Join</a>\r\n          <div class=\"input-group\">\r\n              <!--<input type=\"email\" placeholder=\"Enter your email address\" aria-describedby=\"button-addon1\" class=\"form-control border-0 shadow-0\">\r\n              <div class=\"input-group-append\">\r\n                <button id=\"button-addon1\" type=\"submit\" class=\"btn btn-link\">Join 💌</button>\r\n              </div>-->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Router>\r\n  <!--div class=\"font-weight-bold text-center p-2\">\r\n <span id=\"days\"></span>\r\n    <span id=\"hours\"></span>\r\n    <span id=\"mins\"></span>\r\n    <span id=\"secs\"></span>\r\n    <h2 id=\"end\"></h2>\r\n  </div-->\r\n  </footer>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n\t<!-- Bootstrap CSS -->\t\r\n<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n<meta name=\"Description\" content=\"Designtack is an online tool to quickly design social media content, in bulk. We help you save your time on creating content for your social media channels.\">\r\n\r\n</svelte:head>\r\n<style>\r\n\t.bluishBG{\r\n\t\tbackground-color: #8fa7ff;\r\n\t\tmargin-top: 5%;\r\n\t}\r\n\r\n\t#textWhite{\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t#quickModeBorder {\r\n\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n\t}\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n\r\n\t.midBanner{\r\n\t\tbackground-color: #5778f3;\r\n\t\tcolor: #ffffff;\r\n\t\twidth: 100%;\r\n\t\tpadding: 30px;\r\n\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n\t}\r\n\tiframe {\r\n\t\tmax-width: 560px;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t.vdbox {\r\n\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n\t}\r\n\r\n\t#featureImg {\r\n  border-radius: 50%;\r\n  -webkit-transition: -webkit-transform .8s ease-in-out;\r\n          transition:         transform .8s ease-in-out;\r\n}\r\n#featureImg:hover {\r\n  -webkit-transform: rotate(10deg);\r\n          transform: rotate(10deg);\r\n}\r\n/*\r\nto add background here for pricing section\r\n.pricing {\r\n\t\r\n}*/\r\n\r\n\r\n.pricing .card {\r\n  border: none;\r\n  border-radius: 1rem;\r\n  transition: all 0.2s;\r\n  box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.pricing hr {\r\n  margin: 1.5rem 0;\r\n}\r\n\r\n.pricing .card-title {\r\n  margin: 0.5rem 0;\r\n  font-size: 0.9rem;\r\n  letter-spacing: .1rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.pricing .card-price {\r\n  font-size: 3rem;\r\n  margin: 0;\r\n}\r\n\r\n.pricing .card-price .period {\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.pricing ul li {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.pricing .text-muted {\r\n  opacity: 0.7;\r\n}\r\n\r\n/* Hover Effects on Card */\r\n\r\n@media (min-width: 992px) {\r\n  .pricing .card:hover {\r\n    margin-top: -.25rem;\r\n    margin-bottom: .25rem;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.3);\r\n  }\r\n  .pricing .card:hover .btn {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n\t#skew {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  transform: skewY(-12deg);\r\n  transform-origin: 0;\r\n  background: #36D1DC;  /* fallback for old browsers */\r\n  background: -webkit-linear-gradient(to right, #5B86E5, #36D1DC);  /* Chrome 10-25, Safari 5.1-6 */\r\n  background: linear-gradient(to right, #5B86E5, #36D1DC); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n\r\n\r\n  -webkit-box-shadow: -5px 3px 32px 4px rgba(184, 184, 184, 1);\r\n  -moz-box-shadow: -5px 3px 32px 4px rgba(184, 184, 184, 1);\r\n  box-shadow: -5px 3px 32px 4px rgba(184, 184, 184, 1);\r\n}\r\n\r\n\t.css-selector {\r\n    background: linear-gradient(122deg, #5578f3, #20a4c6, #5279cd, #1690c9, #580be6, #0e22da);\r\n    background-size: 1600% 1600%;\r\n\r\n    -webkit-animation: changyBoi 21s ease infinite;\r\n    -moz-animation: changyBoi 21s ease infinite;\r\n    animation: changyBoi 21s ease infinite;\r\n\t}\r\n\r\n\t.bg-cover{\r\n  box-shadow: 5px 10px 18px grey;\r\n\t}\r\n\r\n@-webkit-keyframes changyBoi {\r\n    0%{background-position:83% 0%}\r\n    50%{background-position:18% 100%}\r\n    100%{background-position:83% 0%}\r\n}\r\n@-moz-keyframes changyBoi {\r\n    0%{background-position:83% 0%}\r\n    50%{background-position:18% 100%}\r\n    100%{background-position:83% 0%}\r\n}\r\n@keyframes changyBoi {\r\n    0%{background-position:83% 0%}\r\n    50%{background-position:18% 100%}\r\n    100%{background-position:83% 0%}\r\n}\r\n\r\n.pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n</style>\r\n<script>\r\n  import {Alert, Row, Col,Container, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route, link } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n  import { onMount } from 'svelte';\r\n\r\n  let hpVectorImg='./images/mainHPimg.png';\r\n  let hpVectorVID='./images/dthowtovid.mp4';\r\n  let logo = 'https://i.imgur.com/5CHnbDm.png';\r\n\r\n  let vectFirst = './images/vectr_dodm.png' \r\n  let vectSecond = './images/vectr_contentMulti.png';\r\n  let vectrThird = './images/vectr_variation.png';\r\n\r\n  let whatitdoes = './images/whatitdoes.jpg';\r\n\r\n  let tothis2 = './images/tothis2.png';\r\n  let tothis3 = './images/tothis3.png';\r\n\r\n  let remixEverythingGIF = \"./images/remix_everything.gif\";\r\n  let yourContentGIF = \"./images/your_content_multi.gif\";\r\n  let quickMode = \"./images/quickmodenew.gif\";\r\n  let dragDrop = \"./images/dragdrop.gif\";\r\n\r\n\tfunction setPlaySpeed() { \r\n\tlet x = document.getElementById(\"myVideo\");\r\n\tx.playbackRate = 2;\r\n\t} \r\n\r\n\tonMount(()=>{\r\n\tsetPlaySpeed();\r\n\t});\r\n</script>\r\n<Container fluid>\r\n\t<!-- Navbar above-->\r\n\t<Row class='h-25 align-items-center p-4 '>\r\n\t\t<Col lg=\"5\">\r\n\t\t\t<p class=\"display-4 font-weight-bold\">Content Marketing is Hard.</p>\r\n\t\t\t<h4>Designtack makes it <span class=\"textBlue\">easier</span> to create social media content in bulk.</h4>\r\n\t\t</Col>\r\n\t\t<Col></Col>\r\n\t\t<Col lg=\"6\" offset=\"1\">\r\n\t\t\t<!-- div class=\"m-1\"-->\r\n\t\t\t<!--img src={hpVectorImg} alt=\"hpVector\" class=\"img-fluid\" width=\"800\" height=\"600\" /-->\r\n\t\t\t<video id=\"myVideo\" class=\"vdbox img-fluid\" width=\"1000\" height=\"900\" autoplay loop>\r\n\t\t\t\t<source src={hpVectorVID} type=\"video/mp4\"/>\r\n\t\t\t</video>\r\n\t\t</Col>\r\n\t</Row>\t\r\n\t<Row class=\"py-5\">\r\n\t\t<Col sm=\"12\" class=\"mt-4 text-center\">\r\n\t\t\t<a href=\"/Login\" class=\"pressDown btn btn-lg text-uppercase\" use:link>Create A Design</a>\r\n\t\t\t<h6 class=\"mt-2 font-italic text-muted\">No credit card required</h6>\r\n\t\t</Col>\r\n\t\t<!--Col sm=\"12\" class=\"mt-1 text-center\">\r\n\t\t\t<a class=\"text-primary\" href=\"#scrollToInfo\">How it works?</a>\r\n\t\t</Col-->\r\n\t</Row>\r\n\t\r\n\t<div class=\"py-3\">\r\n\t\t\t\r\n\t\t\t<div class=\"row align-items-center m-5\">\r\n\t\t\t<div class=\"col-lg-5 px-3 mx-auto\">\r\n\t\t\t\t<h2 class=\"font-weight-bold text-primary\">Simple as ABC.</h2>\r\n\t\t\t\t<h4 class=\"font-italic text-muted mb-4\">With the Minimal Editor, It's really easy to design.</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t\t<!--video id=\"quickModeBorder\" class=\"img-fluid\" autoplay loop>\r\n\t\t\t\t\t<source src={dragDrop} type=\"video/mp4\"/>\r\n\t\t\t\t</video-->\r\n\t\t\t\t<img id=\"quickModeBorder\" src={dragDrop} alt=\"Design once, design many.\" height=\"700\" width=\"629\" class=\"img-fluid\">\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"row align-items-center pt-5 m-5\">\r\n\t\t\t<div class=\"col-lg-6 order-2 order-lg-1\">\r\n\t\t\t\t<img id=\"quickModeBorder\" src={remixEverythingGIF} alt=\"Design once, design many.\" height=\"700\" width=\"629\" class=\"img-fluid\">\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-lg-5 px-3 mx-auto order-1 order-lg-2\">\r\n\t\t\t\t<h2 class=\"font-weight-bold text-primary\">Remix everything.</h2>\r\n\t\t\t\t<h4 class=\"font-italic text-muted mb-4\">Try various design combinations with one click!</h4>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t  <div class=\"row align-items-center pt-5 m-5\">\r\n\t\t\t<div class=\"col-lg-5 px-3 mx-auto\">\r\n\t\t\t\t<h2 class=\"font-weight-bold text-primary\">Your Content. Multiplied.</h2>\r\n\t\t\t\t<h4 class=\"font-italic text-muted mb-4\">One design is enough for the rest.</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t\t<img id=\"quickModeBorder\" src={yourContentGIF} alt=\"Your Content is Multiplied.\" class=\"img-fluid\">\r\n\t\t\t</div>\r\n\t\t   </div>\r\n\t\t  \r\n\t\t  <!--<div class=\"row align-items-center m-5\">\r\n\t\t\t<div class=\"col-lg-5 px-5 mx-auto\">\r\n\t\t\t\t<h2 class=\"font-weight-bold text-primary\">Need inspiration for content?</h2>\r\n\t\t\t\t<h4 class=\"font-italic text-muted mb-4\">The tool will give you content ideas to create for your audience.</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t\t<img id=\"featureImg\" src={vectFirst} alt=\"Your Content is Multiplied.\" class=\"img-fluid mb-4 mb-lg-0\">\r\n\t\t\t</div>\r\n\t\t   </div>\r\n\t\t\t<div class=\"row align-items-center m-5\">\r\n\t\t\t\t<div class=\"col-lg-6 order-2 order-lg-1\">\r\n\t\t\t\t  <h2 class=\"font-weight-bold text-primary\">Design once, design many.</h2>\r\n\t\t\t\t  <h4 class=\"font-italic text-muted mb-4\">You can remix your content for different styles, for different platforms.</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-lg-5 px-5 mx-auto order-1 order-lg-2\"><img src={vectrThird} height=\"709\" width=\"629\" alt=\"variations\" class=\"img-fluid mb-4 mb-lg-0\"></div>\r\n\t\t\t  </div>-->\r\n\t</div>\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"p-4\">\r\n\t\t\t<p class=\"display-4 font-weight-bold text-center\">Or choose from pre-made templates</p>\r\n\t\t</Col>\r\n\t\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t\t<h5 class=\"font-italic text-muted mb-4\">You can select from <span class=\"textBlue\">9+</span> templates to create content in <span class=\"font-weight-bold\">seconds</span>!</h5>\r\n\t\t\t</Col>\r\n\t\t\r\n\t\t<Col sm=\"12\" class=\"pt-4 text-center\" fluid>\r\n\t\t\t<!--img class=\"img-fluid\" alt=\"sample design\" src={whatitdoes} width=\"700\" height=\"400\" fluid/ \r\n\t\t\t<video id=\"myVideo\" class=\"vdbox img-fluid\" width=\"900\" height=\"400\" autoplay controls>\r\n\t\t\t\t<source src={hpVectorVID} type=\"video/mp4\"/>\r\n\t\t\t</video>-->\r\n\t\t\t<div>\r\n\t\t\t<img id=\"quickModeBorder\" src={quickMode} alt=\"quick mode to create content faster\" class=\"img-fluid\"/>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"py-5\">\r\n\t\t\t\t\t<a href=\"/templates\" class=\"pressDown btn btn-lg\">Head to Templates Library</a>\r\n\t\t\t</div>\r\n\t\t</Col>\r\n\t\t\r\n\t</Row>\r\n\r\n\t<!--\r\n\t<Row class=\"py-5\" id=\"usecases\">\r\n\t\t<div class=\"midBanner\">\r\n\t\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"pt-2 text-center\" >\r\n\t\t\t<h4 class=\"display-4\">Use Cases</h4>\r\n\t\t</Col>\r\n\t\t<Col sm=\"12\">\r\n\t\t\t<div class=\"m-4 text-center\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h5>🙋‍♂️ Solo Creators</h5>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h5>🏨 Small Agencies </h5>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h5>💹 Marketers</h5>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</Col>\r\n\t\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"pt-2 text-center\" >\r\n\t\t\t<h5 class=\"\"> With modes like Quick & Editor, You can have content created for you brand in seconds! Try it to find out what works the best for you.</h5>\r\n\t\t</Col>\r\n\t\t</div>\r\n\t</Row>\r\n-->\r\n\t<div class=\"bluishBG\">\r\n\t<Row class=\"py-5\">\r\n\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"p-4\">\r\n\t\t<h1 id=\"textWhite\" class=\"font-weight-bold text-center\">Why creating content is important?</h1>\r\n\t</Col>\r\n\t<Col sm=\"12\" class=\"text-center px-5\">\r\n\t\t<h4 id=\"textWhite\">COVID affected a lot of businesses. It is more integral than ever to have an online presence of your brand.</h4>\r\n\t\t<h4 class=\"py-2\" id=\"textWhite\">Designtack can help you to get started in creating content for your brand to get noticed in this world with short attention. </h4>\r\n\t\t<a href=\"/UseCases\" class=\"pressDown btn btn-lg\">Learn More</a>\r\n\t</Col>\r\n\t</Row>\r\n</div>\r\n\r\n\r\n\t<div id=\"pricing\" class=\"pricing\">\r\n\t\t<div class=\"container fluid\">\r\n\t\t\t<div class=\"row py-5\">\r\n\t\t\t\t<div class=\"col-lg-12\">\r\n\t\t\t\t\t<div class=\"text-center my-2\">\r\n\t\t\t\t\t\t<h1 class=\"gradient-text font-weight-bold text-center\">Minimal on Pricing</h1>\r\n\t\t\t\t\t\t<h4>Simple Plans. Simpler Prices.</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t  <div class=\"row\">\r\n\t\t\t<!-- Free Tier -->\r\n\t\t\t<div class=\"col-lg-4 offset-lg-2\">\r\n\t\t\t  <div class=\"card mb-5 mb-lg-0\">\r\n\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t  <h5 class=\"card-title text-uppercase text-center\">Basic</h5>\r\n\t\t\t\t  <h6 class=\"card-price font-weight-bold text-center\">$0<span class=\"period\">/mo</span></h6>\r\n\t\t\t\t  <h6 class=\"card-title text-center\">$0 Billed Annually</h6>\r\n\t\t\t\t  <hr>\r\n\t\t\t\t  <ul class=\"fa-ul\">\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span>Limited Designs</li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span>Limited Remixes</li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span>Manual Downloads</li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span>Future Updates</li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span>No Watermark and Ads</li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span><strong>Help and Support</strong></li>\r\n\t\t\t\t  </ul>\r\n\t\t\t\t  <div class=\"text-center pt-3\"><a href=\"/Login\" class=\"pressDown btn btn-lg\">Get Started for Free</a></div>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t\t<!-- Pro Tier -->\r\n\t\t\t<div class=\"col-lg-4\">\r\n\t\t\t  <div class=\"card\">\r\n\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t  <h5 class=\"textBlue card-title text-uppercase text-center\">Pro</h5>\r\n\t\t\t\t  <h6 class=\"textBlue card-price font-weight-bold text-center\">$4<span class=\"period\">/mo</span></h6>\r\n\t\t\t\t  <h6 class=\"card-title text-center\">$48 Billed Annually</h6>\r\n\t\t\t\t  <hr>\r\n\t\t\t\t  <ul class=\"fa-ul\">\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span><strong>Unlimited Designs</strong></li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span><strong>Unlimited Remixes</li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span><strong>1-click Downloads</strong></li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span><strong>Future Updates</strong></li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span><strong>No Watermark and Ads</strong></li>\r\n\t\t\t\t\t<li><span class=\"fa-li\"><i class=\"fa fa-check\"></i></span><strong>Help and Support</strong></li>\r\n\t\t\t\t  </ul>\r\n\t\t\t\t  <div class=\"text-center pt-3\"><a href=\"/Login\" class=\"pressDown btn btn-lg\">Try for Free</a></div>\r\n\t\t\t\t</div>\r\n\t\t\t  </div>\r\n\t\t\t</div>\r\n\t\t  </div>\r\n\t\t  <!--div class=\"row py-5\">\r\n\t\t\t<div class=\"col-lg-12\">\r\n\t\t\t\t<div class=\"text-center my-2\">\r\n\t\t\t\t\t<h4>You can try Designtack PRO for free when you sign up. No credit card required :)</h4>\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div-->\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-sm-12 text-center py-5\">\r\n\t\t<h2 class=\"gradient-text text-muted text-primary text-center\">Used by over 150+ users worldwide.</h2>\r\n\t</div>\r\n\t<!--Row class=\"p-4 justify-content-center\">\r\n\t\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"py-5 my-2 text-center\" >\r\n\t\t\t<h1 class=\"gradient-text text-primary text-center\">Our Testimonials</h1>\r\n\t\t\t<h4 class=\"text-muted\">What our customers are saying.</h4>\r\n\t\t</Col>\r\n\t\t<Col sm=\"8\" class=\"pt-2\">\r\n\t\t\t<Alert color=\"info\">\r\n\t\t\t\t<h5 class=\"alert-heading\">The app itself is good, in fact it’s easy to use and well explained.</h5>\r\n\t\t\t\t- Nicholas\r\n\t\t\t  </Alert>\r\n\t\t</Col>\r\n\t\t<Col sm=\"8\" class=\"pt-2 text-right\">\r\n\t\t\t<Alert color=\"success\">\r\n\t\t\t\t<h5 class=\"alert-heading\">It’s very impressive engineering.</h5>\r\n\t\t\t\t- Jonathan millett\r\n\t\t\t  </Alert>\r\n\t\t</Col>\r\n\t\t<Col sm=\"8\" class=\"pt-2 text-left\">\r\n\t\t\t<Alert color=\"warning\">\r\n\t\t\t\t<h5 class=\"alert-heading\">Love how it easily helps to create content and that too in bulk. Solves social media marketing problems for me!</h5>\r\n\t\t\t\t- VD\r\n\t\t\t  </Alert>\r\n\t\t</Col>\r\n\t</Row-->\r\n\r\n\r\n\t  <!-- Call to action by Boostrapious with changing bg color \r\n\t\t<div class=\"mt-5 css-selector jumbotron bg-cover text-white\">\r\n\t\t\t<div class=\"container py-2\">\r\n\t\t\t\t<h1 class=\"display-4\">Start making content to grow your brand!</h1>\r\n\t\t\t\t<p></p>\r\n\t\t\t\t<Link to=\"/Login\"><Button outline class=\"mt-2\" color=\"light\" size=\"lg\">Get Started</Button></Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t-->\r\n\t\t<div class=\"bluishBG\">\r\n\t\t\t<Row class=\"py-5\">\r\n\t\t\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"p-4\">\r\n\t\t\t\t<h1 id=\"textWhite\" class=\"font-weight-bold text-center\">Are you making content for your business?</h1>\r\n\t\t\t</Col>\r\n\t\t\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t\t\t<a href=\"/Login\" class=\"pressDown btn btn-lg\">Get Started for Free</a>\r\n\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\r\n\t<!--Footer Menu Component-->\r\n\t<Footer />\r\n\t  <!-- End -->\r\n</Container>\r\n",
    "<svelte:head>\r\n\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n.login{\r\n  min-height: 100vh;\r\n}\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n</style>\r\n<script>\r\nimport {Row, Col, Container, Jumbotron, Form, FormGroup, FormText, Input, CustomInput, Label, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap';\r\nimport './firebase.js'\r\nimport Profile from './Profile.svelte';\r\nimport Footer from './Footer.svelte';\r\nimport * as firebaseui from 'firebaseui/dist/npm';\r\n\r\n\t//yaha pe auth = firebase.auth()\r\n\r\n    import { auth, googleProvider, twitterProvider, firebaseAnalytics } from './firebase';\r\n    import { authState } from 'rxfire/auth';\r\n\r\n    let user;\r\n\r\n\tlet ui = new firebaseui.auth.AuthUI(auth);\r\n    const unsubscribe = authState(auth).subscribe(u => user = u);\r\n\r\n    function googleLogin() {\r\n\t\tauth.signInWithPopup(googleProvider);\r\n\t\tfirebaseAnalytics.logEvent('google_login');\r\n\t}\r\n\r\n\tfunction twitterLogin(){\r\n\t\t\r\n\t\tauth.signInWithRedirect(twitterProvider);\r\n\r\n\t\tauth.getRedirectResult().then(function(result) {\r\n\t\t\tif (result.credential) {\r\n\t\t\t\t// This gives you a the Twitter OAuth 1.0 Access Token and Secret.\r\n\t\t\t\t// You can use these server side with your app's credentials to access the Twitter API.\r\n\t\t\t\tvar token = result.credential.accessToken;\r\n\t\t\t\tvar secret = result.credential.secret;\r\n\t\t\t\t// ...\r\n\t\t\t}\r\n\t\t\t// The signed-in user info.\r\n\t\t\tuser = auth.currentUser;\r\n\t\t\t// TILL HERE, YOU ARE DEFINITELY GETTING THE USER'S INFORMATION\r\n\r\n\t\t\tif (user) {\r\n\t\t\t\tconsole.log(user)\r\n\t\t\t\tuser.providerData.forEach(function (profile) {\r\n\t\t\t\t/*\tconsole.log(\"Sign-in provider: \" + profile.providerId);\r\n\t\t\t\t\tconsole.log(\"  Provider-specific UID: \" + profile.uid);\r\n\t\t\t\t\tconsole.log(\"  Name: \" + profile.displayName);\r\n\t\t\t\t\tconsole.log(\"  Email: \" + profile.email);\r\n\t\t\t\t\tconsole.log(\"  Photo URL: \" + profile.photoURL);*/\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t}).catch(function(error) {\r\n\t\t\t\t// Handle Errors here.\r\n\t\t\t\tvar errorCode = error.code;\r\n\t\t\t\tvar errorMessage = error.message;\r\n\t\t\t\t// The email of the user's account used.\r\n\t\t\t\tvar email = error.email;\r\n\t\t\t\t// The firebase.auth.AuthCredential type that was used.\r\n\t\t\t\tvar credential = error.credential;\r\n\t\t\t\t// ...\r\n\r\n\t\t\t\tconsole.log(errorCode)\r\n\t\t\t\tconsole.log(errorMessage)\r\n\t\t\t\tconsole.log(credential)\r\n\t\t\t});\r\n\t\t\tfirebaseAnalytics.logEvent('twitter_login');\r\n\t}\r\n\r\n\tfunction emailLogin() {\r\n\t\t/*ui.start('#firebaseui-auth-container', {\r\n\t\tsignInOptions: [\r\n\t\tfirebase.auth.EmailAuthProvider.PROVIDER_ID\r\n\t\t],\r\n\t\t// Other config options...\r\n\t\t});*/\r\n\r\n\t\tlet uiConfig = {\r\n\t\t\tcallbacks: {\r\n\t\t\t\tsignInSuccessWithAuthResult: function(authResult, redirectUrl) {\r\n\t\t\t\t// User successfully signed in.\r\n\t\t\t\t// Return type determines whether we continue the redirect automatically\r\n\t\t\t\t// or whether we leave that to developer to handle.\r\n\t\t\t\tuser.sendEmailVerification();\r\n\t\t\t\treturn true;\r\n\t\t\t\t},\r\n\t\t\t\tuiShown: function() {\r\n\t\t\t\t// The widget is rendered.\r\n\t\t\t\t// Hide the loader.\r\n\t\t\t\tdocument.getElementById('loader').style.display = 'none';\r\n\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t// Will use popup for IDP Providers sign-in flow instead of the default, redirect.\r\n\t\t\t\tsignInFlow: 'popup',\r\n\t\t\t\tsignInOptions: [\r\n\t\t\t\tfirebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n\t\t\t\t],\r\n\t\t\t\t// Terms of service url.\r\n\t\t\t\ttosUrl: '/TOS',\r\n\t\t\t\t// Privacy policy url.\r\n\t\t\t\tprivacyPolicyUrl: '/PrivacyPolicy'\r\n\t\t\t};\r\n\r\n\t// The start method will wait until the DOM is loaded.\r\n\tui.start('#firebaseui-auth-container', uiConfig);\r\n\tfirebaseAnalytics.logEvent('email_login');\r\n\t}\r\n//console.log(auth.currentUser)\r\n</script>\r\n<Container fluid>\r\n\t{#if user} \r\n\t\t<Profile {...user} />\r\n\t{:else}\r\n\t<Row class=\"login text-center py-5\">\r\n\t\t\t\t\t\t\t\t<Col sm=\"12\" class=\"m-2\">\r\n\t\t\t\t\t\t\t\t\t\t<p class=\"textBlue display-4 font-weight-bold\">Sign in to your account</p>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col sm=\"12\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"m-4\">\r\n\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<h5>💪 Build and log content creation habit.</h5>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<h5>⏳ Track how much time is being saved.</h5>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t\t<h5>🎨 Start making social media content.</h5>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button color=\"primary\" class=\"w-25 font-weight-bold mb-2 shadow-sm\" on:click={emailLogin}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<div id=\"firebaseui-auth-container\"></div>\r\n\t\t\t\t\t\t\t\t\t<div id=\"loader\" hidden><h5>Loading...</h5></div>\r\n\t\t\t\t\t\t\t\t</Col>\r\n                                <Col sm=\"12\" class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button color=\"light\" class=\"w-25 font-weight-bold mb-2 shadow-sm\" on:click={googleLogin}>\r\n\t\t\t\t\t\t\t\t\t\tGoogle\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t<Button color=\"info\" class=\"w-25 font-weight-bold mb-2 shadow-sm\" on:click={twitterLogin}>\r\n\t\t\t\t\t\t\t\t\t\tTwitter\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t</Row>\r\n\t<hr/>\r\n\t<Footer />\r\n\t{/if}\r\n</Container>",
    "<style>\r\n    #nounderline{\r\n        text-decoration: none;\r\n    }\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Label, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n</script>\r\n<Row class=\"pt-5\">\r\n    <Col sm=\"12\" class=\"p-3\">\r\n        <h1 class=\"textBlue gradient-text font-weight-bold text-center\">Oops!</h1>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <h4 class=\"font-weight-bold\">You seem to be logged out. Try logging in, again.</h4>\r\n    </Col>\r\n</Row>\r\n<Row class=\"mt-2 justify-content-center\">\r\n<Row class=\"pt-3\">\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <a id=\"nounderline\" class=\"pressDown btn-block btn-lg\" href=\"/Login\">Log into my account</a>\r\n    </Col>\r\n</Row>\r\n</Row>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n</svelte:head>\r\n<style>\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n</style>\r\n<script>\r\n  import {Row, Col, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n\r\n</script>\r\n<div>\r\n\t<Row class=\"pt-5 m-4\">\r\n        <Col class=\"text-center\">\r\n            <h2>Privacy Policy</h2>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"text-justify pt-4\">\r\n<h5>Your privacy is important to us. It is Designtack's policy to respect your privacy regarding any information we may collect from you across our website, <a class=\"textBlue\"  href=\"http://www.designtack.com\">http://www.designtack.com</a>, and other sites we own and operate.</h5>\r\n<h5>We only ask for personal information when we truly need it to provide a service to you. We collect it by fair and lawful means, with your knowledge and consent. We also let you know why we’re collecting it and how it will be used.</h5>\r\n<h5>We only retain collected information for as long as necessary to provide you with your requested service. What data we store, we’ll protect within commercially acceptable means to prevent loss and theft, as well as unauthorized access, disclosure, copying, use or modification.</h5>\r\n<h5>We don’t share any personally identifying information publicly or with third-parties, except when required to by law.</h5>\r\n<h5>Our website may link to external sites that are not operated by us. Please be aware that we have no control over the content and practices of these sites, and cannot accept responsibility or liability for their respective privacy policies.</h5>\r\n<h5>You are free to refuse our request for your personal information, with the understanding that we may be unable to provide you with some of your desired services.</h5>\r\n<h5>Your continued use of our website will be regarded as acceptance of our practices around privacy and personal information. If you have any questions about how we handle user data and personal information, feel free to contact us.</h5>\r\n<h5>This policy is effective as of 1 July 2020.</h5>\r\n<h5><a class=\"textBlue\" href=\"https://getterms.io\" title=\"Generate a free privacy policy\">Privacy Policy created with GetTerms.</a></h5>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n<!--<Row class=\"pt-5\">\r\n    <Col sm=\"12\" class=\"p-3\">\r\n        <h3 class=\"text-center text-success\">The Who</h3>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <h4>The idea came up when small business and indepedent </h4>\r\n    </Col>\r\n</Row>-->\r\n<Footer />\r\n</div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    \r\n    <script src=\"https://cdn.paddle.com/paddle/paddle.js\" crossorigin=\"anonymous\" SameSite=\"Secure\"></script>\r\n    <script type=\"text/javascript\">\r\n        Paddle.Setup({ vendor: 116844 });\r\n    </script>\r\n</svelte:head>\r\n<style>\r\n\r\n\t.bluishBG{\r\n\t\tbackground-color: #8fa7ff;\r\n\t\tmargin-top: 5%;\r\n\t}\r\n\r\n\t.textWhite{\r\n\t\tcolor: white;\r\n\t}\r\n    #toggleUpgrade{\r\n        display:none;\r\n    }\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .questionPointer {\r\n        cursor: help;\r\n        color: #5778f3;\r\n    }\r\n    .hidden {\r\n            display: none;\r\n        }  \r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownUpgrade{\r\n        background-color: #dbbc31;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #bba545;\r\n        transition: 0.1s;\r\n    }\r\n    .pressDownUpgrade:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n    \r\n</style>\r\n<script>\r\n    let logo = 'https://i.imgur.com/5CHnbDm.png';\r\n\r\n    export let displayName;\r\n    export let email;\r\n    export let emailVerified;\r\n    //export let photoURL;\r\n    export let uid;\r\n\r\n    let checkoutId;\r\n    let isPro = false;\r\n\r\n  import Datepicker from 'svelte-calendar';\r\n  import App from './App.svelte';\r\n  import Template from './Template.svelte';\r\n  import { marketingIdeas } from './modules/Inspiration.svelte';\r\n  let marketingIdea = marketingIdeas();\r\n\r\n  function generateIdea() {\r\n        firebaseAnalytics.logEvent('idea_generation_clicked')\r\n\t\tmarketingIdea = marketingIdeas();\r\n\t}\r\n\r\n\r\n  import { onMount } from 'svelte';\r\n  import { Router, Link, link, Route } from \"svelte-routing\";\r\n  import { Row, Alert,Modal, ModalBody, ModalFooter, ModalHeader, Table, Label, Container, Button, Col, Collapse, Card, CardBody} from 'sveltestrap';\r\n  let isOpen = true;\r\n  let open = false;\r\n  const toggle = () => (open = !open);\r\n\r\n  import { auth, googleProvider, twitterProvider, db, firebaseAnalytics } from './firebase';\r\n  let user = auth.currentUser;\r\n  console.log(auth.currentUser.uid);\r\n  localStorage.setItem(\"usrkey\",JSON.stringify(auth.currentUser.uid));\r\n\r\n\r\n  let contentMadeSoFar,timesave;\r\n  let fbctr=0,twctr=0,ldctr=0,otctr=0;\r\n\r\n  let dailyquote='', dailyquoteauthor='';\r\n\r\nasync function dailyQuote() {\r\n    await fetch('https://api.quotable.io/random')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(`${data.content} —${data.author}`)\r\n            dailyquote = data.content;\r\n            dailyquoteauthor = data.author;\r\n    })\r\n}\r\n\r\n    function totalChecks(){\r\n        (document.getElementById(\"fb\").checked === true)? fbctr=1:fbctr=0;\r\n        (document.getElementById(\"tw\").checked === true)? twctr=1:twctr=0;\r\n        (document.getElementById(\"ld\").checked === true)? ldctr=1:ldctr=0;\r\n        (document.getElementById(\"ot\").checked === true)? otctr=1:otctr=0;\r\n        totalctr=fbctr+twctr+ldctr+otctr;\r\n\r\n        //code to check if user exists in userdb collection or not\r\n        db.collection('usersDB').doc(uid).get().then(doc => {\r\n        if (doc.exists) {\r\n            //if user is already there, then save his totalctr\r\n                let val = contentMadeSoFar+totalctr\r\n                db.collection('usersDB').doc(uid).set({\r\n                        totalCreated: val\r\n                })\r\n                contentMadeSoFar = val\r\n                timesaved()\r\n        } else {\r\n            db.collection('usersDB').doc(uid).set({\r\n                        totalCreated: val\r\n                })\r\n                contentMadeSoFar = val\r\n                timesaved()\r\n        }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n        /*document.getElementById(\"today_date\").classList.remove(\"text-danger\");\r\n        document.getElementById(\"today_date\").classList.add(\"text-success\");\r\n        document.getElementById(\"contentStatusText\").innerHTML = \"Content created for today. Woohoo! 🥳\";\r\n        document.getElementById(\"contentStatusText\").classList.add(\"text-success\");\r\n        document.getElementById('btn_text').innerText = \"Completed 😎\";\r\n        document.getElementById('btn_text').disabled = true;*/\r\n        timesaved();\r\n    }\r\n\r\n    function timesaved(){\r\n        timesave = contentMadeSoFar*2;\r\n    }\r\n\r\n    /*function toggleSuccessText()\r\n    {\r\n        var x = document.getElementById(\"successText\");\r\n        x.classList.toggle(\"hidden\");\r\n    }*/\r\n\r\n    function sendEmailVerify(){\r\n        user.sendEmailVerification().then(function() {\r\n            // Email sent.\r\n            alert(\"Email Verification Sent! Check for an email from Designtack :)\");\r\n            \r\n        }).catch(function(error) {\r\n            // An error happened.\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    function checkoutClosed(data) {\r\n  //  console.log(data);\r\n    alert('Your purchase has been cancelled, we hope to see you again soon!');\r\n    }\r\n\r\n    function openPCheckout() {\r\n        Paddle.Checkout.open({ \r\n            product: 643903,\r\n            email: email,\r\n            completeDetails: true,\r\n            closeCallback:\"checkoutClosed\",\r\n            successCallback: function(data) {\r\n                checkoutId = data.checkout.id;\r\n                \r\n                Paddle.Order.details(checkoutId, function(data) {\r\n                // Order data, downloads, receipts etc... available within 'data' variable.\r\n                console.log(data);\r\n\r\n                }).then(()=> {\r\n                    setTimeout(function(){ alert(\"Payment Successful! You will receive an Email with full details.\"); }, 2000);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\tfunction openMCheckout() {\r\n        firebaseAnalytics.logEvent('popup_clicked_MonthlyCheckout', {\r\n            paymentMethod: 'Monthly_Popup_opened'\r\n        })\r\n        Paddle.Checkout.open({ \r\n            product: 597953,\r\n            email: email,\r\n            completeDetails: true,\r\n            closeCallback:\"checkoutClosed\",\r\n            successCallback: function(data) {\r\n                checkoutId = data.checkout.id;\r\n                \r\n                Paddle.Order.details(checkoutId, function(data) {\r\n                // Order data, downloads, receipts etc... available within 'data' variable.\r\n                console.log(data);\r\n\r\n                //To call firebase db and add details so that we can know this is a pro user, by saving there checkout ID and email\r\n                    db.collection('PROusers').doc(uid).set({\r\n                        email: email,\r\n                        checkoutId: checkoutId,\r\n                        planType: \"Monthly\",\r\n                        SubscriptionDate: Date()\r\n                    })\r\n                }).then(()=> {\r\n                    setTimeout(function(){ alert(\"Payment Successful! Enjoy your PRO Access.\"); }, 2000);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    function openYCheckout() {\r\n        firebaseAnalytics.logEvent('popup_clicked_YearlyCheckout', {\r\n            paymentMethod: 'Yearly_Popup_opened'\r\n        })\r\n        Paddle.Checkout.open({ \r\n            product: 597966,\r\n            completeDetails: true,\r\n            email: email,\r\n            successCallback: function(data) {\r\n                checkoutId = data.checkout.id;\r\n                \r\n                Paddle.Order.details(checkoutId, function(data) {\r\n                // Order data, downloads, receipts etc... available within 'data' variable.\r\n                console.log(data);\r\n\r\n                //To call firebase db and add details so that we can know this is a pro user, by saving there checkout ID and email\r\n                    db.collection('PROusers').doc(uid).set({\r\n                        email: email,\r\n                        checkoutId: checkoutId,\r\n                        planType: \"Yearly\",\r\n                        SubscriptionDate: Date()\r\n                    })\r\n                }).then(()=> {\r\n                    setTimeout(function(){ alert(\"Payment Successful! Enjoy your PRO Access.\"); }, 2000);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    function emailUserTransactions(){\r\n        firebaseAnalytics.logEvent('Emailed_user_txn_info')\r\n        Paddle.User.History(email, null, function(response) {\t\t\t\t\t\r\n            if(response.success) {\r\n                // Let the user know they'll receive an email with their \r\n                // order history and license codes if their email was matched.\r\n                alert(response.message)\r\n            } else {\r\n                // Likely a formatting error in the email, vendorID, or ProductID.\r\n            }\r\n            });\r\n    }\r\n\r\n    function backToHome(){\r\n\t\twindow.location = \"/\";\r\n\t}\r\n\r\n    function DayToday(val = 0) {\r\n        let d = new Date();\r\n        let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        return days[d.getDay()+val];\r\n    }\r\n\r\n    function DateToday(val=0) {\r\n        let d = new Date();\r\n        let todayDate = (d.getDate()+val)+\"/\"+(d.getMonth()+1)+\"/\"+d.getFullYear()\r\n        return todayDate;\r\n    }\r\n\r\n    function thisWeek(val = 0){\r\n        let d = new Date();\r\n        let todayDate = ((d.getDate() - d.getDay())+val)+\"/\"+(d.getMonth()+1)+\"/\"+d.getFullYear()\r\n        return todayDate;\r\n    }\r\n\r\n    onMount(() => {\r\n        // for unverified users\r\n        if(!emailVerified)\r\n        {\r\n            \r\n        }\r\n        else {\r\n\r\n        }\r\n        \r\n        // CHECK IF THE USER EXISTS IN USERDB\r\n        db.collection('usersDB').doc(user.uid).get().then(doc => {\r\n        if (doc.exists) {\r\n            let userData = doc.data();\r\n            console.log(userData);\r\n            contentMadeSoFar = userData.totalCreated;\r\n            timesaved();\r\n        } else {\r\n            db.collection('usersDB').doc(user.uid).set({\r\n                        totalCreated: 0\r\n            })\r\n        }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n        \r\n        //document.getElementById(\"today_date\").classList.add(\"text-danger\"); \r\n\r\n        // Now to check if a user is PRO or NOT by checking PRO users database in firebase.\r\n        db.collection('PROusers').doc(user.uid).get().then(doc => {\r\n            if (doc.exists) {\r\n        // console.log(\"Document data:\", doc.data());\r\n                isPro = true;\r\n        } else {\r\n            // doc.data() will be undefined in this case\r\n        //  console.log(\"No such document!\");\r\n            isPro = false;\r\n        }\r\n        }).catch(function(error) {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n\r\n        });\r\n\r\n</script>\r\n<Container fluid>\r\n    \r\n    {#if !emailVerified}\r\n    <Row class=\"login text-center py-2\">\r\n        <Col sm=\"12\" class=\"m-2\">\r\n            <h3 class=\"text-primary font-weight-bold\">Welcome, { displayName }!</h3>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"m-1\">\r\n            <Card body color=\"light\"><h5>You are just one step away from getting started! <a href='#' class='textBlue' on:click={sendEmailVerify}>Click here to verify your email address.</a></h5></Card>\r\n        </Col>\r\n        <!--{#if isPro}\r\n        <Col sm=\"12\" class=\"m-1\">\r\n            <h6 class=\"textBlue font-weight-bold\">Pro 👑</h6>\r\n        </Col>\r\n        {:else}\r\n        {/if}-->\r\n    </Row>\r\n    <!--<Row class=\"login text-center py-5\">\r\n        <Col sm=\"12\" class=\"m-2\">\r\n            <img src={logo} width=\"250\" height=\"250\" alt=\"logo\"/>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"m-2\">\r\n            <h4 class=\"text-primary font-weight-bold\">Welcome, { displayName }!</h4>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"m-2\">\r\n            <h4>We are getting your account ready to get started with Designtack...</h4>\r\n            <h4>Click the button below to verify your email address!</h4>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"m-2\">\r\n            <span class=\"pressDown btn btn-lg\" >Verify My Email Address 📧</span>\r\n        </Col>\r\n        <Col sm=\"12\" class=\"m-2\">\r\n            <h5 id=\"successText\" class=\"hidden text-success\"></h5>\r\n        </Col>\r\n    </Row>-->\r\n    {:else}  \r\n    <Row class=\"login text-center py-2\">\r\n        <Col sm=\"12\" class=\"m-2\">\r\n            <h3 class=\"text-primary font-weight-bold\">Welcome back, { displayName }!</h3>\r\n        </Col>\r\n        <!--{#if isPro}\r\n        <Col sm=\"12\" class=\"m-1\">\r\n            <h6 class=\"textBlue font-weight-bold\">Pro 👑</h6>\r\n        </Col>\r\n        {:else}\r\n        {/if}-->\r\n    </Row>\r\n    {/if}\r\n\r\n    <Row class=\"login text-center pt-1 mb-2\">\r\n        <Col>\r\n            <Row class=\"my-2\">\r\n                <Col sm=\"3\">\r\n                    <Card body>\r\n                        <Row class=\"login text-center\">\r\n                            <Col>\r\n                            <h5 class=\"textBlue questionPointer font-weight-bold\" on:click={toggle}>Your Statistics {#if isPro}<span>(Pro 👑)</span>{:else}{/if}</h5>\r\n                            <hr>\r\n                            </Col>\r\n                        </Row>\r\n                    <Row class=\"login text-center py-4\">\r\n                        <Col lg=\"12\">\r\n                            <h5 class=\"text-primary font-weight-bold\">🎨 Content created</h5> <span>{contentMadeSoFar}</span>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"login text-center\">\r\n                        <Col lg=\"12\">\r\n                            <h5 class=\"text-primary font-weight-bold\">⏰ Time saved </h5> <span>{timesave} minutes (approx.)</span>\r\n                            <Modal isOpen={open} {toggle}>\r\n                                <ModalHeader>\r\n                                    How is your saved time calculated?\r\n                                </ModalHeader>\r\n                                <ModalBody>\r\n                                  Time saved is calculated by assuming 1 piece of content creation takes approximately\r\n                                  2 minute of time.\r\n                                </ModalBody>\r\n                                <ModalFooter class=\"text-left\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                    <h6>Time saved = Content Created x 2</h6>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ModalFooter>\r\n                              </Modal>\r\n                        </Col>\r\n                    </Row>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm=\"9\">\r\n                    <Card body>\r\n                        <Datepicker\r\n                        buttonBackgroundColor='white'\r\n                        buttonTextColor='#5778f3'\r\n                        highlightColor='#5778f3'\r\n                        dayBackgroundColor='#efefef'\r\n                        dayTextColor='#333'\r\n                        dayHighlightedBackgroundColor='#5778f3'\r\n                        dayHighlightedTextColor='#fff' />\r\n                        <hr>\r\n                        <Row class=\"login text-center m-4\">\r\n                            <Col sm=\"6\">\r\n                                <a id='btntoggle' href=\"/App\" class=\"pressDown btn btn-lg\">Create New Design</a>\r\n                                <h5 id=\"contentStatusText\" class=\"pt-2 text-primary\">Create Unique Content with Editor.</h5>\r\n                            </Col>\r\n                            <Col sm=\"6\">\r\n                                <a id='btntoggle' href=\"/templates\" class=\"pressDown btn btn-lg\">Choose A Template</a>\r\n                                <h5 id=\"contentStatusText\" class=\"pt-2 text-primary\">Create Quick content with Templates!</h5>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Col> \r\n    </Row>\r\n\r\n        {#if !isPro}\r\n        <Card id=\"upgrade\" body>\r\n        <Row class=\"login text-left py-3\">\r\n            <Col>\r\n                <h4 class=\"alert-heading textBlue font-weight-bold text-center\">Enable All Features 👑</h4>\r\n                <Row>\r\n                    <Col sm=\"12\" class=\"text-center p-4\">\r\n                        <h5 class='text-justify'>♾️ Unlimited Remixing to Make Unique Content!</h5>\r\n                        <h5 class='text-justify'>🔽 1-click to Download all Remixed Designs.</h5>\r\n                        <h5 class='text-justify'>📩 Monthly Marketing Strategy Emails.</h5>\r\n                        <h5 class='text-justify'>🤠 Full 1-on-1 Priority Support for Help.</h5>\r\n                        <div class=\"pt-3\">\r\n                            <button class=\"btn-success btn\" on:click={openYCheckout}>Activate Free Trial</button>\r\n                            <div class=\"pt-2 questionPointer\">\r\n                                <h6 class=\"font-weight-bold text-center\">Reach out to cancel anytime.</h6>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row> \r\n            </Col>\r\n            <Col>\r\n                    <h4 class=\"alert-heading textBlue font-weight-bold text-center\">Go further with Package 📦</h4>\r\n                    <Row>\r\n                        <Col sm=\"12\" class=\"text-center p-4\">\r\n                        <h5 class='text-justify'>✅ <strong>30+</strong> High Quality Designs</h5>\r\n                        <h5 class='text-justify'>✅ We do all the design work for you.</h5>\r\n                        <h5 class='text-justify'>✅ Fully Personalised Branded Content.</h5>\r\n                        <h5 class='text-justify'>✅ Ready to Post on your Social Media.</h5>\r\n                        <div class=\"pt-3\">\r\n                            <button class=\"btn-primary btn\" on:click={openPCheckout}>Learn More</button>\r\n                            <div class=\"pt-2 questionPointer\">\r\n                                <h6 class=\"font-weight-bold text-center\">Billed $99 Monthly.</h6>\r\n                            </div>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n            </Col>\r\n        </Row>\r\n        </Card>\r\n        {:else}\r\n        <Card class=\"text-center my-2\" body>\r\n            <h5 class=\"textBlue font-weight-bold text-left\">Your Plan Information</h5>\r\n            <h5 class='pt-2 text-primary'>Get your current plan information:- <a class=\"pressDown btn\" on:click={emailUserTransactions}>Email Me</a></h5>\r\n            \r\n        </Card>\r\n        <!-- \r\n            <div class=\"text-center py-3\">\r\n                        <h4 class=\"alert-heading textBlue font-weight-bold text-center\">Enable All Features</h4>\r\n                        <button class=\"mt-4 pressDown btn btn-lg\" on:click={() => (isOpen = !isOpen)}>👑 Upgrade</button>\r\n                        <Collapse {isOpen}>\r\n                        <div class=\"bluishBG\">\r\n                            <Row>\r\n                            <Col sm=\"12\" class=\"text-center p-4\">\r\n                                <h5 class=\"textWhite font-weight-bold text-center\">💡 Unlimited Content Ideas to Implement!</h5>\r\n                                <h5 class=\"textWhite font-weight-bold text-center\">♾️ Unlimited Remixing to Make Unique Content!</h5>\r\n                                <h5 class=\"textWhite font-weight-bold text-center\">📩 Personalised Content Delivered to your Email.</h5>\r\n                                <h5 class=\"textWhite font-weight-bold text-center\">🤠 Full 1-on-1 Priority Support for Help.</h5>\r\n                                \r\n                                <div class=\"pt-3\">\r\n                              <button class=\"pressDown btn btn-lg\" on:click={openMCheckout}>Upgrade for $6/Mo</button>\r\n                              <div class=\"pt-2 questionPointer\">\r\n                              <h6 on:click={openYCheckout} class=\"textWhite font-weight-bold text-center\">For $60 per 12 Months, Click here</h6>\r\n                              </div>\r\n                                </div>\r\n                            </Col>\r\n                            </Row>\r\n                        </div>\r\n                      </Collapse>\r\n                    </div>\r\n            Row class=\"login text-center\">\r\n        <Col sm=\"12\" class=\"m-2\">\r\n            <Card body>\r\n            <h4 class=\"textBlue font-weight-bold\">Content Idea Generator</h4>\r\n                <p>\r\n                    Get inspiration for Content and Designs to help you get started. Click on the button to generate random idea.\r\n                </p>\r\n            <Row>\r\n                <Col sm=\"12\" md=\"{{ size: 6, offset: 3 }}\">\r\n                <span class=\"pressDown btn btn-lg\" on:click={generateIdea}>Generate Idea</span>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <h5 class=\"textBlue\">\r\n                        <hr/>\r\n                        {marketingIdea}\r\n                    </h5>\r\n                </Col>\r\n            </Row>\r\n            </Card>\r\n        </Col>\r\n        </Row>\r\n        < Row class=\"login text-left\">\r\n            <Card body>\r\n                <Row class=\"login text-center p-1\">\r\n                    <Col sm=\"12\">\r\n                        <h5 id=\"contentStatusText\" class=\"pt-2 text-primary\">Your Plan Information:</h5>\r\n                        <button class=\"pressDown btn btn-lg\" on:click={emailUserTransactions}>Email Me</button>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </Row -->\r\n    {/if}\r\n<Card class=\"text-center py-auto my-2\" body>\r\n    <h5 class=\"textBlue font-weight-bold text-left\">Help & Support</h5>\r\n    <h5 class='pt-2 text-primary'>You can reach out <a class='textBlue' href=\"mailto:vaibhavforeverpr@gmail.com?subject=Support%20Request%20%7C%20Designtack&body=Write%20your%20query%20here...\">to me directly</a> for any support/query/feedback.</h5>\r\n</Card>\r\n<Card>\r\n    \r\n</Card>\r\n</Container>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n</svelte:head>\r\n<style>\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n</style>\r\n<script>\r\n  import {Row, Container, Col,Card,Table,Label, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<p class=\"text-center display-4 textBlue font-weight-bold\">Support</p>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4>Designtack is there for you, shall you get stuck at any stage.</h4>\r\n            <h4>Please reach out to us from the below channels.</h4>\r\n            <h4 class=\"textBlue\">(Quick Response in 24hrs.)</h4>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n<Card body>\r\n<Row>\r\n        <Col>\r\n            <h5>Facebook</h5>\r\n        </Col>\r\n        <Col>\r\n            <h5><a class=\"textBlue\" href=\"https://www.facebook.com/Designtack\" replace>Message us</a></h5>\r\n        </Col>\r\n</Row>\r\n<Row>\r\n        <Col>\r\n            <h5>Twitter</h5>\r\n        </Col>\r\n        <Col>\r\n            <h5><a class=\"textBlue\" href=\"https://www.twitter.com/realdesigntack\" replace>Message us</a></h5>\r\n        </Col>\r\n</Row>\r\n</Card>\r\n\r\n<!--<Row class=\"pt-5\">\r\n    <Col sm=\"12\" class=\"p-3\">\r\n        <h3 class=\"text-center text-success\">The Who</h3>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <h4>The idea came up when small business and indepedent </h4>\r\n    </Col>\r\n</Row>-->\r\n<Footer />\r\n</Container>\r\n</div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n</svelte:head>\r\n<style>\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n</style>\r\n<script>\r\n  import {Row, Col, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n\r\n</script>\r\n<div>\r\n        <Row class=\"pt-5 m-4\">\r\n            <Col class=\"text-center\">\r\n                <h2>Terms of Service</h2>\r\n            </Col>\r\n            <Col sm=\"12\" class=\"text-justify pt-4\">\r\n            <h3>1. Terms</h3>\r\n            <p>By accessing the website at <a href=\"https://www.designtack.com\">http://www.designtack.com</a>, you are agreeing to be bound by these terms of service, all applicable laws and regulations, and agree that you are responsible for compliance with any applicable local laws. If you do not agree with any of these terms, you are prohibited from using or accessing this site. The materials contained in this website are protected by applicable copyright and trademark law.</p>\r\n            <h3>2. Use License</h3>\r\n            <ol type=\"a\">\r\n               <li>Permission is granted to temporarily download one copy of the materials (information or software) on Designtack's website for personal, non-commercial transitory viewing only. This is the grant of a license, not a transfer of title, and under this license you may not:\r\n               <ol type=\"i\">\r\n                   <li>modify or copy the materials;</li>\r\n                   <li>use the materials for any commercial purpose, or for any public display (commercial or non-commercial);</li>\r\n                   <li>attempt to decompile or reverse engineer any software contained on Designtack's website;</li>\r\n                   <li>remove any copyright or other proprietary notations from the materials; or</li>\r\n                   <li>transfer the materials to another person or \"mirror\" the materials on any other server.</li>\r\n               </ol>\r\n                </li>\r\n               <li>This license shall automatically terminate if you violate any of these restrictions and may be terminated by Designtack at any time. Upon terminating your viewing of these materials or upon the termination of this license, you must destroy any downloaded materials in your possession whether in electronic or printed format.</li>\r\n            </ol>\r\n            <h3>3. Disclaimer</h3>\r\n            <ol type=\"a\">\r\n               <li>The materials on Designtack's website are provided on an 'as is' basis. Designtack makes no warranties, expressed or implied, and hereby disclaims and negates all other warranties including, without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights.</li>\r\n               <li>Further, Designtack does not warrant or make any representations concerning the accuracy, likely results, or reliability of the use of the materials on its website or otherwise relating to such materials or on any sites linked to this site.</li>\r\n            </ol>\r\n            <h3>4. Limitations</h3>\r\n            <p>In no event shall Designtack or its suppliers be liable for any damages (including, without limitation, damages for loss of data or profit, or due to business interruption) arising out of the use or inability to use the materials on Designtack's website, even if Designtack or a Designtack authorized representative has been notified orally or in writing of the possibility of such damage. Because some jurisdictions do not allow limitations on implied warranties, or limitations of liability for consequential or incidental damages, these limitations may not apply to you.</p>\r\n            <h3>5. Accuracy of materials</h3>\r\n            <p>The materials appearing on Designtack's website could include technical, typographical, or photographic errors. Designtack does not warrant that any of the materials on its website are accurate, complete or current. Designtack may make changes to the materials contained on its website at any time without notice. However Designtack does not make any commitment to update the materials.</p>\r\n            <h3>6. Links</h3>\r\n            <p>Designtack has not reviewed all of the sites linked to its website and is not responsible for the contents of any such linked site. The inclusion of any link does not imply endorsement by Designtack of the site. Use of any such linked website is at the user's own risk.</p>\r\n            <h3>7. Modifications</h3>\r\n            <p>Designtack may revise these terms of service for its website at any time without notice. By using this website you are agreeing to be bound by the then current version of these terms of service.</p>\r\n            <h3>8. Governing Law</h3>\r\n            <p>These terms and conditions are governed by and construed in accordance with the laws of Delhi, India and you irrevocably submit to the exclusive jurisdiction of the courts in that State or location.</p>\r\n            <p><a class=\"textBlue\" href=\"https://getterms.io\" title=\"Generate a free terms of use document\">Terms of Use created with GetTerms.</a></p>            \r\n\t\t</Col>\r\n    </Row>\r\n\r\n<!--<Row class=\"pt-5\">\r\n    <Col sm=\"12\" class=\"p-3\">\r\n        <h3 class=\"text-center text-success\">The Who</h3>\r\n    </Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n        <h4>The idea came up when small business and indepedent </h4>\r\n    </Col>\r\n</Row>-->\r\n<Footer />\r\n</div>",
    "<script>\n\timport { getContext } from 'svelte';\n\timport { TABS } from './Tabs.svelte';\n\n\tconst tab = {};\n\tconst { registerTab, selectTab, selectedTab } = getContext(TABS);\n\n\tregisterTab(tab);\n</script>\n\n<style>\n\tbutton {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tborder-bottom: 2px solid white;\n\t\tborder-radius: 0;\n\t\tmargin: 0;\n\t\tcolor: #ccc;\n\t}\n\t\n\t.selected {\n\t\tborder-bottom: 2px solid teal;\n\t\tcolor: #333;\n\t}\n</style>\n\n<button class:selected=\"{$selectedTab === tab}\" on:click=\"{() => selectTab(tab)}\">\n\t<slot></slot>\n</button>",
    "<div class=\"tab-list\">\n\t<slot></slot>\n</div>\n\n<style>\n\t.tab-list {\n\t\tborder-bottom: 1px solid teal;\n\t}\n</style>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n        <!-- Appzi: Capture Insightful Feedback -->\r\n        <script async src=\"https://w.appzi.io/w.js?token=6UPb5\"></script>\r\n        <!-- End Appzi -->\r\n</svelte:head>\r\n<style>\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n\r\nimg {\r\n  height: auto;\r\n  max-width: 100%;\r\n  vertical-align: middle;\r\n}\r\n\r\n.btn {\r\n  color: #6178f3;\r\n  padding: 0.8rem;\r\n  font-size: 14px;\r\n  text-transform: uppercase;\r\n  border-radius: 4px;\r\n  font-weight: 400;\r\n  display: block;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  border: 1px solid #6178f3;\r\n  background: transparent;\r\n}\r\n\r\n.btn:hover{\r\n  color: #6178f3;\r\n  font-weight: bold;\r\n\r\n}\r\n\r\n.cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.cards_item {\r\n  display: flex;\r\n  padding: 1rem;\r\n}\r\n\r\n@media (min-width: 40rem) {\r\n  .cards_item {\r\n    width: 50%;\r\n  }\r\n}\r\n\r\n@media (min-width: 56rem) {\r\n  .cards_item {\r\n    width: 33.3333%;\r\n  }\r\n}\r\n\r\n.card {\r\n  background-color: white;\r\n  border-radius: 0.25rem;\r\n  box-shadow: 0 20px 40px -14px rgba(0, 0, 0, 0.25);\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n}\r\n\r\n.card_content {\r\n  padding: 1rem;\r\n  /*background: linear-gradient(to bottom left, #EF8D9C 40%, #FFC39E 100%);*/\r\n}\r\n\r\n.card_title {\r\n  color: #6178f3;\r\n  font-size: 1.1rem;\r\n  font-weight: 700;\r\n  letter-spacing: 1px;\r\n  text-transform: capitalize;\r\n  margin: 10px;\r\n}\r\n\r\n.card_text {\r\n  color: #000;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5;\r\n  margin-bottom: 1.25rem;    \r\n  font-weight: 400;\r\n}\r\n\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import { onMount } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n  import {Row, Col,Card, Container, Jumbotron, Label, Form, FormGroup, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n  let simpleDesignTemplateImg = \"./images/simple-design-template-preview.png\"; \r\n  let aestheticDesignTemplateImg = \"./images/aesthetic-design-template-preview.png\";\r\n  let blobDesignTemplateImg = \"./images/blob-design-template-preview.png\";\r\n  let gradientDesignTemplateImg = \"./images/gradient-design-template-preview.png\";\r\n\r\n  let halfRectDesignTemplateImg = \"./images/halfrect-design-template-preview.png\";\r\n  let rectDesignTemplateImg = \"./images/rect-design-template-preview.png\";\r\n\r\n  let QuotesTwoDesignTemplateImg = \"./images/quotes-two-design-template-preview.png\";\r\n  let QuotesThreeDesignTemplateImg = \"./images/quotes-three-design-template-preview.png\";\r\n  let QuotesDesignTemplateImg = \"./images/quotes-design-template-preview.png\";\r\n  \r\n\r\n/*\r\nAuthentication check procedure\r\n*/\r\nimport { auth, db, firebaseAnalytics } from './firebase';\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\n\r\nlet dailyquote='', dailyquoteauthor='', textContent='';\r\nasync function dailyQuote() {\r\n    await fetch('https://api.quotable.io/random')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            textContent = data.content\r\n    })\r\n}\r\n\r\nfunction valuesToLocalStorage(e) {\r\n  e.preventDefault();\r\n  let heading = document.getElementById('heading').value\r\n  localStorage.setItem(\"heading\",JSON.stringify(heading));\r\n  \r\n  let subheading = document.getElementById('subheading').value\r\n  localStorage.setItem(\"subheading\",JSON.stringify(subheading));\r\n\r\n  let companyinfo = document.getElementById('companyinfo').value\r\n  localStorage.setItem(\"companyinfo\",JSON.stringify(companyinfo));\r\n  alert('Your values were applied successfully!')\r\n}\r\n\r\n    beforeUpdate(() => {\r\n\t\r\n\t});\r\n\r\n    onMount(() => {\r\n\r\n    });\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n    <!--{#if user} UNCOMMENT WHEN YOU DONE WITH THIS--> \r\n\t  <Row class=\"pt-2\">\r\n          <Col sm=\"12\" class=\"p-3\">\r\n            <h1 class=\"textBlue gradient-text font-weight-bold text-center\">Templates Library</h1>\r\n          </Col>\r\n          <!--Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Choose any template, Remix the design & start making.</h4>\r\n\t\t      </Col-->\r\n    </Row>\r\n    {#if user}\r\n    <div class=\"col-sm-12 text-center py-2\">\r\n      <Card class=\"text-center my-2\" body>\r\n      <h6 class=\"textBlue font-weight-bold text-left\">Prefill Values</h6>\r\n      <Row>\r\n        <Col lg='6'>\r\n          <p>Input or paste your text copy here & it will be automatically be applied to all the templates! <br/>You will still be able to customize the templates.</p>\r\n\t\t\t\t\t<Button outline color=\"primary\" size='lg' on:click={dailyQuote}>Feed a Random Quote 🎲</Button>\r\n        </Col>\r\n        <Col lg='6'>\r\n          <Form on:submit={valuesToLocalStorage}>\r\n          <FormGroup>\r\n            <Input bind:value={textContent} type=\"text\" id='heading' placeholder='Heading i.e. Main Sentence. ' required/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input type=\"text\" id='subheading' placeholder='Sub-Heading Sentence i.e. Email, Company Name, Call To Action etc.' required/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Input type=\"text\" id='companyinfo' placeholder='Company Name or Social Media Username' required/>\r\n          </FormGroup>\r\n          <Button color='primary' size='lg' type='submit'>Save values</Button>\r\n          </Form>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n    {/if}\r\n    <ul class=\"cards\">\r\n      \r\n      <li class=\"cards_item\">\r\n        <div class=\"card\">\r\n          <div class=\"card_image\"><img alt=\"Aesthetic Design Template\" src={aestheticDesignTemplateImg} height=\"300\" width=\"500\"></div>\r\n          <div class=\"card_content\">\r\n            <h2 class=\"card_title textBlue\">Aesthetic Design</h2>\r\n            <p class=\"card_text\">Beautiful quote based design for poster and long-form text content.</p>\r\n            <a class=\"btn\" href=\"/aesthetic-design-template\">Edit Template</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"cards_item\">\r\n        <div class=\"card\">\r\n          <div class=\"card_image\"><img alt=\"Blob Design Template\" src={blobDesignTemplateImg} height=\"300\" width=\"500\"></div>\r\n          <div class=\"card_content\">\r\n            <h2 class=\"card_title textBlue\">Classic Blob Design</h2>\r\n            <p class=\"card_text\">Blob background based design template with amazing look.</p>\r\n            <a class=\"btn\" href=\"/blob-design-template\">Edit Template</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"cards_item\">\r\n        <div class=\"card\">\r\n          <div class=\"card_image\"><img alt=\"Gradient Design Template\" src={gradientDesignTemplateImg} height=\"300\" width=\"500\"></div>\r\n          <div class=\"card_content\">\r\n            <h2 class=\"card_title textBlue\">Gradient Design</h2>\r\n            <p class=\"card_text\">Template design based on gradient background with minimal look.</p>\r\n            <a class=\"btn\" href=\"/gradient-design-template\">Edit Template</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"cards_item\">\r\n        <div class=\"card\">\r\n          <div class=\"card_image\"><img alt=\"Quotes Design Template\" src={QuotesDesignTemplateImg} height=\"300\" width=\"500\"></div>\r\n          <div class=\"card_content\">\r\n            <h2 class=\"card_title textBlue\">Quote Template #1</h2>\r\n            <p class=\"card_text\">Minimal template design, best suited for blog post related content.</p>\r\n            <a class=\"btn\" href=\"/quote-design-template\">Edit Template</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"cards_item\">\r\n        <div class=\"card\">\r\n          <div class=\"card_image\"><img alt=\"Quotes 2 Design Template\" src={QuotesTwoDesignTemplateImg} height=\"300\" width=\"500\"></div>\r\n          <div class=\"card_content\">\r\n            <h2 class=\"card_title textBlue\">Quote Template #2</h2>\r\n            <p class=\"card_text\">Unique and remixable variation of quotes based design.</p>\r\n            <a class=\"btn\" href=\"/quote-design-template-two\">Edit Template</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"cards_item\">\r\n        <div class=\"card\">\r\n          <div class=\"card_image\"><img alt=\"Quotes 3 Design Template\" src={QuotesThreeDesignTemplateImg} height=\"300\" width=\"500\"></div>\r\n          <div class=\"card_content\">\r\n            <h2 class=\"card_title textBlue\">Quote Template #3</h2>\r\n            <p class=\"card_text\">Minimalist yet remixable variation of quotes based design.</p>\r\n            <a class=\"btn\" href=\"/quote-design-template-three\">Edit Template</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"cards_item\">\r\n        <div class=\"card\">\r\n          <div class=\"card_image\"><img alt=\"Half Rectangle Design Template\" src={halfRectDesignTemplateImg} height=\"300\" width=\"500\"></div>\r\n          <div class=\"card_content\">\r\n            <h2 class=\"card_title textBlue\">Rectangle Template #1</h2>\r\n            <p class=\"card_text\">With a hint of Rectangle, This template is best for all type of content.</p>\r\n            <a class=\"btn\" href=\"/rectangle-design-template-two\">Edit Template</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"cards_item\">\r\n        <div class=\"card\">\r\n          <div class=\"card_image\"><img alt=\"Rectangle Design Template\" src={rectDesignTemplateImg} height=\"300\" width=\"500\"></div>\r\n          <div class=\"card_content\">\r\n            <h2 class=\"card_title textBlue\">Rectangle Template #2</h2>\r\n            <p class=\"card_text\">Another design template with editable and remixable features.</p>\r\n            <a class=\"btn\" href=\"/rectangle-design-template\">Edit Template</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n      <li class=\"cards_item\">\r\n        <div class=\"card\">\r\n          <div class=\"card_image\"><img alt=\"Minimal Design Template\" src={simpleDesignTemplateImg} height=\"300\" width=\"500\"></div>\r\n          <div class=\"card_content\">\r\n            <h2 class=\"card_title textBlue\">Minimal Design</h2>\r\n            <p class=\"card_text\">Simple and minimal design template suited best for quotes.</p>\r\n            <a class=\"btn\" href=\"/simple-design-template\">Edit Template</a>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n        <hr/>\r\n<Footer />\r\n</Container>\r\n</div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n</svelte:head>\r\n<style>\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n\t.bluishBG{\r\n\t\tbackground-color: #8fa7ff;\r\n\t\tmargin-top: 5%;\r\n\t}\r\n    #textWhite{\r\n        color: white;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from './Footer.svelte';\r\n\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Made for you.</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            \r\n\t\t</Col>\r\n    </Row>\r\n    <Row class=\"py-5\">\r\n\t\t<Col sm=\"12\" class=\"pt-2 text-center\" >\r\n\t\t\t<h4 class=\"font-weight-bold\">Designtack was made with intention to be able to be used by any one without hassle.</h4>\r\n\t\t\t<h4 class=\"font-weight-bold\"> With Templates & Editor, You can have content created for you brand in seconds! Try it to find out what works the best for you.</h4>\r\n\t\t</Col>\r\n\t\t<Col sm=\"12\">\r\n\t\t\t<div class=\"mt-4 text-center\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h5>🤳 Influencers</h5>\r\n\t\t\t\t\t<h5>🙋‍♂️ Solo Creators</h5>\r\n\t\t\t\t\t<h5>🏨 Small Agencies</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h5>👩‍🎤 Singers</h5>\r\n\t\t\t\t\t<h5>👨‍⚕️ Professionals</h5>\r\n\t\t\t\t\t<h5>🏭 Big Businesses</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<h5>💹 Marketers</h5>\r\n\t\t\t\t\t<h5>👷‍♂️ Real Estate</h5>\r\n\t\t\t\t\t<h5>👨‍🎨 Indie Artists</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t\t<h5>.</h5>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</Col>\r\n\t</Row>\r\n\t\t<div class=\"bluishBG\">\r\n\t\t<Row class=\"py-5\">\r\n\t\t<Col sm=\"12\" id=\"scrollToInfo\" class=\"p-4\">\r\n\t\t\t<p id=\"textWhite\" class=\"display-4 font-weight-bold text-center\">Ready to make content?</p>\r\n\t\t</Col>\r\n\t\t<Col sm=\"12\" class=\"text-center\">\r\n\t\t\t<a href=\"/Login\" class=\"pressDown btn btn-lg\" use:link>Get Started for Free</a>\r\n\t\t</Col>\r\n\t\t</Row>\r\n\t\t</div>\r\n<Footer />\r\n</Container>\r\n</div>",
    "<svelte:head>\r\n\t<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n    Link {\r\n        color:lime;\r\n        text-decoration: none;\r\n    }\r\n\t.textBlue {\r\n\t\tcolor: #5778f3;\r\n\t}\r\n</style>\r\n<script>\r\n let userSignedIn = false;\r\n let allowProAccess = false;\r\n\r\n import { auth, googleProvider, twitterProvider, db, firebaseAnalytics } from './firebase';\r\n\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\n\r\n auth.onAuthStateChanged(function(user) {\r\n  if (user) {\r\n    userSignedIn = true;\r\n    \r\n    //now check for Pro access\r\n    proAccessCheck()\r\n  } else {\r\n    userSignedIn = false;\r\n  }\r\n});\r\n\r\n\r\nfunction proAccessCheck(){\r\n    db.collection('PROusers').doc(auth.currentUser.uid).get().then(doc => {\r\n        if (doc.exists) {\r\n        allowProAccess = true;\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        allowProAccess = false;\r\n    }\r\n    }).catch(function(error) {\r\n        console.log(\"Error:\", error);\r\n    });\r\n}\r\n\r\n  import { Router, Link,link, Route } from \"svelte-routing\";\r\n  import {Row, Container, Button, Col,Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem,NavLink,UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem} from 'sveltestrap';\r\n\r\n  import App from './App.svelte';\r\n\r\n  import newApp from './newApp.svelte';\r\n  import AppSumo from './AppSumo.svelte';\r\n  import Home from './Home.svelte';\r\n  import Login from './Login.svelte';\r\n  import Template from './Template.svelte';\r\n  import Changelog from './Changelog.svelte';\r\n  import About from './About.svelte';\r\n  import PrivacyPolicy from './PrivacyPolicy.svelte';\r\n  import TOS from './TOS.svelte';\r\n  import Support from './Support.svelte'\r\n  import Difference from './Difference.svelte';\r\n  import UseCases from './UseCases.svelte';\r\n  import NotFound from './NotFound.svelte';\r\n  \r\n  //All the templates\r\n  import Blob from './template/Blob.svelte';\r\n  import Quotes from './template/Quotes.svelte';\r\n  import Quotes2 from './template/Quotes-2.svelte';\r\n  import Quotes3 from './template/Quotes-3.svelte';\r\n  import Gradient from './template/Gradient.svelte';\r\n  import Rect from './template/Rect.svelte';\r\n  import Simp from './template/Simple.svelte';\r\n  import Aesthetic from './template/Aesthetic.svelte';\r\n  import HalfRect from './template/HalfRect.svelte';\r\n\r\n  export let url = \"\";\r\n\r\n  let isOpen = true;\r\n\r\nfunction handleUpdate(event) {\r\n  isOpen = event.detail.isOpen;\r\n}\r\n\r\n</script>\r\n<div>\r\n    <!-- Navbar , logo code <img src=\"https://i.imgur.com/YqNaeaq.png\" alt=\"logo\" height=\"50\" width=\"50\" />-->\r\n            <Router url=\"{url}\">\r\n                <Navbar class=\"navbar-expand-lg navbar-light\">\r\n                    <NavbarBrand href=\"/\"><img src=\"https://i.imgur.com/YqNaeaq.png\" alt=\"logo\" height=\"70\" width=\"70\" /></NavbarBrand>\r\n                    <NavbarToggler on:click={() => (isOpen = !isOpen)} />\r\n                    <Collapse isOpen={isOpen} navbar expand=\"lg\" on:update={handleUpdate}>\r\n                        <Nav class=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <a class=\"text-primary text-uppercase font-weight-bold nav-link\" href=\"/templates\">Templates</a>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                                <a class=\"text-primary text-uppercase font-weight-bold nav-link\" href=\"/Changelog\">Changelog</a>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <a class=\"text-primary text-uppercase font-weight-bold nav-link\" href=\"/UseCases\">Use Cases</a>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <a class=\"text-primary text-uppercase font-weight-bold nav-link\" href=\"/#pricing\">Pricing</a>\r\n                        </NavItem>\r\n                        {#if !allowProAccess}\r\n                        <NavItem>\r\n                            <a class=\"text-warning text-uppercase font-weight-bold nav-link\" href=\"/Login#upgrade\">Upgrade</a>\r\n                        </NavItem>\r\n                        {:else}\r\n                        {/if}\r\n                        {#if userSignedIn}\r\n                        <NavItem>\r\n                            <a class=\"text-uppercase font-weight-bold nav-link\" href=\"/Login\"><span class=\"textBlue\">Dashboard</span></a>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <a href=\"#\"  class=\"text-danger text-uppercase font-weight-bold nav-link\" on:click={ () => {\r\n                                auth.signOut()\r\n                                localStorage.clear();\r\n                                window.location = \"/\";\r\n                            } }>Log out</a>\r\n                        </NavItem>\r\n                        {:else}\r\n                        <NavItem>\r\n                            <a class=\"text-uppercase font-weight-bold nav-link\" href=\"/Login\"><span class=\"textBlue\">Sign In</span></a>\r\n                        </NavItem>\r\n                        {/if}\r\n\r\n                        <!--<NavItem>\r\n                            <a class=\"nav-link\" href=\"/Support\" use:link>Support</a>\r\n                        </NavItem>\r\n                        <UncontrolledDropdown>\r\n                            <DropdownToggle nav caret>Legal</DropdownToggle>\r\n                            <DropdownMenu class=\"bg-primary\" right>\r\n                            <DropdownItem><a class=\"nav-link\" href=\"/PrivacyPolicy\" use:link>Privacy Policy</a></DropdownItem>\r\n                            <DropdownItem><a class=\"nav-link\" href=\"/TOS\" use:link>Terms</a></DropdownItem>\r\n                            <DropdownItem><a class=\"nav-link\" href=\"/About\" use:link>About</a></DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                        <NavItem>\r\n                            <a href=\"/Login\" replace><Button color=\"success\">Create Design</Button></a>\r\n                        </NavItem>-->\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n                <div>\r\n                    <Route path=\"/\" component=\"{Home}\" />\r\n                    <Route path=\"/newApp\" component=\"{newApp}\"/>\r\n                    <Route path=\"/Changelog\" component=\"{Changelog}\" />\r\n                    <Route path=\"/UseCases\" component=\"{UseCases}\" />\r\n                    <Route path=\"/templates\" component=\"{Template}\" />\r\n                    <Route path=\"/Login\" component=\"{Login}\" />\r\n                    <Route path=\"/App\" component=\"{App}\" />\r\n                    <Route path=\"/AppSumo\" component=\"{AppSumo}\" />\r\n                    <Route path=\"/Support\" component=\"{Support}\" />\r\n                    <Route path=\"/Difference\" component=\"{Difference}\" />\r\n                    <Route path=\"/PrivacyPolicy\" component=\"{PrivacyPolicy}\" />\r\n                    <Route path=\"/TOS\" component=\"{TOS}\" />\r\n                    <Route path=\"/About\" component=\"{About}\" />\r\n                    <Route path=\"/NotFound\" component=\"{NotFound}\" />\r\n\r\n                    <Route path=\"/blob-design-template\" component=\"{Blob}\" />\r\n                    <Route path=\"/quote-design-template\" component=\"{Quotes}\" />\r\n                    <Route path=\"/quote-design-template-two\" component=\"{Quotes2}\" />\r\n                    <Route path=\"/quote-design-template-three\" component=\"{Quotes3}\" />\r\n                    <Route path=\"/gradient-design-template\" component=\"{Gradient}\"/>\r\n\r\n                    <Route path=\"/rectangle-design-template\" component=\"{Rect}\"/>\r\n                    <Route path=\"/rectangle-design-template-two\" component=\"{HalfRect}\"/>\r\n                    \r\n                    <Route path=\"/simple-design-template\" component=\"{Simp}\"/>\r\n                    \r\n                    <Route path=\"/aesthetic-design-template\" component=\"{Aesthetic}\"/>\r\n                  </div>\r\n            </Router>\r\n        </div>\r\n",
    "<script>\r\n    import Konva from 'konva';\r\n\timport { onMount } from 'svelte';\r\n\timport { beforeUpdate, afterUpdate } from 'svelte';\r\n    import {Container, Row, Col} from 'sveltestrap';\r\n    \r\n\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n        <Row>\r\n            <Col xs=\"12\" md=\"3\">\r\n              <div id='box'>\r\n                panel\r\n              </div>\r\n            </Col>\r\n            <Col xs=\"12\" md=\"9\">\r\n              <div id='box2'>\r\n                design\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n    </Container>\r\n</div>\r\n<style>\r\n    #box {\r\n        background-color: green;\r\n        height: 80vh;\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n    #box2 {\r\n        background-color: blue;\r\n        height: 80vh;\r\n        width: 100%;\r\n        text-align: center;\r\n    }\r\n</style>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n\r\n#stage-parent {\r\n    max-width: 720px;\r\n    width: 100%;\r\n    border: 1px black solid;\r\n  }\r\n\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Label, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from '../Footer.svelte';\r\n  import NotFound from '../NotFound.svelte';\r\n\r\n  import { FiveBlobs } from '../modules/Blob.svelte';\r\n  import {colorPalette} from '../modules/Color.svelte';\r\n  let svgPaths = FiveBlobs();\r\n  let colorArr = colorPalette();\r\n\r\n  import Konva from 'konva';\r\n  import { onMount } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n\r\n/*\r\nAuthentication check procedure:-\r\n1. When user logged in, It's uid from auth.currentuser of firebase is stored in a localStorage \r\n2. Now, that uid is enough for validation everywhere and i can access localstorage anywhere.\r\n3. thus, uid is the only thing needed after user is logged in, which can be retrieved with localstorage.getitem and its key 'usrkey'\r\n4. on logging out, localstorage is cleared.\r\n*/\r\nimport { auth, db, firebaseAnalytics } from '../firebase';\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\n\r\nlet allowProAccess = false;\r\n\r\nfunction proAccessCheck() {\r\ndb.collection('PROusers').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n      console.log(\"Pro Access ENABLED :)\");\r\n      allowProAccess = true;\r\n  } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"Pro Access Disabled\");\r\n      allowProAccess = false;\r\n  }\r\n  }).catch(function(error) {\r\n      console.log(\"Error:\", error);\r\n  });\r\n}\r\n  let flag = 0;\r\n  let user_text, website_name;\r\n  let stage, width=720,height=350;\r\n  let textNode = new Konva.Text();\r\n  let layer = new Konva.Layer();\r\n  let bglayer = new Konva.Layer();\r\n  let shapelayer = new Konva.Layer();\r\n  \r\n  let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  \r\n//code to check if user downloaded and then increment.\r\nlet timesave, contentMadeSoFar=0;\r\n\r\n\r\nfunction statsCounter(){\r\n  db.collection('usersDB').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n          //alert(\"stat counter if statement me aya hu\")\r\n          //if user is already there, then add +1\r\n              let val = contentMadeSoFar+1\r\n              db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      } else {\r\n         // alert(\"stat counter else statement me aya hu\")\r\n          db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n      });\r\n}\r\n\r\nfunction remix() {\r\n        //stage.destroyChildren();\r\n        bglayer.destroy();\r\n        shapelayer.destroy();\r\n        //layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n        textNode.fill(colorArr[3])\r\n\r\n        bglayer.moveToBottom();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n        layer.moveToTop();\r\n        //stage.add(layer);\r\n  \r\n        svgPaths = FiveBlobs();\r\n        colorArr = colorPalette();\r\n        \r\n        //headingText();\r\n        addBackground();\r\n}\r\n\r\nlet heading = JSON.parse(localStorage.getItem('heading'));\r\nlet subheading = JSON.parse(localStorage.getItem('subheading'));\r\n\r\n\r\nfunction subHeadingText(){\r\n  //The minor heading text\r\n  var minortextNode = new Konva.Text({\r\n        text: '@yourusername',\r\n        x: 20,\r\n        y: 320,\r\n        fontSize: 20,\r\n        fontFamily: 'cursive',\r\n        fill: 'white',\r\n      });\r\n      minortextNode.width(500)\r\n      layer.add(minortextNode);\r\n      \r\n      layer.draw();\r\n\r\n      minortextNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = minortextNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = minortextNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = minortextNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            minortextNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction headingText(){\r\n    \r\n    textNode = new Konva.Text({\r\n        text: 'You often feel tired, not because you have done too much, but because you have done too little of what sparks a light in you.',\r\n        x: 170,\r\n        y: 80,\r\n        fontSize: 35,\r\n        fontFamily: 'Garamond',\r\n        fill: colorArr[2],\r\n        align: 'center',\r\n        draggable: 'true',\r\n        shadowEnabled: 'true',\r\n        shadowColor: '#efefef',\r\n        shadowOpacity: 0.8,\r\n        shadowBlur: 4,\r\n        shadowOffsetX: 3,\r\n        shadowOffsetY: 3\r\n      });\r\n      textNode.width(400)\r\n      layer.add(textNode);\r\n      layer.draw();\r\n      \r\n      textNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = textNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = textNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            textNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction addBackground(){\r\n//this code below is to apply random background.\r\nlet bgRect = new Konva.Rect({\r\n            x:0,y:0,\r\n            width: width,\r\n            height: height,\r\n            fill: colorArr[3],\r\n            draggable: false,\r\n        });\r\n        bglayer.add(bgRect)\r\n        bglayer.draw();\r\n\r\n        // for the overlay\r\n        let bgBox = new Konva.Rect({\r\n            x:50, y:50,\r\n            width: (617),\r\n            height: (250),\r\n            fill: 'white'\r\n        })\r\n        bglayer.add(bgBox)\r\n        bglayer.draw();\r\n\r\n\r\n}\r\n\r\nfunction returnRandom(){\r\n        return Math.floor(Math.random() * 300) + 50 ;\r\n}\r\n\r\nfunction returnRandomY(){\r\n        return Math.floor(Math.random() * 100) + 50 ;\r\n}\r\n\r\nfunction forTwitter() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forFacebook() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forLinkedIn() {\r\n    if (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        statsCounter();\r\n}\r\n\r\nfunction downloadURI(uri, name) {\r\n\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n    beforeUpdate(() => {\r\n\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 720;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n        //layer = new Konva.Layer();\r\n        \r\n\t});\r\n\r\n    afterUpdate(() => {\r\n    function fitStageIntoParentContainer() {\r\n      let lcontainer = document.getElementById('stage-parent');\r\n\r\n      // now we need to fit stage into parent\r\n      var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n      // to do this we need to scale the stage\r\n      var scale = containerWidth / width;\r\n\r\n      stage.width(width * scale);\r\n      stage.height(height * scale);\r\n      stage.scale({\r\n        x: scale,\r\n        y: scale\r\n      });\r\n      stage.draw();\r\n    }\r\n\r\n    fitStageIntoParentContainer();\r\n    // adapt the stage on any window resize\r\n    window.addEventListener('resize', fitStageIntoParentContainer);\r\n  })\r\n\r\n    onMount(() => {\r\n\r\n        proAccessCheck();\r\n        firebaseAnalytics.logEvent('aesthetic_template');\r\n        //code to intialize counter for stats\r\n        db.collection('usersDB').doc(user).get().then(doc => {\r\n            if (doc.exists) {\r\n                let userData = doc.data();\r\n                contentMadeSoFar = userData.totalCreated;\r\n            } else {\r\n                db.collection('usersDB').doc(user).set({\r\n                            totalCreated: 0\r\n                })\r\n            }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n\r\n        // first we need to create a stage\r\n        stage = new Konva.Stage({\r\n          container: 'konva-stage',   // id of container <div>\r\n          width: 720,\r\n          height: 350\r\n        });\r\n\r\n        layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        shapelayer.moveToTop();\r\n        layer.moveToTop();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n\r\n        addBackground();\r\n        headingText();\r\n        \r\n      if(localStorage.getItem('heading')){\r\n        textNode.text(heading)\r\n        layer.draw();\r\n      }\r\n    });\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n    {#if user}\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Minimal Template</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Edit with your text. You can also move the main text.</h4>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n      <Col class=\"d-flex justify-content-center\">\r\n        <div id=\"stage-parent\">\r\n          <div id=\"konva-stage\"></div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n\r\n        <Row class=\"mt-2 justify-content-center\">\r\n        <div>\r\n            <Row class=\"pt-3\">\r\n              <!-- {#if !allowProAccess} DISABLING AND MAKING PRO ACCESS TO ALL \r\n              <Col sm=\"12\" class=\"text-center\">\r\n                  <h5 class=\"textBlue font-weight-bold\">⚠ This feature requires PRO account.</h5>\r\n                  <button id=\"toggleForPro\" class=\"pressDownDisabled btn-block btn-lg\" disabled>Remix Design</button>\r\n              </Col>\r\n              {:else}\r\n              {/if}-->\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                <button id=\"toggleForPro\" class=\"pressDown btn-block btn-lg\" on:click={remix}>Remix Design</button>\r\n              </Col>\r\n            </Row>\r\n                <div>\r\n                    <Row class=\"pt-5\">\r\n                        <Col sm=\"12\" class=\"text-center\">\r\n                            <h4>Download For Different Social Media.</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"mt-2 mx-4 text-center\">\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forFacebook}>Facebook</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forTwitter}>Twitter</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forLinkedIn}>Linkedin</button>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n        </div>\r\n        </Row>\r\n        {:else}\r\n        <NotFound />\r\n        {/if}\r\n        <hr/>\r\n        <Footer />\r\n        </Container>\r\n        </div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n\r\n\r\n</svelte:head>\r\n<style>\r\n  #stage-parent {\r\n    max-width: 720px;\r\n    width: 100%;\r\n    border: 1px black solid;\r\n  }\r\n\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Label, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from '../Footer.svelte';\r\n  import NotFound from '../NotFound.svelte';\r\n\r\n  import { FiveBlobs } from '../modules/Blob.svelte';\r\n  import {colorPalette} from '../modules/Color.svelte';\r\n  let svgPaths = FiveBlobs();\r\n  let colorArr = colorPalette();\r\n\r\n  import Konva from 'konva';\r\n  import { onMount } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n \r\n/*\r\nAuthentication check procedure:-\r\n1. When user logged in, It's uid from auth.currentuser of firebase is stored in a localStorage \r\n2. Now, that uid is enough for validation everywhere and i can access localstorage anywhere.\r\n3. thus, uid is the only thing needed after user is logged in, which can be retrieved with localstorage.getitem and its key 'usrkey'\r\n4. on logging out, localstorage is cleared.\r\n*/\r\nimport { auth, db, firebaseAnalytics } from '../firebase';\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\n\r\nlet allowProAccess = false;\r\n\r\nfunction proAccessCheck() {\r\ndb.collection('PROusers').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n      console.log(\"Pro Access ENABLED :)\");\r\n      allowProAccess = true;\r\n  } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"Pro Access Disabled\");\r\n      allowProAccess = false;\r\n  }\r\n  }).catch(function(error) {\r\n      console.log(\"Error:\", error);\r\n  });\r\n}\r\n  let user_text, website_name;\r\n  let stage, width=720,height=350;\r\n  \r\n  let minortextNode = new Konva.Text();\r\n  let textNode = new Konva.Text();\r\n  let subHeadingNode = new Konva.Text();\r\n  let layer = new Konva.Layer();\r\n  let bglayer = new Konva.Layer();\r\n  let shapelayer = new Konva.Layer();\r\n  \r\n  let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  \r\n//code to check if user downloaded and then increment.\r\nlet timesave, contentMadeSoFar=0;\r\n\r\nfunction addFooterBar(){\r\n    let txtBar = new Konva.Rect({\r\n            x:0,y:325,\r\n            width: '1000',\r\n            height: '30',\r\n            fill: '#262626',\r\n            draggable: false,\r\n        });\r\n\t\t\t\r\n        bglayer.add(txtBar)\r\n        bglayer.draw();\r\n}\r\n\r\nfunction statsCounter(){\r\n  db.collection('usersDB').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n          //alert(\"stat counter if statement me aya hu\")\r\n          //if user is already there, then add +1\r\n              let val = contentMadeSoFar+1\r\n              db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      } else {\r\n         // alert(\"stat counter else statement me aya hu\")\r\n          db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n      });\r\n}\r\n\r\nfunction shuffle() {\r\n        //stage.destroyChildren();\r\nbglayer.destroy();\r\nshapelayer.destroy();\r\n        //layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        layer.moveToTop();\r\n        //stage.add(layer);\r\n  \r\n        svgPaths = FiveBlobs();\r\n        colorArr = colorPalette();\r\n        \r\n        addBackground()\r\n        addFooterBar();\r\n        addShapes();\r\n        //addText();\r\n}\r\n\r\n\r\nlet heading = JSON.parse(localStorage.getItem('heading'));\r\nlet subheading = JSON.parse(localStorage.getItem('subheading'));\r\nlet companyinfo = JSON.parse(localStorage.getItem('companyinfo'));\r\n\r\nfunction addText(){\r\n    //The main heading text\r\n    textNode = new Konva.Text({\r\n        text: 'This is the heading. Edit me!',\r\n        x: 100,\r\n        y: 100,\r\n        fontSize: 40,\r\n        fill: 'white'\r\n      });\r\n      textNode.width(500)\r\n      layer.add(textNode);\r\n      //layer.draw();\r\n\r\n      textNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = textNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = textNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            textNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n\r\n      //The minor heading text\r\n    minortextNode = new Konva.Text({\r\n        text: 'This is the heading. Edit me!',\r\n        x: 100,\r\n        y: 250,\r\n        fontSize: 20,\r\n        fill: 'white'\r\n      });\r\n      minortextNode.width(500)\r\n      layer.add(minortextNode);\r\n      //layer.draw();\r\n\r\n      minortextNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = minortextNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = textNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            minortextNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n\r\n      //the footer bottom text\r\n      subHeadingNode = new Konva.Text({\r\n        text: 'Edit this text by double clicking.',\r\n        x: 240,\r\n        y: 330,\r\n        fontSize: 15,\r\n        fill: 'white'\r\n      });\r\n      subHeadingNode.width(500)\r\n      layer.add(subHeadingNode);\r\n      layer.draw();\r\n\r\n      subHeadingNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = subHeadingNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = subHeadingNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = subHeadingNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            subHeadingNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction addBackground(){\r\n//this code below is to apply random background.\r\nlet bgRect = new Konva.Rect({\r\n            x:0,y:0,\r\n            width: width,\r\n            height: height,\r\n            fill: colorArr[0],\r\n            draggable: false,\r\n        });\r\n\t\t\t\r\n        bglayer.add(bgRect)\r\n        bglayer.draw();\r\n}\r\n\r\nfunction returnRandom(){\r\n        return Math.floor(Math.random() * 300) + 50 ;\r\n}\r\n\r\nfunction returnRandomY(){\r\n        return Math.floor(Math.random() * 100) + 50 ;\r\n}\r\n\r\nfunction addShapes() {\r\n        // I generate the d value in <path> from Blob.svelte's generateColor\r\n        \r\n        for(let i=0;i<5;i++)\r\n        {\r\n            let SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\"> <path fill=\"'+colorArr[i+1]+'\" d=\"'+svgPaths[i]+'\" transform=\"translate(100 100)\" /> </svg>'    \r\n            let url =  'data:image/svg+xml;base64,' + window.btoa(SVG);\r\n            Konva.Image.fromURL(url, image => {\r\n        image.draggable(false);\r\n        image.x(returnRandom()+5);\r\n        image.y(returnRandomY()+5);\r\n        shapelayer.add(image);\r\n        shapelayer.draw();\r\n        })\r\n        }\r\n       /* const SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\"> <path fill=\"'+colorArr[1]+'\" d=\"'+svgPaths[0]+'\" transform=\"translate(100 100)\" /> </svg>'\r\n        const SVG1 = '<svg xmlns=\"http://www.w3.org/2000/svg\"> <path fill=\"'+colorArr[2]+'\" d=\"'+svgPaths[1]+'\" transform=\"translate(100 100)\" /> </svg>'\r\n        const SVG2 = '<svg xmlns=\"http://www.w3.org/2000/svg\"> <path fill=\"'+colorArr[3]+'\" d=\"'+svgPaths[2]+'\" transform=\"translate(100 100)\" /> </svg>'\r\n        const SVG3 = '<svg xmlns=\"http://www.w3.org/2000/svg\"> <path fill=\"'+colorArr[4]+'\" d=\"'+svgPaths[3]+'\" transform=\"translate(100 100)\" /> </svg>'\r\n        \r\n        const url =  'data:image/svg+xml;base64,' + window.btoa(SVG);\r\n        const url1 =  'data:image/svg+xml;base64,' + window.btoa(SVG1);\r\n        const url2 =  'data:image/svg+xml;base64,' + window.btoa(SVG2);\r\n        const url3 =  'data:image/svg+xml;base64,' + window.btoa(SVG3);\r\n        \r\n        Konva.Image.fromURL(url, image => {\r\n        image.draggable(true);\r\n        image.x(returnRandom());\r\n        image.y(returnRandomY());\r\n        shapelayer.add(image);\r\n        shapelayer.draw();\r\n        })\r\n       Konva.Image.fromURL(url1, image => {\r\n        image.draggable(true);\r\n        image.x(returnRandom());\r\n        image.y(returnRandomY());\r\n        shapelayer.add(image);\r\n        shapelayer.draw();\r\n        })\r\n        Konva.Image.fromURL(url2, image => {\r\n        image.draggable(true);\r\n        image.x(returnRandom());\r\n        image.y(returnRandomY());\r\n        shapelayer.add(image);\r\n        shapelayer.draw();\r\n        })\r\n        Konva.Image.fromURL(url3, image => {\r\n        image.draggable(true);\r\n        image.x(returnRandom());\r\n        image.y(returnRandomY());\r\n        shapelayer.add(image);\r\n        shapelayer.draw();\r\n        })*/\r\n}\r\n\r\nfunction forTwitter() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forFacebook() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forLinkedIn() {\r\n    if (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        statsCounter();\r\n}\r\n\r\nfunction downloadURI(uri, name) {\r\n        //part of funnel in firebase\r\n        //firebaseAnalytics.logEvent('Downloaded_from_Quick_Mode');\r\n\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n    beforeUpdate(() => {\r\n\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 720;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n        //layer = new Konva.Layer();\r\n        \r\n\t});\r\n\r\n  afterUpdate(() => {\r\n    function fitStageIntoParentContainer() {\r\n      let lcontainer = document.getElementById('stage-parent');\r\n\r\n      // now we need to fit stage into parent\r\n      var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n      // to do this we need to scale the stage\r\n      var scale = containerWidth / width;\r\n\r\n      stage.width(width * scale);\r\n      stage.height(height * scale);\r\n      stage.scale({\r\n        x: scale,\r\n        y: scale\r\n      });\r\n      stage.draw();\r\n    }\r\n\r\n    fitStageIntoParentContainer();\r\n    // adapt the stage on any window resize\r\n    window.addEventListener('resize', fitStageIntoParentContainer);\r\n  })\r\n\r\n    onMount(() => {\r\n        proAccessCheck();\r\n        firebaseAnalytics.logEvent('blob_template');\r\n        //code to intialize counter for stats\r\n        db.collection('usersDB').doc(user).get().then(doc => {\r\n            if (doc.exists) {\r\n                let userData = doc.data();\r\n                contentMadeSoFar = userData.totalCreated;\r\n            } else {\r\n                db.collection('usersDB').doc(user).set({\r\n                            totalCreated: 0\r\n                })\r\n            }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n\r\n        // first we need to create a stage\r\n        stage = new Konva.Stage({\r\n          container: 'konva-stage',   // id of container <div>\r\n          width: 720,\r\n          height: 350\r\n        });\r\n\r\n        layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n\r\n        addBackground();\r\n        addFooterBar();\r\n        addShapes();\r\n        addText();\r\n\r\n      if(localStorage.getItem('heading')){\r\n        textNode.text(heading)\r\n        layer.draw(); \r\n        \r\n      }\r\n      if(localStorage.getItem('subheading')){\r\n        minortextNode.text(subheading)\r\n        layer.draw(); \r\n      }\r\n\r\n      if(localStorage.getItem('companyinfo')){\r\n        subHeadingNode.text(companyinfo)\r\n        layer.draw(); \r\n      }\r\n      \r\n    });\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n    {#if user}\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Blob Template</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Classic Design! Double click on text to edit it. Type something. Press Enter.</h4>\r\n            <h6>*Blobs might not work on MacOS, try on Windows. Fix coming very soon.</h6>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n      <Col class=\"d-flex justify-content-center\">\r\n        <div id=\"stage-parent\">\r\n          <div id=\"konva-stage\"></div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n\r\n        <Row class=\"mt-2 justify-content-center\">\r\n        <div>\r\n            <Row class=\"pt-3\">\r\n              <!--{#if !allowProAccess}\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                  <h5 class=\"textBlue font-weight-bold\">⚠ This feature requires PRO account.</h5>\r\n                  <button id=\"toggleForPro\" class=\"pressDownDisabled btn-block btn-lg\" disabled>Remix Design</button>\r\n              </Col>\r\n              {:else}\r\n              {/if}-->\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                <button id=\"toggleForPro\" class=\"pressDown btn-block btn-lg\" on:click={shuffle}>Remix Design</button>\r\n              </Col>\r\n            </Row>\r\n                <div>\r\n                    <Row class=\"pt-5\">\r\n                        <Col sm=\"12\" class=\"text-center\">\r\n                            <h4>Download For Different Social Media.</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"mt-2 mx-4 text-center\">\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forFacebook}>Facebook</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forTwitter}>Twitter</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forLinkedIn}>Linkedin</button>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n        </div>\r\n        </Row>\r\n        {:else}\r\n        <NotFound />\r\n        {/if}\r\n        <hr/>\r\n        <Footer />\r\n        </Container>\r\n        </div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n    #stage-parent {\r\n      max-width: 720px;\r\n      width: 100%;\r\n      border: 1px black solid;\r\n    }\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Label, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from '../Footer.svelte';\r\n  import NotFound from '../NotFound.svelte';\r\n  \r\n  import { FiveBlobs } from '../modules/Blob.svelte';\r\n  import {colorPalette} from '../modules/Color.svelte';\r\n  let svgPaths = FiveBlobs();\r\n  let colorArr = colorPalette();\r\n\r\n  import Konva from 'konva';\r\n  import { onMount } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n\r\n/*\r\nAuthentication check procedure:-\r\n1. When user logged in, It's uid from auth.currentuser of firebase is stored in a localStorage \r\n2. Now, that uid is enough for validation everywhere and i can access localstorage anywhere.\r\n3. thus, uid is the only thing needed after user is logged in, which can be retrieved with localstorage.getitem and its key 'usrkey'\r\n4. on logging out, localstorage is cleared.\r\n*/\r\nimport { auth, db, firebaseAnalytics } from '../firebase';\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\n\r\nlet allowProAccess = false;\r\n\r\nfunction proAccessCheck() {\r\ndb.collection('PROusers').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n      console.log(\"Pro Access ENABLED :)\");\r\n      allowProAccess = true;\r\n  } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"Pro Access Disabled\");\r\n      allowProAccess = false;\r\n  }\r\n  }).catch(function(error) {\r\n      console.log(\"Error:\", error);\r\n  });\r\n}\r\n\r\n  let user_text, website_name;\r\n  let stage, width=720,height=350;\r\n  let textNode = new Konva.Text();\r\n  let minortextNode = new Konva.Text();\r\n  let layer = new Konva.Layer();\r\n  let bglayer = new Konva.Layer();\r\n  let shapelayer = new Konva.Layer();\r\n  \r\n  let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  \r\n//code to check if user downloaded and then increment.\r\nlet timesave, contentMadeSoFar=0;\r\n\r\nfunction Gradient(){\r\n let ranx = returnRandom();\r\n let rany = returnRandomY();\r\n\r\n  var linearGradPentagon = new Konva.Rect({\r\n          x: 0,\r\n          y: 0,\r\n          width: width,\r\n          height: height,\r\n          fillLinearGradientStartPoint: { x: -50, y: -50 },\r\n          fillLinearGradientEndPoint: { x: ranx, y: rany },\r\n          fillLinearGradientStartPoint: { x: ranx, y: 400 },\r\n          fillLinearGradientEndPoint: { x: rany, y: ranx },\r\n          fillLinearGradientColorStops: [0, colorArr[Math.floor(Math.random() * 4)], 0.6, colorArr[Math.floor(Math.random() * 4)+1],1,colorArr[Math.floor(Math.random() * 4)+1]],\r\n          draggable: false,\r\n        });\r\n\r\n        shapelayer.add(linearGradPentagon);\r\n        shapelayer.draw();\r\n}\r\n\r\nfunction statsCounter(){\r\n  db.collection('usersDB').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n          //alert(\"stat counter if statement me aya hu\")\r\n          //if user is already there, then add +1\r\n              let val = contentMadeSoFar+1\r\n              db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      } else {\r\n         // alert(\"stat counter else statement me aya hu\")\r\n          db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n      });\r\n}\r\n\r\nfunction remix() {\r\n        //stage.destroyChildren();\r\n        bglayer.destroy();\r\n        shapelayer.destroy();\r\n        //layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        layer.moveToTop();\r\n        //stage.add(layer);\r\n  \r\n        svgPaths = FiveBlobs();\r\n        colorArr = colorPalette();\r\n        \r\n        addBackground();\r\n        Gradient();\r\n}\r\n\r\nfunction subHeadingText(){\r\n  //The minor heading text\r\n  minortextNode = new Konva.Text({\r\n        text: '@username',\r\n        x: 100,\r\n        y: 290,\r\n        fontSize: 20,\r\n        fontFamily: 'Arial',\r\n        align:'center',\r\n        fill: 'white'\r\n      });\r\n      minortextNode.width(500)\r\n      layer.add(minortextNode);\r\n      \r\n      layer.draw();\r\n\r\n      minortextNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = minortextNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = minortextNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = minortextNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            minortextNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nlet heading = JSON.parse(localStorage.getItem('heading'));\r\nlet subheading = JSON.parse(localStorage.getItem('subheading'));\r\n\r\nfunction headingText(){\r\n      textNode = new Konva.Text({\r\n        text: 'one big heading here',\r\n        x: 100,\r\n        y: 100,\r\n        fontSize: 40,\r\n        fontFamily: 'Arial',\r\n        fontVariant:'small-caps',\r\n        fill: 'white',\r\n        align: 'center',\r\n      });\r\n\r\n      textNode.width(500)\r\n      layer.add(textNode);\r\n      layer.draw();\r\n      \r\n      textNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = textNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = textNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            textNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction addBackground(){\r\n//this code below is to apply random background.\r\nlet bgRect = new Konva.Rect({\r\n            x:0,y:0,\r\n            width: width,\r\n            height: height,\r\n            fill: colorArr[0],\r\n            draggable: false,\r\n        });\r\n\t\t\t\r\n        bglayer.add(bgRect)\r\n        bglayer.draw();\r\n}\r\n\r\nfunction returnRandom(){\r\n        return Math.floor(Math.random() * 300) + 50 ;\r\n}\r\n\r\nfunction returnRandomY(){\r\n        return Math.floor(Math.random() * 100) + 50 ;\r\n}\r\n\r\nfunction forTwitter() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forFacebook() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forLinkedIn() {\r\n    if (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        statsCounter();\r\n}\r\n\r\nfunction downloadURI(uri, name) {\r\n\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n    beforeUpdate(() => {\r\n\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 720;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n        //layer = new Konva.Layer();\r\n        \r\n\t});\r\n\r\n\r\n    afterUpdate(() => {\r\n    function fitStageIntoParentContainer() {\r\n      let lcontainer = document.getElementById('stage-parent');\r\n\r\n      // now we need to fit stage into parent\r\n      var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n      // to do this we need to scale the stage\r\n      var scale = containerWidth / width;\r\n\r\n      stage.width(width * scale);\r\n      stage.height(height * scale);\r\n      stage.scale({\r\n        x: scale,\r\n        y: scale\r\n      });\r\n      stage.draw();\r\n    }\r\n\r\n    fitStageIntoParentContainer();\r\n    // adapt the stage on any window resize\r\n    window.addEventListener('resize', fitStageIntoParentContainer);\r\n  })\r\n\r\n    onMount(() => {\r\n        proAccessCheck();\r\n        firebaseAnalytics.logEvent(\"gradient_template\")\r\n         //code to intialize counter for stats\r\n         db.collection('usersDB').doc(user).get().then(doc => {\r\n            if (doc.exists) {\r\n                let userData = doc.data();\r\n                contentMadeSoFar = userData.totalCreated;\r\n            } else {\r\n                db.collection('usersDB').doc(user).set({\r\n                            totalCreated: 0\r\n                })\r\n            }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n        // first we need to create a stage\r\n        stage = new Konva.Stage({\r\n          container: 'konva-stage',   // id of container <div>\r\n          width: 720,\r\n          height: 350\r\n        });\r\n\r\n        layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n\r\n        addBackground();\r\n        headingText();\r\n        subHeadingText();\r\n        Gradient();\r\n\r\n      if(localStorage.getItem('heading')){\r\n        textNode.text(heading)\r\n        layer.draw(); \r\n        \r\n      }\r\n      if(localStorage.getItem('subheading')){\r\n        minortextNode.text(subheading)\r\n        layer.draw(); \r\n      }\r\n    });\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n    {#if user}\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Gradient Template</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Edit the headings with your text.</h4>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n        <Col class=\"d-flex justify-content-center\">\r\n          <div id=\"stage-parent\">\r\n            <div id=\"konva-stage\"></div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n  \r\n        <Row class=\"mt-2 justify-content-center\">\r\n        <div>\r\n            <Row class=\"pt-3\">\r\n              <!--{#if !allowProAccess}\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                  <h5 class=\"textBlue font-weight-bold\">⚠ This feature requires PRO account.</h5>\r\n                  <button id=\"toggleForPro\" class=\"pressDownDisabled btn-block btn-lg\" disabled>Remix Design</button>\r\n              </Col>\r\n              {:else}\r\n              {/if}-->\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                <button id=\"toggleForPro\" class=\"pressDown btn-block btn-lg\" on:click={remix}>Remix Design</button>\r\n              </Col>\r\n            </Row>\r\n                <div>\r\n                    <Row class=\"pt-5\">\r\n                        <Col sm=\"12\" class=\"text-center\">\r\n                          <h4 class=\"textBlue font-weight-bold\">Download For Different Social Media.</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"mt-2 mx-4 text-center\">\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forFacebook}>Facebook</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forTwitter}>Twitter</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forLinkedIn}>Linkedin</button>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n        </div>\r\n        </Row>\r\n        {:else}\r\n        <NotFound />\r\n        {/if}\r\n        <hr/>\r\n        <Footer />\r\n        </Container>\r\n        </div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n    #konva-stage {\r\n        border: 2px solid black;\r\n    }\r\n\r\n  #stage-parent {\r\n    max-width: 720px;\r\n    width: 100%;\r\n  }\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Label, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from '../Footer.svelte';\r\n  import NotFound from '../NotFound.svelte';\r\n\r\n  import { FiveBlobs } from '../modules/Blob.svelte';\r\n  import {colorPalette} from '../modules/Color.svelte';\r\n  let svgPaths = FiveBlobs();\r\n  let colorArr = colorPalette();\r\n\r\n  import Konva from 'konva';\r\n  import { onMount } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n/*\r\nAuthentication check procedure:-\r\n1. When user logged in, It's uid from auth.currentuser of firebase is stored in a localStorage \r\n2. Now, that uid is enough for validation everywhere and i can access localstorage anywhere.\r\n3. thus, uid is the only thing needed after user is logged in, which can be retrieved with localstorage.getitem and its key 'usrkey'\r\n4. on logging out, localstorage is cleared.\r\n*/\r\nimport { auth, db, firebaseAnalytics } from '../firebase';\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\n\r\nlet allowProAccess = false;\r\n\r\nfunction proAccessCheck() {\r\ndb.collection('PROusers').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n      console.log(\"Pro Access ENABLED :)\");\r\n      allowProAccess = true;\r\n  } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"Pro Access Disabled\");\r\n      allowProAccess = false;\r\n  }\r\n  }).catch(function(error) {\r\n      console.log(\"Error:\", error);\r\n  });\r\n}\r\n  let flag = 0;\r\n  let user_text, website_name;\r\n  let stage, width=720,height=350;\r\n  let textNode = new Konva.Text();\r\n  let minortextNode = new Konva.Text();\r\n  let layer = new Konva.Layer();\r\n  let bglayer = new Konva.Layer();\r\n  let shapelayer = new Konva.Layer();\r\n  \r\n  let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  \r\n//code to check if user downloaded and then increment.\r\nlet timesave, contentMadeSoFar=0;\r\n\r\n\r\nfunction statsCounter(){\r\n  db.collection('usersDB').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n          //alert(\"stat counter if statement me aya hu\")\r\n          //if user is already there, then add +1\r\n              let val = contentMadeSoFar+1\r\n              db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      } else {\r\n         // alert(\"stat counter else statement me aya hu\")\r\n          db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n      });\r\n}\r\n\r\nfunction remix() {\r\n        //stage.destroyChildren();\r\n        bglayer.destroy();\r\n        shapelayer.destroy();\r\n        \r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        \r\n        layer.moveToTop();\r\n        //stage.add(layer);\r\n  \r\n        svgPaths = FiveBlobs();\r\n        colorArr = colorPalette();\r\n        \r\n        addBackground();\r\n}\r\n\r\nlet heading = JSON.parse(localStorage.getItem('heading'));\r\nlet subheading = JSON.parse(localStorage.getItem('subheading'));\r\n\r\nfunction subHeadingText(){\r\n  //The minor heading text\r\n  minortextNode = new Konva.Text({\r\n        text: 'Bookings open for tours and travels. Visit tourmytrip.com',\r\n        x: 50,\r\n        y: 200,\r\n        fontSize: 30,\r\n        fontFamily: 'Helvetica',\r\n        fill: '#6b6b6b',\r\n        align:'left'\r\n      });\r\n      minortextNode.width(500)\r\n      layer.add(minortextNode);\r\n      \r\n      layer.draw();\r\n\r\n      minortextNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = minortextNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = minortextNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = minortextNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            minortextNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction headingText(){\r\n    \r\n    textNode = new Konva.Text({\r\n        text: 'All those who wander are not lost.',\r\n        x: 50,\r\n        y: 80,\r\n        fontSize: 35,\r\n        fontFamily: 'Helvetica',\r\n        fill: 'white',\r\n        align: 'left',\r\n        draggable: 'true'\r\n      });\r\n      textNode.width(400)\r\n      layer.add(textNode);\r\n      layer.draw();\r\n      \r\n      textNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = textNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = textNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            textNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction addBackground(){\r\n//this code below is to apply random background.\r\nlet bgRect = new Konva.Rect({\r\n            x:0,y:0,\r\n            width: width,\r\n            height: height,\r\n            fill: colorArr[3],\r\n            draggable: false,\r\n        });\r\n        bglayer.add(bgRect)\r\n        bglayer.draw();\r\n\r\n        // for the overlay\r\n        let bgBox = new Konva.Rect({\r\n            x:0, y:175,\r\n            width: (720),\r\n            height: (175),\r\n            fill: 'white'\r\n        })\r\n        bglayer.add(bgBox)\r\n        bglayer.draw();\r\n\r\n\r\n}\r\n\r\nfunction returnRandom(){\r\n        return Math.floor(Math.random() * 300) + 50 ;\r\n}\r\n\r\nfunction returnRandomY(){\r\n        return Math.floor(Math.random() * 100) + 50 ;\r\n}\r\n\r\nfunction forTwitter() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forFacebook() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forLinkedIn() {\r\n    if (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        statsCounter();\r\n}\r\n\r\nfunction downloadURI(uri, name) {\r\n\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n    beforeUpdate(() => {\r\n\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 720;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n        //layer = new Konva.Layer();\r\n        \r\n\t});\r\n\r\n    afterUpdate(() => {\r\n    function fitStageIntoParentContainer() {\r\n      let lcontainer = document.getElementById('stage-parent');\r\n\r\n      // now we need to fit stage into parent\r\n      var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n      // to do this we need to scale the stage\r\n      var scale = containerWidth / width;\r\n\r\n      stage.width(width * scale);\r\n      stage.height(height * scale);\r\n      stage.scale({\r\n        x: scale,\r\n        y: scale\r\n      });\r\n      stage.draw();\r\n    }\r\n\r\n    fitStageIntoParentContainer();\r\n    // adapt the stage on any window resize\r\n    window.addEventListener('resize', fitStageIntoParentContainer);\r\n  })\r\n    \r\n  onMount(() => {\r\n        proAccessCheck();\r\n        firebaseAnalytics.logEvent('HalfRect_Template');\r\n         //code to intialize counter for stats\r\n         db.collection('usersDB').doc(user).get().then(doc => {\r\n            if (doc.exists) {\r\n                let userData = doc.data();\r\n                contentMadeSoFar = userData.totalCreated;\r\n            } else {\r\n                db.collection('usersDB').doc(user).set({\r\n                            totalCreated: 0\r\n                })\r\n            }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n        // first we need to create a stage\r\n        stage = new Konva.Stage({\r\n          container: 'konva-stage',   // id of container <div>\r\n          width: 720,\r\n          height: 350\r\n        });\r\n\r\n        layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        shapelayer.moveToTop();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n\r\n        addBackground();\r\n        headingText();\r\n        subHeadingText();\r\n        \r\n      if(localStorage.getItem('heading')){\r\n          textNode.text(heading)\r\n          layer.draw(); \r\n          \r\n        }\r\n        if(localStorage.getItem('subheading')){\r\n          minortextNode.text(subheading)\r\n          layer.draw(); \r\n        }\r\n    });\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n    {#if user}\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Rectangle Template #2</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Edit with your text. You can also move the main text.</h4>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n        <Col class=\"d-flex justify-content-center\">\r\n          <div id=\"stage-parent\">\r\n            <div id=\"konva-stage\"></div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n  \r\n        <Row class=\"mt-2 justify-content-center\">\r\n        <div>\r\n            <Row class=\"pt-3\">\r\n              <!--{#if !allowProAccess}\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                  <h5 class=\"textBlue font-weight-bold\">⚠ This feature requires PRO account.</h5>\r\n                  <button id=\"toggleForPro\" class=\"pressDownDisabled btn-block btn-lg\" disabled>Remix Design</button>\r\n              </Col>\r\n              {:else}\r\n              {/if}-->\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                <button id=\"toggleForPro\" class=\"pressDown btn-block btn-lg\" on:click={remix}>Remix Design</button>\r\n              </Col>\r\n            </Row>\r\n                <div>\r\n                    <Row class=\"pt-5\">\r\n                        <Col sm=\"12\" class=\"text-center\">\r\n                            <h4>Download For Different Social Media.</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"mt-2 mx-4 text-center\">\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forFacebook}>Facebook</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forTwitter}>Twitter</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forLinkedIn}>Linkedin</button>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n        </div>\r\n        </Row>\r\n{:else}\r\n<NotFound />\r\n{/if}\r\n<hr/>\r\n<Footer />\r\n</Container>\r\n</div>\r\n        ",
    "<svelte:head>\r\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n  @font-face {\r\n    font-family: \"impactFont\";\r\n    src: url(\"../fonts/impact.ttf\");\r\n  }\r\n\r\n  #stage-parent {\r\n    max-width: 720px;\r\n    width: 100%;\r\n    border: 1px black solid;\r\n  }\r\n\r\n  .textBlue {\r\n    color: #5778f3;\r\n  }\r\n\r\n  .pressDown {\r\n    background-color: #5778f3;\r\n    padding: 10px 30px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    border-bottom: 4px solid #3e4caf;\r\n    transition: 0.1s;\r\n  }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n\r\n  .pressDown:hover {\r\n    border-bottom-width: 0;\r\n    margin-top: 3px;\r\n    color: #fff;\r\n  }\r\n\r\n  .pressDownDefault {\r\n    background-color: #707070;\r\n    padding: 10px 30px;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    border-bottom: 4px solid #35363d;\r\n    transition: 0.1s;\r\n  }\r\n\r\n  .pressDownDefault:hover {\r\n    border-bottom-width: 0;\r\n    margin-top: 3px;\r\n    color: #fff;\r\n  }\r\n</style>\r\n<script>\r\n  import {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Jumbotron,\r\n    Label,\r\n    Input,\r\n    Button,\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem\r\n  } from 'sveltestrap'\r\n  import {\r\n    Router,\r\n    Link,\r\n    Route\r\n  } from \"svelte-routing\";\r\n\r\n  import Footer from '../Footer.svelte';\r\n  import NotFound from '../NotFound.svelte';\r\n\r\n  import {\r\n    FiveBlobs\r\n  } from '../modules/Blob.svelte';\r\n  import {\r\n    colorPalette\r\n  } from '../modules/Color.svelte';\r\n  let svgPaths = FiveBlobs();\r\n  let colorArr = colorPalette();\r\n\r\n  import Konva from 'konva';\r\n  import {\r\n    onMount\r\n  } from 'svelte';\r\n  import {\r\n    beforeUpdate,\r\n    afterUpdate\r\n  } from 'svelte';\r\n\r\n  /*\r\n  Authentication check procedure:-\r\n  1. When user logged in, It's uid from auth.currentuser of firebase is stored in a localStorage \r\n  2. Now, that uid is enough for validation everywhere and i can access localstorage anywhere.\r\n  3. thus, uid is the only thing needed after user is logged in, which can be retrieved with localstorage.getitem and its key 'usrkey'\r\n  4. on logging out, localstorage is cleared.\r\n  */\r\n  import {\r\n    auth,\r\n    db,\r\n    firebaseAnalytics\r\n  } from '../firebase';\r\n  let authinfo = localStorage.getItem('usrkey');\r\n  let user = JSON.parse(authinfo);\r\n\r\nlet allowProAccess = false;\r\n\r\nfunction proAccessCheck() {\r\ndb.collection('PROusers').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n      console.log(\"Pro Access ENABLED :)\");\r\n      allowProAccess = true;\r\n  } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"Pro Access Disabled\");\r\n      allowProAccess = false;\r\n  }\r\n  }).catch(function(error) {\r\n      console.log(\"Error:\", error);\r\n  });\r\n}\r\n  let flag = 0;\r\n  let user_text, website_name;\r\n  let stage, width = 720,\r\n    height = 350;\r\n  let textNode = new Konva.Text();\r\n  let minortextNode = new Konva.Text();\r\n  let layer = new Konva.Layer();\r\n  let bglayer = new Konva.Layer();\r\n  let shapelayer = new Konva.Layer();\r\n\r\n  let stageBox;\r\n\r\n  let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n\r\n  //code to check if user downloaded and then increment.\r\n  let timesave, contentMadeSoFar = 0;\r\n\r\n  function quoteIcon() {\r\n    //add a rough filter here, an actual image overlay.\r\n    for (let i = 0; i < 1; i++) {\r\n\r\n      let url2 =\r\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"128\" height=\"128\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path fill=\"' +\r\n        colorArr[i + 3] +\r\n        '\" d=\"M19.417 6.679C20.447 7.773 21 9 21 10.989c0 3.5-2.457 6.637-6.03 8.188l-.893-1.378c3.335-1.804 3.987-4.145 4.247-5.621-.537.278-1.24.375-1.929.311-1.804-.167-3.226-1.648-3.226-3.489a3.5 3.5 0 0 1 3.5-3.5c1.073 0 2.099.49 2.748 1.179zm-10 0C10.447 7.773 11 9 11 10.989c0 3.5-2.457 6.637-6.03 8.188l-.893-1.378c3.335-1.804 3.987-4.145 4.247-5.621-.537.278-1.24.375-1.929.311C4.591 12.322 3.17 10.841 3.17 9a3.5 3.5 0 0 1 3.5-3.5c1.073 0 2.099.49 2.748 1.179z\"/></svg>';\r\n      let url = 'data:image/svg+xml;base64,' + window.btoa(url2);\r\n\r\n      Konva.Image.fromURL(url, image => {\r\n        image.draggable(true);\r\n        image.x(550);\r\n        image.y(returnRandomY() + 15);\r\n        shapelayer.add(image);\r\n        shapelayer.draw();\r\n      })\r\n    }\r\n  }\r\n\r\n  function statsCounter() {\r\n    db.collection('usersDB').doc(user.uid).get().then(doc => {\r\n      if (doc.exists) {\r\n        //alert(\"stat counter if statement me aya hu\")\r\n        //if user is already there, then add +1\r\n        let val = contentMadeSoFar + 1\r\n        db.collection('usersDB').doc(user.uid).set({\r\n          totalCreated: val\r\n        })\r\n        contentMadeSoFar = val\r\n        timesaved()\r\n      } else {\r\n        // alert(\"stat counter else statement me aya hu\")\r\n        db.collection('usersDB').doc(user.uid).set({\r\n          totalCreated: val\r\n        })\r\n        contentMadeSoFar = val\r\n        timesaved()\r\n      }\r\n    }).catch(function (error) {\r\n      console.log(\"Error getting document:\", error);\r\n    });\r\n  }\r\n\r\n  function remix() {\r\n    //stage.destroyChildren();\r\n    bglayer.destroy();\r\n    shapelayer.destroy();\r\n    //layer = new Konva.Layer();\r\n    bglayer = new Konva.Layer();\r\n    shapelayer = new Konva.Layer();\r\n\r\n    bglayer.moveToBottom();\r\n    stage.add(bglayer);\r\n    stage.add(shapelayer);\r\n    layer.moveToTop();\r\n    //stage.add(layer);\r\n\r\n    svgPaths = FiveBlobs();\r\n    colorArr = colorPalette();\r\n\r\n    addBackground();\r\n    quoteIcon();\r\n  }\r\n\r\n  function loadCustomFont() {\r\n    // FONT LOADING DETECTION CODE:\r\n    var canvas = document.createElement('canvas');\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.font = 'normal 20px CustomFont';\r\n\r\n    var isFontLoaded = false;\r\n    var TEXT_TEXT = 'Some test text;';\r\n    var initialMeasure = ctx.measureText(TEXT_TEXT);\r\n    var initialWidth = initialMeasure.width;\r\n\r\n    // here is how the function works\r\n    // different fontFamily may have different width of symbols\r\n    // when font is not loaded a browser will use startard font as a fallback\r\n    // probably Arial\r\n    // when font is loaded measureText will return another width\r\n    function whenFontIsLoaded(callback, attemptCount) {\r\n      if (attemptCount === undefined) {\r\n        attemptCount = 0;\r\n      }\r\n      if (attemptCount >= 20) {\r\n        callback();\r\n        return;\r\n      }\r\n      if (isFontLoaded) {\r\n        callback();\r\n        return;\r\n      }\r\n      const metrics = ctx.measureText(TEXT_TEXT);\r\n      const width = metrics.width;\r\n      if (width !== initialWidth) {\r\n        isFontLoaded = true;\r\n        callback();\r\n      } else {\r\n        setTimeout(function () {\r\n          whenFontIsLoaded(callback, attemptCount + 1);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    whenFontIsLoaded(function () {\r\n      // set font style when font is loaded\r\n      // so Konva will recalculate text wrapping if it has limited width\r\n      textNode.fontFamily('impactFont');\r\n      layer.draw();\r\n    });\r\n  }\r\n\r\nlet heading = JSON.parse(localStorage.getItem('heading'));\r\nlet companyinfo = JSON.parse(localStorage.getItem('companyinfo'));\r\n\r\n  function subHeadingText() {\r\n    //The minor heading text\r\n    minortextNode = new Konva.Text({\r\n      text: '@yourusername',\r\n      x: 20,\r\n      y: 20,\r\n      fontSize: 20,\r\n      fill: 'white',\r\n    });\r\n    minortextNode.width(500)\r\n    layer.add(minortextNode);\r\n\r\n    layer.draw();\r\n\r\n    minortextNode.on('dblclick', () => {\r\n      // create textarea over canvas with absolute position\r\n\r\n      // first we need to find position for textarea\r\n      // how to find it?\r\n\r\n      // at first lets find position of text node relative to the stage:\r\n      var textPosition = minortextNode.getAbsolutePosition();\r\n      console.log(textPosition);\r\n\r\n      // then lets find position of stage container on the page:\r\n      var stageBox = stage.container().getBoundingClientRect();\r\n      console.log(stageBox);\r\n\r\n      // so position of textarea will be the sum of positions above:\r\n      var areaPosition = {\r\n        x: width + textPosition.x,\r\n        y: height + textPosition.y\r\n      };\r\n\r\n      // create textarea and style it\r\n      var textarea = document.createElement('textarea');\r\n      document.body.appendChild(textarea);\r\n\r\n      textarea.value = minortextNode.text();\r\n      textarea.style.position = 'absolute';\r\n      textarea.style.rows = 10;\r\n      textarea.style.cols = 50;\r\n      textarea.style.top = areaPosition.y + 'px';\r\n      textarea.style.left = (areaPosition.x - 300) + 'px';\r\n      textarea.style.width = minortextNode.width();\r\n\r\n      textarea.focus();\r\n\r\n      textarea.addEventListener('keydown', function (e) {\r\n        // hide on enter\r\n        if (e.keyCode === 13) {\r\n          minortextNode.text(textarea.value);\r\n          layer.draw();\r\n          document.body.removeChild(textarea);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function headingText() {\r\n    loadCustomFont();\r\n    textNode = new Konva.Text({\r\n      text: '5 Ways to Actually Become Smarter!',\r\n      x: 150,\r\n      y: 100,\r\n      fontSize: 65,\r\n      fontFamily: 'impactFont',\r\n      fontVariant: 'small-caps',\r\n      stroke: 'black',\r\n      strokeWidth: 2,\r\n      fill: 'white',\r\n      align: 'left',\r\n      draggable: 'true',\r\n      wrap: 'word',\r\n      shadowEnabled: 'true',\r\n      shadowColor: 'black',\r\n      shadowOpacity: 0.8,\r\n      shadowBlur: 4,\r\n      shadowOffsetX: 3,\r\n      shadowOffsetY: 3\r\n    });\r\n    textNode.width(400)\r\n    textNode.height(400)\r\n    layer.add(textNode);\r\n    layer.draw();\r\n\r\n    textNode.on('dblclick', () => {\r\n      // create textarea over canvas with absolute position\r\n\r\n      // first we need to find position for textarea\r\n      // how to find it?\r\n\r\n      // at first lets find position of text node relative to the stage:\r\n      var textPosition = textNode.getAbsolutePosition();\r\n      console.log(textPosition);\r\n\r\n      // then lets find position of stage container on the page:\r\n      var stageBox = stage.container().getBoundingClientRect();\r\n      console.log(stageBox);\r\n\r\n      // so position of textarea will be the sum of positions above:\r\n      var areaPosition = {\r\n        x: width + textPosition.x,\r\n        y: height + textPosition.y\r\n      };\r\n\r\n      // create textarea and style it\r\n      var textarea = document.createElement('textarea');\r\n      document.body.appendChild(textarea);\r\n\r\n      textarea.value = textNode.text();\r\n      textarea.style.position = 'absolute';\r\n      textarea.style.rows = 10;\r\n      textarea.style.cols = 50;\r\n      textarea.style.top = areaPosition.y + 'px';\r\n      textarea.style.left = (areaPosition.x - 300) + 'px';\r\n      textarea.style.width = textNode.width();\r\n\r\n      textarea.focus();\r\n\r\n      textarea.addEventListener('keydown', function (e) {\r\n        // hide on enter\r\n        if (e.keyCode === 13) {\r\n          textNode.text(textarea.value);\r\n          layer.draw();\r\n          document.body.removeChild(textarea);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function addBackground() {\r\n    //this code below is to apply random background.\r\n    let bgRect = new Konva.Rect({\r\n      x: 0,\r\n      y: 0,\r\n      width: width,\r\n      height: height,\r\n      fill: colorArr[0],\r\n      draggable: false,\r\n    });\r\n    bglayer.add(bgRect)\r\n    bglayer.draw();\r\n  }\r\n\r\n  function returnRandom() {\r\n    return Math.floor(Math.random() * 300) + 50;\r\n  }\r\n\r\n  function returnRandomY() {\r\n    return Math.floor(Math.random() * 100) + 50;\r\n  }\r\n\r\n  function forTwitter() {\r\n    if (isMobile) {\r\n      var dataURL = stage.toDataURL({\r\n        pixelRatio: 2\r\n      });\r\n      downloadURI(dataURL, 'posterTW.png');\r\n    } else {\r\n      var dataURL = stage.toDataURL({\r\n        pixelRatio: 1\r\n      });\r\n      downloadURI(dataURL, 'posterTW.png');\r\n    }\r\n    statsCounter();\r\n\r\n  }\r\n\r\n  function forFacebook() {\r\n    if (isMobile) {\r\n      var dataURL = stage.toDataURL({\r\n        pixelRatio: 4\r\n      });\r\n      downloadURI(dataURL, 'posterFB.png');\r\n    } else {\r\n      var dataURL = stage.toDataURL({\r\n        pixelRatio: 2\r\n      });\r\n      downloadURI(dataURL, 'posterFB.png');\r\n    }\r\n    statsCounter();\r\n\r\n  }\r\n\r\n  function forLinkedIn() {\r\n    if (isMobile) {\r\n      var dataURL = stage.toDataURL({\r\n        pixelRatio: 4\r\n      });\r\n      downloadURI(dataURL, 'posterLN.png');\r\n    } else {\r\n      var dataURL = stage.toDataURL({\r\n        pixelRatio: 2\r\n      });\r\n      downloadURI(dataURL, 'posterLN.png');\r\n    }\r\n    statsCounter();\r\n  }\r\n\r\n  function downloadURI(uri, name) {\r\n\r\n    let link = document.createElement('a');\r\n    link.download = name;\r\n    link.href = uri;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  }\r\n\r\n  beforeUpdate(() => {\r\n    console.log(\"beforeUpdate was called\");\r\n    //setting default values to canvas dimensions\r\n    width = 720;\r\n    height = 350;\r\n    // then create default one layer\r\n    //layer = new Konva.Layer();\r\n  });\r\n\r\n  afterUpdate(() => {\r\n    function fitStageIntoParentContainer() {\r\n      let lcontainer = document.getElementById('stage-parent');\r\n\r\n      // now we need to fit stage into parent\r\n      var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n      // to do this we need to scale the stage\r\n      var scale = containerWidth / width;\r\n\r\n      stage.width(width * scale);\r\n      stage.height(height * scale);\r\n      stage.scale({\r\n        x: scale,\r\n        y: scale\r\n      });\r\n      stage.draw();\r\n    }\r\n\r\n    fitStageIntoParentContainer();\r\n    // adapt the stage on any window resize\r\n    window.addEventListener('resize', fitStageIntoParentContainer);\r\n  })\r\n  \r\n  onMount(() => {\r\n        proAccessCheck();\r\n    firebaseAnalytics.logEvent('Quotes_2_Template');\r\n    //code to intialize counter for stats\r\n    db.collection('usersDB').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n        let userData = doc.data();\r\n        contentMadeSoFar = userData.totalCreated;\r\n      } else {\r\n        db.collection('usersDB').doc(user).set({\r\n          totalCreated: 0\r\n        })\r\n      }\r\n    }).catch(function (error) {\r\n      console.log(\"Error getting document:\", error);\r\n    });\r\n\r\n    // first we need to create a stage\r\n    stage = new Konva.Stage({\r\n      container: 'konva-stage', // id of container <div>\r\n      width: 720,\r\n      height: 350\r\n    });\r\n\r\n    //find position of stage container on the page:\r\n    stageBox = stage.container().getBoundingClientRect();\r\n\r\n    layer = new Konva.Layer();\r\n    bglayer = new Konva.Layer();\r\n    shapelayer = new Konva.Layer();\r\n\r\n    bglayer.moveToBottom();\r\n    shapelayer.moveToTop();\r\n    stage.add(bglayer);\r\n    stage.add(shapelayer);\r\n    stage.add(layer);\r\n\r\n    addBackground();\r\n    headingText();\r\n    subHeadingText();\r\n    quoteIcon();\r\n    \r\n    if(localStorage.getItem('heading')){\r\n        textNode.text(heading)\r\n        layer.draw(); \r\n        \r\n      }\r\n      if(localStorage.getItem('companyinfo')){\r\n        minortextNode.text(companyinfo)\r\n        layer.draw(); \r\n      }\r\n\r\n  });\r\n</script>\r\n<div>\r\n  <Container fluid>\r\n    {#if user} \r\n\t<Row class=\"py-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Quote Template #3</h1>\r\n\t\t</Col>\r\n    <Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Edit with your text. You can also move the main text.</h4>\r\n    </Col>\r\n    \r\n    </Row>\r\n\r\n    <Row>\r\n      <Col class=\"d-flex justify-content-center\">\r\n        <div id=\"stage-parent\">\r\n          <div id=\"konva-stage\"></div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n\r\n        <Row class=\"mt-2 justify-content-center\">\r\n        <div>\r\n            <Row class=\"pt-3\">\r\n              <!--{#if !allowProAccess}\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                  <h5 class=\"textBlue font-weight-bold\">⚠ This feature requires PRO account.</h5>\r\n                  <button id=\"toggleForPro\" class=\"pressDownDisabled btn-block btn-lg\" disabled>Remix Design</button>\r\n              </Col>\r\n              {:else}\r\n              {/if}-->\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                <button id=\"toggleForPro\" class=\"pressDown btn-block btn-lg\" on:click={remix}>Remix Design</button>\r\n              </Col>\r\n            </Row>\r\n                <div>\r\n                    <Row class=\"pt-5\">\r\n                        <Col sm=\"12\" class=\"text-center\">\r\n                          <h4 class=\"textBlue font-weight-bold\">Download For Different Social Media.</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"mt-2 mx-4 text-center\">\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forFacebook}>Facebook</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forTwitter}>Twitter</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forLinkedIn}>Linkedin</button>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n        </div>\r\n        </Row>\r\n{:else}\r\n<NotFound />\r\n{/if}\r\n<hr/>\r\n<Footer />\r\n</Container>\r\n</div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n\r\n#konva-stage {\r\n    border: 2px solid black;\r\n}\r\n  #stage-parent {\r\n    max-width: 720px;\r\n    width: 100%;\r\n  }\r\n\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Label, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from '../Footer.svelte';\r\n  import NotFound from '../NotFound.svelte';\r\n  \r\n  import { FiveBlobs } from '../modules/Blob.svelte';\r\n  import {colorPalette} from '../modules/Color.svelte';\r\n  let svgPaths = FiveBlobs();\r\n  let colorArr = colorPalette();\r\n\r\n  import Konva from 'konva';\r\n  import { onMount } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n\r\n/*\r\nAuthentication check procedure:-\r\n1. When user logged in, It's uid from auth.currentuser of firebase is stored in a localStorage \r\n2. Now, that uid is enough for validation everywhere and i can access localstorage anywhere.\r\n3. thus, uid is the only thing needed after user is logged in, which can be retrieved with localstorage.getitem and its key 'usrkey'\r\n4. on logging out, localstorage is cleared.\r\n*/\r\nimport { auth, db, firebaseAnalytics } from '../firebase';\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\n\r\nlet allowProAccess = false;\r\n\r\nfunction proAccessCheck() {\r\ndb.collection('PROusers').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n      console.log(\"Pro Access ENABLED :)\");\r\n      allowProAccess = true;\r\n  } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"Pro Access Disabled\");\r\n      allowProAccess = false;\r\n  }\r\n  }).catch(function(error) {\r\n      console.log(\"Error:\", error);\r\n  });\r\n}\r\n  let flag = 0;\r\n  let user_text, website_name;\r\n  let stage, width=720,height=350;\r\n  let textNode = new Konva.Text();\r\n  let minortextNode = new Konva.Text();\r\n  let layer = new Konva.Layer();\r\n  let bglayer = new Konva.Layer();\r\n  let shapelayer = new Konva.Layer();\r\n  \r\n  let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  \r\n//code to check if user downloaded and then increment.\r\nlet timesave, contentMadeSoFar=0;\r\n\r\nfunction quoteIcon(){\r\n  //add a rough filter here, an actual image overlay.\r\n        \r\n        let url2 = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"128\" height=\"128\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path fill=\"'+colorArr[1]+'\" d=\"M19.417 6.679C20.447 7.773 21 9 21 10.989c0 3.5-2.457 6.637-6.03 8.188l-.893-1.378c3.335-1.804 3.987-4.145 4.247-5.621-.537.278-1.24.375-1.929.311-1.804-.167-3.226-1.648-3.226-3.489a3.5 3.5 0 0 1 3.5-3.5c1.073 0 2.099.49 2.748 1.179zm-10 0C10.447 7.773 11 9 11 10.989c0 3.5-2.457 6.637-6.03 8.188l-.893-1.378c3.335-1.804 3.987-4.145 4.247-5.621-.537.278-1.24.375-1.929.311C4.591 12.322 3.17 10.841 3.17 9a3.5 3.5 0 0 1 3.5-3.5c1.073 0 2.099.49 2.748 1.179z\"/></svg>';\r\n        let url3 = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"128\" height=\"128\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path fill=\"'+colorArr[1]+'\" d=\"M6.94 14.036c-.233.624-.43 1.2-.606 1.783.96-.697 2.101-1.139 3.418-1.304 2.513-.314 4.746-1.973 5.876-4.058l-1.456-1.455 1.413-1.415 1-1.001c.43-.43.915-1.224 1.428-2.368-5.593.867-9.018 4.292-11.074 9.818zM17 9.001L18 10c-1 3-4 6-8 6.5-2.669.334-4.336 2.167-5.002 5.5H3C4 16 6 2 21 2c-1 2.997-1.998 4.996-2.997 5.997L17 9.001z\"/></svg>';\r\n        let url =  'data:image/svg+xml;base64,' + window.btoa(url3);\r\n        \r\n        Konva.Image.fromURL(url, image => {\r\n        image.draggable(true);\r\n        image.x(550);\r\n        image.y(200);\r\n        shapelayer.add(image);\r\n        shapelayer.draw();\r\n        })\r\n}\r\n\r\nfunction statsCounter(){\r\n  db.collection('usersDB').doc(user.uid).get().then(doc => {\r\n      if (doc.exists) {\r\n          //alert(\"stat counter if statement me aya hu\")\r\n          //if user is already there, then add +1\r\n              let val = contentMadeSoFar+1\r\n              db.collection('usersDB').doc(user.uid).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      } else {\r\n         // alert(\"stat counter else statement me aya hu\")\r\n          db.collection('usersDB').doc(user.uid).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n      });\r\n}\r\n\r\nfunction remix() {\r\n        //stage.destroyChildren();\r\n        bglayer.destroy();\r\n        shapelayer.destroy();\r\n        //layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n        //headingText();\r\n        //subHeadingText();\r\n        textNode.fill(colorArr[1])\r\n        minortextNode.fill(colorArr[1])\r\n        quoteIcon();\r\n\r\n        layer.moveToTop();\r\n        bglayer.moveToBottom();\r\n\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n  \r\n        svgPaths = FiveBlobs();\r\n        colorArr = colorPalette();\r\n        \r\n}\r\n\r\nlet heading = JSON.parse(localStorage.getItem('heading'));\r\nlet companyinfo = JSON.parse(localStorage.getItem('companyinfo'));\r\n\r\nfunction subHeadingText(){\r\n  //The minor heading text\r\n  minortextNode = new Konva.Text({\r\n        text: '@yourusername',\r\n        x: 20,\r\n        y: 20,\r\n        fontSize: 20,\r\n        fill: colorArr[1],\r\n      });\r\n      minortextNode.width(500)\r\n      layer.add(minortextNode);\r\n      \r\n      layer.draw();\r\n\r\n      minortextNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = minortextNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = minortextNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = minortextNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            minortextNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction headingText(){\r\n    \r\n    textNode = new Konva.Text({\r\n        text: 'The Rules of fast learning',\r\n        x: 100,\r\n        y: 100,\r\n        fontSize: 40,\r\n        fontFamily: 'Arial',\r\n        fontVariant: 'small-caps',\r\n        fill: colorArr[0],\r\n        align: 'center',\r\n        draggable: 'true'\r\n      });\r\n      textNode.width(450)\r\n      textNode.height(400)\r\n      layer.add(textNode);\r\n      layer.draw();\r\n      \r\n      textNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = textNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = textNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            textNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction addBackground(){\r\n/*this code below is to apply random background.\r\nlet bgRect = new Konva.Rect({\r\n            x:0,y:0,\r\n            width: width,\r\n            height: height,\r\n            fill: colorArr[0],\r\n            draggable: false,\r\n        });\r\n        bglayer.add(bgRect)\r\n        bglayer.draw();\r\n        */\r\n\r\n// this design will have only white bg.\r\nlet bgRect = new Konva.Rect({\r\n            x:0,y:0,\r\n            width: width,\r\n            height: height,\r\n            fill: 'white',\r\n            draggable: false,\r\n        });\r\n        bglayer.add(bgRect)\r\n        bglayer.draw();\r\n}\r\n\r\nfunction returnRandom(){\r\n        return Math.floor(Math.random() * 300) + 50 ;\r\n}\r\n\r\nfunction returnRandomY(){\r\n        return Math.floor(Math.random() * 100) + 50 ;\r\n}\r\n\r\nfunction forTwitter() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forFacebook() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forLinkedIn() {\r\n    if (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        statsCounter();\r\n}\r\n\r\nfunction downloadURI(uri, name) {\r\n\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n    beforeUpdate(() => {\r\n\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 720;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n        //layer = new Konva.Layer();\r\n        \r\n\t});\r\n\r\n    afterUpdate(() => {\r\n    function fitStageIntoParentContainer() {\r\n      let lcontainer = document.getElementById('stage-parent');\r\n\r\n      // now we need to fit stage into parent\r\n      var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n      // to do this we need to scale the stage\r\n      var scale = containerWidth / width;\r\n\r\n      stage.width(width * scale);\r\n      stage.height(height * scale);\r\n      stage.scale({\r\n        x: scale,\r\n        y: scale\r\n      });\r\n      stage.draw();\r\n    }\r\n\r\n    fitStageIntoParentContainer();\r\n    // adapt the stage on any window resize\r\n    window.addEventListener('resize', fitStageIntoParentContainer);\r\n  })\r\n\r\n    onMount(() => {\r\n        proAccessCheck();\r\n        firebaseAnalytics.logEvent(\"Quotes_3_template\")\r\n        //code to intialize counter for stats\r\n        db.collection('usersDB').doc(user).get().then(doc => {\r\n                    if (doc.exists) {\r\n                        let userData = doc.data();\r\n                        contentMadeSoFar = userData.totalCreated;\r\n                    } else {\r\n                        db.collection('usersDB').doc(user).set({\r\n                                    totalCreated: 0\r\n                        })\r\n                    }\r\n                    }).catch(function(error) {\r\n                        console.log(\"Error getting document:\", error);\r\n                    });\r\n        // first we need to create a stage\r\n        stage = new Konva.Stage({\r\n          container: 'konva-stage',   // id of container <div>\r\n          width: 720,\r\n          height: 350\r\n        });\r\n\r\n        layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        shapelayer.moveToTop();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n\r\n        addBackground();\r\n        headingText();\r\n        subHeadingText();\r\n        quoteIcon();\r\n\r\n      if(localStorage.getItem('heading')){\r\n          textNode.text(heading)\r\n          layer.draw(); \r\n          \r\n        }\r\n        if(localStorage.getItem('companyinfo')){\r\n          minortextNode.text(companyinfo)\r\n          layer.draw(); \r\n        }\r\n    });\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n    {#if user} \r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Quote Template #3</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Edit with your text. You can also move the main text.</h4>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n        <Col class=\"d-flex justify-content-center\">\r\n          <div id=\"stage-parent\">\r\n            <div id=\"konva-stage\"></div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n        <Row class=\"mt-2 justify-content-center\">\r\n        <div>\r\n            <Row class=\"pt-3\">\r\n              <!--{#if !allowProAccess}\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                  <h5 class=\"textBlue font-weight-bold\">⚠ This feature requires PRO account.</h5>\r\n                  <button id=\"toggleForPro\" class=\"pressDownDisabled btn-block btn-lg\" disabled>Remix Design</button>\r\n              </Col>\r\n              {:else}\r\n              {/if}-->\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                <button id=\"toggleForPro\" class=\"pressDown btn-block btn-lg\" on:click={remix}>Remix Design</button>\r\n              </Col>\r\n            </Row>\r\n                <div>\r\n                    <Row class=\"pt-5\">\r\n                        <Col sm=\"12\" class=\"text-center\">\r\n                          <h4 class=\"textBlue font-weight-bold\">Download For Different Social Media.</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"mt-2 mx-4 text-center\">\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forFacebook}>Facebook</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forTwitter}>Twitter</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forLinkedIn}>Linkedin</button>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n        </div>\r\n        </Row>\r\n{:else}\r\n<NotFound />\r\n{/if}\r\n<hr/>\r\n<Footer />\r\n</Container>\r\n</div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n    #stage-parent {\r\n      max-width: 720px;\r\n      width: 100%;\r\n      border: 1px black solid;\r\n    }\r\n    \r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Label, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from '../Footer.svelte';\r\n  import NotFound from '../NotFound.svelte';\r\n\r\n  import { FiveBlobs } from '../modules/Blob.svelte';\r\n  import {colorPalette} from '../modules/Color.svelte';\r\n  let svgPaths = FiveBlobs();\r\n  let colorArr = colorPalette();\r\n\r\n  import Konva from 'konva';\r\n  import { onMount } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n\r\n/*\r\nAuthentication check procedure:-\r\n1. When user logged in, It's uid from auth.currentuser of firebase is stored in a localStorage \r\n2. Now, that uid is enough for validation everywhere and i can access localstorage anywhere.\r\n3. thus, uid is the only thing needed after user is logged in, which can be retrieved with localstorage.getitem and its key 'usrkey'\r\n4. on logging out, localstorage is cleared.\r\n*/\r\nimport { auth, db, firebaseAnalytics } from '../firebase';\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\nlet allowProAccess = false;\r\n\r\nfunction proAccessCheck() {\r\ndb.collection('PROusers').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n      console.log(\"Pro Access ENABLED :)\");\r\n      allowProAccess = true;\r\n  } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"Pro Access Disabled\");\r\n      allowProAccess = false;\r\n  }\r\n  }).catch(function(error) {\r\n      console.log(\"Error:\", error);\r\n  });\r\n}\r\n\r\n  let flag = 0;\r\n  let user_text, website_name;\r\n  let stage, width=720,height=350;\r\n  let textNode = new Konva.Text();\r\n  let minortextNode = new Konva.Text();\r\n  let footerValue = new Konva.Text(); \r\n\r\n  let layer = new Konva.Layer();\r\n  let bglayer = new Konva.Layer();\r\n  let shapelayer = new Konva.Layer();\r\n  \r\n  let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  \r\n//code to check if user downloaded and then increment.\r\nlet timesave, contentMadeSoFar=0;\r\n\r\nfunction Quotes(){\r\n   // I generate the d value in <path> from Blob.svelte's generateColor\r\n    for(let i=0;i<1;i++)\r\n        {\r\n\r\n          // quote icon by Nick Roach at https://www.iconfinder.com/search/?q=quote&price=free&license=gte__1, Free and commercial allowed\r\n        let img = 'https://cdn1.iconfinder.com/data/icons/anchor/128/quote.png';\r\n        let url2 = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"128\" height=\"128\"><path fill=\"none\" d=\"M0 0h24v24H0z\"/><path fill=\"'+colorArr[i+3]+'\" d=\"M19.417 6.679C20.447 7.773 21 9 21 10.989c0 3.5-2.457 6.637-6.03 8.188l-.893-1.378c3.335-1.804 3.987-4.145 4.247-5.621-.537.278-1.24.375-1.929.311-1.804-.167-3.226-1.648-3.226-3.489a3.5 3.5 0 0 1 3.5-3.5c1.073 0 2.099.49 2.748 1.179zm-10 0C10.447 7.773 11 9 11 10.989c0 3.5-2.457 6.637-6.03 8.188l-.893-1.378c3.335-1.804 3.987-4.145 4.247-5.621-.537.278-1.24.375-1.929.311C4.591 12.322 3.17 10.841 3.17 9a3.5 3.5 0 0 1 3.5-3.5c1.073 0 2.099.49 2.748 1.179z\"/></svg>';\r\n        \r\n        \r\n        let url =  'data:image/svg+xml;base64,' + window.btoa(url2);\r\n        \r\n        Konva.Image.fromURL(url, image => {\r\n        image.draggable(true);\r\n        image.x(550);\r\n        image.y(returnRandomY()+15);\r\n        shapelayer.add(image);\r\n        shapelayer.draw();\r\n        })\r\n\r\n        // The following code is the Quote svg icons by remixicon and changes it color from the color array.\r\n        let SVG = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"64\" height=\"64\"><path fill=\"none\" d=\"M0 0H24V24H0z\"/><path fill=\"'+colorArr[i+3]+'\" d=\"M21 3c.552 0 1 .448 1 1v14c0 .552-.448 1-1 1H6.455L2 22.5V4c0-.552.448-1 1-1h18zm-1 2H4v13.385L5.763 17H20V5zm-9.485 2.412l.447.688c-1.668.903-1.639 2.352-1.639 2.664.155-.02.318-.024.48-.009.902.084 1.613.825 1.613 1.745 0 .966-.784 1.75-1.75 1.75-.537 0-1.05-.245-1.374-.59-.515-.546-.792-1.16-.792-2.155 0-1.75 1.228-3.318 3.015-4.093zm5 0l.447.688c-1.668.903-1.639 2.352-1.639 2.664.155-.02.318-.024.48-.009.902.084 1.613.825 1.613 1.745 0 .966-.784 1.75-1.75 1.75-.537 0-1.05-.245-1.374-.59-.515-.546-.792-1.16-.792-2.155 0-1.75 1.228-3.318 3.015-4.093z\"/></svg>';\r\n        let SVG2 = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width=\"64\" height=\"64\"><path fill=\"none\" d=\"M0 0H24V24H0z\"/><path fill=\"'+colorArr[i+3]+'\" d=\"M21 3c.552 0 1 .448 1 1v14c0 .552-.448 1-1 1H6.455L2 22.5V4c0-.552.448-1 1-1h18zM10.962 8.1l-.447-.688C8.728 8.187 7.5 9.755 7.5 11.505c0 .995.277 1.609.792 2.156.324.344.837.589 1.374.589.966 0 1.75-.784 1.75-1.75 0-.92-.711-1.661-1.614-1.745-.16-.015-.324-.012-.479.01v-.092c.006-.422.092-1.633 1.454-2.466l.185-.107-.447-.688zm4.553-.688c-1.787.775-3.015 2.343-3.015 4.093 0 .995.277 1.609.792 2.156.324.344.837.589 1.374.589.966 0 1.75-.784 1.75-1.75 0-.92-.711-1.661-1.614-1.745-.16-.015-.324-.012-.479.01 0-.313-.029-1.762 1.639-2.665z\" /></svg>'\r\n        \r\n        //here, we add them to an array and pick one randomly\r\n        let arr = [SVG,SVG2]\r\n        let randomElement = arr[Math.floor(Math.random() * arr.length)];\r\n\r\n        let urla =  'data:image/svg+xml;base64,' + window.btoa(randomElement);\r\n        Konva.Image.fromURL(urla, image => {\r\n        image.draggable(true);\r\n        image.x(20);\r\n        image.y(returnRandomY()+15);\r\n        shapelayer.add(image);\r\n        shapelayer.draw();\r\n        })\r\n        }\r\n}\r\n\r\nfunction statsCounter(){\r\n  db.collection('usersDB').doc(user.uid).get().then(doc => {\r\n      if (doc.exists) {\r\n          //alert(\"stat counter if statement me aya hu\")\r\n          //if user is already there, then add +1\r\n              let val = contentMadeSoFar+1\r\n              db.collection('usersDB').doc(user.uid).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      } else {\r\n         // alert(\"stat counter else statement me aya hu\")\r\n          db.collection('usersDB').doc(user.uid).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n      });\r\n}\r\n\r\nfunction remix() {\r\n        //stage.destroyChildren();\r\n        bglayer.destroy();\r\n        shapelayer.destroy();\r\n        //layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        layer.moveToTop();\r\n        //stage.add(layer);\r\n  \r\n        svgPaths = FiveBlobs();\r\n        colorArr = colorPalette();\r\n        \r\n        addBackground();\r\n        addFooterBar()\r\n        Quotes();\r\n}\r\n\r\nfunction subHeadingText(){\r\n  //The minor heading text\r\n  minortextNode = new Konva.Text({\r\n        text: 'This is the sub-heading. Edit me!',\r\n        x: 100,\r\n        y: 250,\r\n        fontSize: 20,\r\n        fill: 'white'\r\n      });\r\n      minortextNode.width(500)\r\n      layer.add(minortextNode);\r\n      \r\n      layer.draw();\r\n\r\n      minortextNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = minortextNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = minortextNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = minortextNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            minortextNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction addFooterBar(){\r\n    let txtBar = new Konva.Rect({\r\n            x:0,y:325,\r\n            width: 1000,\r\n            height: 30,\r\n            fill: '#262626',\r\n            draggable: false,\r\n        });\r\n\r\n    let circle = new Konva.Circle({\r\n      x: 670, y:337,\r\n      radius: 8,\r\n      fill: colorArr[3]\r\n    })\r\n    let anotherCircle = new Konva.Circle({\r\n      x: 690, y:337,\r\n      radius: 8,\r\n      fill: colorArr[4]\r\n    })\r\n\t\t\t\r\n        bglayer.add(txtBar)\r\n        bglayer.add(circle)\r\n        bglayer.add(anotherCircle)\r\n        bglayer.draw();\r\n}\r\n\r\nlet heading = JSON.parse(localStorage.getItem('heading'));\r\nlet subheading = JSON.parse(localStorage.getItem('subheading'));\r\nlet companyinfo = JSON.parse(localStorage.getItem('companyinfo'));\r\n\r\nfunction footerText(){\r\n//the footer bottom text\r\nfooterValue = new Konva.Text({\r\n        text: '@yoursocialhere or some text',\r\n        x: 50,\r\n        y: 330,\r\n        fontSize: 15,\r\n        fill: 'white',\r\n      });\r\n      footerValue.width(500)\r\n      layer.add(footerValue);\r\n      layer.draw();\r\n\r\n      footerValue.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = footerValue.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = footerValue.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = footerValue.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            footerValue.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction headingText(flag){\r\n    //The main heading text\r\n    // if flag is 1, center the text\r\n    if(flag === 1)\r\n    {\r\n      textNode = new Konva.Text({\r\n        text: 'This is the heading. Edit me!',\r\n        x: 100,\r\n        y: 100,\r\n        fontSize: 60,\r\n        fontFamily: 'Fantasy',\r\n        rotation: 5,\r\n        stroke: 'black',\r\n        strokeWidth: 2,\r\n        fill: 'white',\r\n        align: 'center',\r\n      });\r\n    }\r\n    else {\r\n      textNode = new Konva.Text({\r\n        text: 'This is the heading. Edit me!',\r\n        x: 100,\r\n        y: 100,\r\n        fontSize: 40,\r\n        fill: 'white'\r\n      });\r\n    }\r\n      textNode.width(500)\r\n      layer.add(textNode);\r\n      layer.draw();\r\n      \r\n      textNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = textNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = textNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            textNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction addBackground(){\r\n//this code below is to apply random background.\r\nlet bgRect = new Konva.Rect({\r\n            x:0,y:0,\r\n            width: width,\r\n            height: height,\r\n            fill: colorArr[0],\r\n            draggable: false,\r\n        });\r\n\t\t\t\r\n        bglayer.add(bgRect)\r\n        bglayer.draw();\r\n}\r\n\r\nfunction returnRandom(){\r\n        return Math.floor(Math.random() * 300) + 50 ;\r\n}\r\n\r\nfunction returnRandomY(){\r\n        return Math.floor(Math.random() * 100) + 50 ;\r\n}\r\n\r\nfunction forTwitter() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forFacebook() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forLinkedIn() {\r\n    if (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        statsCounter();\r\n}\r\n\r\nfunction downloadURI(uri, name) {\r\n\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n    beforeUpdate(() => {\r\n\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 720;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n        //layer = new Konva.Layer();\r\n        \r\n\t});\r\n\r\n  afterUpdate(() => {\r\n    function fitStageIntoParentContainer() {\r\n      let lcontainer = document.getElementById('stage-parent');\r\n\r\n      // now we need to fit stage into parent\r\n      var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n      // to do this we need to scale the stage\r\n      var scale = containerWidth / width;\r\n\r\n      stage.width(width * scale);\r\n      stage.height(height * scale);\r\n      stage.scale({\r\n        x: scale,\r\n        y: scale\r\n      });\r\n      stage.draw();\r\n    }\r\n\r\n    fitStageIntoParentContainer();\r\n    // adapt the stage on any window resize\r\n    window.addEventListener('resize', fitStageIntoParentContainer);\r\n  })\r\n   \r\n  onMount(() => {\r\n        proAccessCheck();\r\n      firebaseAnalytics.logEvent('Quote_Template');\r\n       //code to intialize counter for stats\r\n       db.collection('usersDB').doc(user).get().then(doc => {\r\n            if (doc.exists) {\r\n                let userData = doc.data();\r\n                contentMadeSoFar = userData.totalCreated;\r\n            } else {\r\n                db.collection('usersDB').doc(user).set({\r\n                            totalCreated: 0\r\n                })\r\n            }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n        // first we need to create a stage\r\n        stage = new Konva.Stage({\r\n          container: 'konva-stage',   // id of container <div>\r\n          width: 720,\r\n          height: 350\r\n        });\r\n\r\n        layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n\r\n        addBackground();\r\n        addFooterBar();\r\n        headingText();\r\n        subHeadingText();\r\n        footerText();\r\n        Quotes();\r\n\r\n      if(localStorage.getItem('heading')){\r\n        textNode.text(heading)\r\n        layer.draw(); \r\n        \r\n      }\r\n      if(localStorage.getItem('subheading')){\r\n        minortextNode.text(subheading)\r\n        layer.draw(); \r\n      }\r\n\r\n      if(localStorage.getItem('companyinfo')){\r\n        footerValue.text(companyinfo)\r\n        layer.draw(); \r\n      }\r\n    });\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n    {#if user} \r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Quote Template</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Edit with your text. You can also move the icons.</h4>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n      <Col class=\"d-flex justify-content-center\">\r\n        <div id=\"stage-parent\">\r\n          <div id=\"konva-stage\"></div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n\r\n        <Row class=\"mt-2 justify-content-center\">\r\n        <div>\r\n            <Row class=\"pt-3\">\r\n              <!--{#if !allowProAccess}\r\n                <Col sm=\"12\" class=\"text-center\">\r\n                    <h5 class=\"textBlue font-weight-bold\">⚠ This feature requires PRO account.</h5>\r\n                    <button id=\"toggleForPro\" class=\"pressDownDisabled btn-block btn-lg\" disabled>Remix Design</button>\r\n                </Col>\r\n                {:else}\r\n                {/if}-->\r\n                <Col sm=\"12\" class=\"text-center\">\r\n                  <button id=\"toggleForPro\" class=\"pressDown btn-block btn-lg\" on:click={remix}>Remix Design</button>\r\n                </Col>\r\n            </Row>\r\n                <div>\r\n                    <Row class=\"pt-5\">\r\n                        <Col sm=\"12\" class=\"text-center\">\r\n                            <h4 class=\"textBlue font-weight-bold\">Download For Different Social Media.</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"mt-2 mx-4 text-center\">\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forFacebook}>Facebook</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forTwitter}>Twitter</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forLinkedIn}>Linkedin</button>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n        </div>\r\n        </Row>\r\n{:else}\r\n<NotFound />\r\n{/if}\r\n<hr/>\r\n<Footer />\r\n</Container>\r\n</div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n    @font-face {\r\nfont-family: \"CustomFont\";\r\nsrc: url(\"../fonts/impact.ttf\");\r\n}\r\n\r\n\r\n#konva-stage {\r\n    border: 1px solid black;\r\n}\r\n\r\n#stage-parent {\r\n  max-width: 720px;\r\n  width: 100%;\r\n}\r\n\r\n\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Label, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from '../Footer.svelte';\r\n  import NotFound from '../NotFound.svelte';\r\n  \r\n  import { FiveBlobs } from '../modules/Blob.svelte';\r\n  import {colorPalette} from '../modules/Color.svelte';\r\n  let svgPaths = FiveBlobs();\r\n  let colorArr = colorPalette();\r\n\r\n  import Konva from 'konva';\r\n  import { onMount } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n/*\r\nAuthentication check procedure:-\r\n1. When user logged in, It's uid from auth.currentuser of firebase is stored in a localStorage \r\n2. Now, that uid is enough for validation everywhere and i can access localstorage anywhere.\r\n3. thus, uid is the only thing needed after user is logged in, which can be retrieved with localstorage.getitem and its key 'usrkey'\r\n4. on logging out, localstorage is cleared.\r\n*/\r\nimport { auth, db, firebaseAnalytics } from '../firebase';\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\n\r\nlet allowProAccess = false;\r\n\r\nfunction proAccessCheck() {\r\ndb.collection('PROusers').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n      console.log(\"Pro Access ENABLED :)\");\r\n      allowProAccess = true;\r\n  } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"Pro Access Disabled\");\r\n      allowProAccess = false;\r\n  }\r\n  }).catch(function(error) {\r\n      console.log(\"Error:\", error);\r\n  });\r\n}\r\n  let flag = 0;\r\n  let user_text, website_name;\r\n  let stage, width=720,height=350;\r\n  let textNode = new Konva.Text();\r\n  let minortextNode = new Konva.Text();\r\n  let layer = new Konva.Layer();\r\n  let bglayer = new Konva.Layer();\r\n  let shapelayer = new Konva.Layer();\r\n  \r\n  let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  \r\n//code to check if user downloaded and then increment.\r\nlet timesave, contentMadeSoFar=0;\r\n\r\nfunction rectShape(){\r\n        //add a rectangle shape in middle.\r\n        let textRect = new Konva.Rect({\r\n            x: 400, y: 10,\r\n            fill: colorArr[2],\r\n            width: 200,\r\n            height: 200,\r\n            rotate: 60\r\n        })\r\n        shapelayer.add(textRect);\r\n        shapelayer.draw();\r\n}\r\n\r\nfunction statsCounter(){\r\n  db.collection('usersDB').doc(user.uid).get().then(doc => {\r\n      if (doc.exists) {\r\n          //alert(\"stat counter if statement me aya hu\")\r\n          //if user is already there, then add +1\r\n              let val = contentMadeSoFar+1\r\n              db.collection('usersDB').doc(user.uid).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      } else {\r\n         // alert(\"stat counter else statement me aya hu\")\r\n          db.collection('usersDB').doc(user.uid).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n      });\r\n}\r\n\r\nfunction remix() {\r\n        //stage.destroyChildren();\r\n        bglayer.destroy();\r\n        shapelayer.destroy();\r\n        //layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n        \r\n\r\n        bglayer.moveToBottom();\r\n\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        layer.moveToTop();\r\n        minortextNode.fill(colorArr[5])\r\n  \r\n        svgPaths = FiveBlobs();\r\n        colorArr = colorPalette();\r\n\r\n        addBackground();\r\n        rectShape();\r\n        \r\n}\r\n\r\nfunction loadCustomFont() {\r\n    // FONT LOADING DETECTION CODE:\r\n    var canvas = document.createElement('canvas');\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.font = 'normal 20px CustomFont';\r\n\r\n    var isFontLoaded = false;\r\n    var TEXT_TEXT = 'Some test text;';\r\n    var initialMeasure = ctx.measureText(TEXT_TEXT);\r\n    var initialWidth = initialMeasure.width;\r\n\r\n    // here is how the function works\r\n    // different fontFamily may have different width of symbols\r\n    // when font is not loaded a browser will use startard font as a fallback\r\n    // probably Arial\r\n    // when font is loaded measureText will return another width\r\n    function whenFontIsLoaded(callback, attemptCount) {\r\n      if (attemptCount === undefined) {\r\n        attemptCount = 0;\r\n      }\r\n      if (attemptCount >= 20) {\r\n        callback();\r\n        return;\r\n      }\r\n      if (isFontLoaded) {\r\n        callback();\r\n        return;\r\n      }\r\n      const metrics = ctx.measureText(TEXT_TEXT);\r\n      const width = metrics.width;\r\n      if (width !== initialWidth) {\r\n        isFontLoaded = true;\r\n        callback();\r\n      } else {\r\n        setTimeout(function () {\r\n          whenFontIsLoaded(callback, attemptCount + 1);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    whenFontIsLoaded(function () {\r\n      // set font style when font is loaded\r\n      // so Konva will recalculate text wrapping if it has limited width\r\n      textNode.fontFamily('CustomFont');\r\n      layer.draw();\r\n    });\r\n  }\r\n\r\nlet heading = JSON.parse(localStorage.getItem('heading'));\r\nlet companyinfo = JSON.parse(localStorage.getItem('companyinfo'));\r\n\r\nfunction subHeadingText(){\r\n  //The minor heading text\r\n  minortextNode = new Konva.Text({\r\n        text: '@yourusername',\r\n        x: 20,\r\n        y: 250,\r\n        fontSize: 90,\r\n        fontFamily: 'CustomFont',\r\n        fill: colorArr[5],\r\n        draggable: 'true'\r\n      });\r\n      layer.add(minortextNode);\r\n      \r\n      layer.draw();\r\n\r\n      minortextNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = minortextNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = minortextNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = minortextNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            minortextNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction headingText(){\r\n    textNode = new Konva.Text({\r\n        text: 'Consistency and hardwork takes you a step forward.',\r\n        x: 200,\r\n        y: 100,\r\n        fontSize: 30,\r\n        fontFamily: 'CustomFont',\r\n        fill: 'white',\r\n        align: 'center',\r\n        draggable: 'true',\r\n        wrap: 'word'\r\n      });\r\n      textNode.width(300)\r\n      layer.add(textNode);\r\n      layer.draw();\r\n      \r\n      textNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = textNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = textNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            textNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction addBackground(){\r\n//this code below is to apply random background.\r\nlet bgRect = new Konva.Rect({\r\n            x:0,y:0,\r\n            width: width,\r\n            height: height,\r\n            fill: colorArr[1],\r\n            draggable: false,\r\n        });\r\n        bglayer.add(bgRect)\r\n        bglayer.draw();\r\n        \r\n}\r\n\r\nfunction returnRandom(){\r\n        return Math.floor(Math.random() * 300) + 50 ;\r\n}\r\n\r\nfunction returnRandomY(){\r\n        return Math.floor(Math.random() * 100) + 50 ;\r\n}\r\n\r\nfunction forTwitter() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forFacebook() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forLinkedIn() {\r\n    if (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        statsCounter();\r\n}\r\n\r\nfunction downloadURI(uri, name) {\r\n\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n  beforeUpdate(() => {\r\n\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 720;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n        //layer = new Konva.Layer();\r\n        \r\n\r\n          // FONT LOADING DETECTION CODE:\r\n      var canvas = document.createElement('canvas');\r\n      var ctx = canvas.getContext('2d');\r\n      ctx.font = 'normal 20px CustomFont';\r\n\r\n      var isFontLoaded = false;\r\n      var TEXT_TEXT = 'Some test text;';\r\n      var initialMeasure = ctx.measureText(TEXT_TEXT);\r\n      var initialWidth = initialMeasure.width;\r\n\r\n      // here is how the function works\r\n      // different fontFamily may have different width of symbols\r\n      // when font is not loaded a browser will use startard font as a fallback\r\n      // probably Arial\r\n      // when font is loaded measureText will return another width\r\n      function whenFontIsLoaded(callback, attemptCount) {\r\n        if (attemptCount === undefined) {\r\n          attemptCount = 0;\r\n        }\r\n        if (attemptCount >= 20) {\r\n          callback();\r\n          return;\r\n        }\r\n        if (isFontLoaded) {\r\n          callback();\r\n          return;\r\n        }\r\n        const metrics = ctx.measureText(TEXT_TEXT);\r\n        const width = metrics.width;\r\n        if (width !== initialWidth) {\r\n          isFontLoaded = true;\r\n          callback();\r\n        } else {\r\n          setTimeout(function () {\r\n            whenFontIsLoaded(callback, attemptCount + 1);\r\n          }, 1000);\r\n        }\r\n      }\r\n\r\n      whenFontIsLoaded(function () {\r\n        // set font style when font is loaded\r\n        // so Konva will recalculate text wrapping if it has limited width\r\n        textNode.fontFamily('CustomFont');\r\n        layer.draw();\r\n      });\r\n      \r\n\t});\r\n\r\n  afterUpdate(() => {\r\n    function fitStageIntoParentContainer() {\r\n      let lcontainer = document.getElementById('stage-parent');\r\n\r\n      // now we need to fit stage into parent\r\n      var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n      // to do this we need to scale the stage\r\n      var scale = containerWidth / width;\r\n\r\n      stage.width(width * scale);\r\n      stage.height(height * scale);\r\n      stage.scale({\r\n        x: scale,\r\n        y: scale\r\n      });\r\n      stage.draw();\r\n    }\r\n\r\n    fitStageIntoParentContainer();\r\n    // adapt the stage on any window resize\r\n    window.addEventListener('resize', fitStageIntoParentContainer);\r\n  })\r\n    \r\n  onMount(() => {\r\n        proAccessCheck();\r\n        firebaseAnalytics.logEvent('Rect_Template');\r\n         //code to intialize counter for stats\r\n         db.collection('usersDB').doc(user).get().then(doc => {\r\n            if (doc.exists) {\r\n                let userData = doc.data();\r\n                contentMadeSoFar = userData.totalCreated;\r\n            } else {\r\n                db.collection('usersDB').doc(user).set({\r\n                            totalCreated: 0\r\n                })\r\n            }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n       // first we need to create a stage\r\n        stage = new Konva.Stage({\r\n          container: 'konva-stage',   // id of container <div>\r\n          width: 720,\r\n          height: 350\r\n        });\r\n\r\n        layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        shapelayer.moveToTop();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n\r\n        addBackground();\r\n        headingText();\r\n        subHeadingText();\r\n        rectShape();\r\n\r\n      if(localStorage.getItem('heading')){\r\n          textNode.text(heading)\r\n          layer.draw(); \r\n          \r\n        }\r\n        if(localStorage.getItem('companyinfo')){\r\n          minortextNode.text(companyinfo)\r\n          layer.draw(); \r\n        }\r\n    });\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n    {#if user}\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Rectangle based Template</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Edit with your text. You can also move the certain items.</h4>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n      <Col class=\"d-flex justify-content-center\">\r\n        <div id=\"stage-parent\">\r\n          <div id=\"konva-stage\"></div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n\r\n        <Row class=\"mt-2 justify-content-center\">\r\n        <div>\r\n            <Row class=\"pt-3\">\r\n              <!--{#if !allowProAccess}\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                  <h5 class=\"textBlue font-weight-bold\">⚠ This feature requires PRO account.</h5>\r\n                  <button id=\"toggleForPro\" class=\"pressDownDisabled btn-block btn-lg\" disabled>Remix Design</button>\r\n              </Col>\r\n              {:else}\r\n              {/if}-->\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                <button id=\"toggleForPro\" class=\"pressDown btn-block btn-lg\" on:click={remix}>Remix Design</button>\r\n              </Col>\r\n            </Row>\r\n                <div>\r\n                    <Row class=\"pt-5\">\r\n                        <Col sm=\"12\" class=\"text-center\">\r\n                            <h4>Download For Different Social Media.</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"mt-2 mx-4 text-center\">\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forFacebook}>Facebook</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forTwitter}>Twitter</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forLinkedIn}>Linkedin</button>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n        </div>\r\n        </Row>\r\n{:else}\r\n<NotFound />\r\n{/if}\r\n<hr/>\r\n<Footer />\r\n</Container>\r\n</div>",
    "<svelte:head>\r\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootswatch/4.5.0/flatly/bootstrap.min.css\">\r\n</svelte:head>\r\n<style>\r\n    @font-face {\r\nfont-family: \"CustomFont\";\r\nsrc: url(\"../fonts/COMIC.ttf\");\r\n}\r\n\r\n#stage-parent {\r\n  max-width: 720px;\r\n  width: 100%;\r\n  border: 1px black solid;\r\n}\r\n\r\n    .textBlue{\r\n        color: #5778f3;\r\n    }\r\n    .pressDown {\r\n        background-color: #5778f3;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #3e4caf;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDisabled{\r\n        background-color: #5a5b63;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #cfcece;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDown:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n\r\n    .pressDownDefault {\r\n        background-color: #707070;\r\n        padding: 10px 30px;\r\n        color: #fff;\r\n        border-radius: 5px;\r\n        border-bottom: 4px solid #35363d;\r\n        transition: 0.1s;\r\n    }\r\n\r\n    .pressDownDefault:hover{\r\n        border-bottom-width: 0;\r\n        margin-top: 3px;\r\n        color: #fff;\r\n    }\r\n</style>\r\n<script>\r\n  import {Row, Col, Container, Jumbotron, Label, Input, Button, Navbar, NavbarBrand, Nav, NavItem} from 'sveltestrap'\r\n  import { Router, Link, Route } from \"svelte-routing\";\r\n\r\n  import Footer from '../Footer.svelte';\r\n  import NotFound from '../NotFound.svelte';\r\n  \r\n  import { FiveBlobs } from '../modules/Blob.svelte';\r\n  import {colorPalette} from '../modules/Color.svelte';\r\n  let svgPaths = FiveBlobs();\r\n  let colorArr = colorPalette();\r\n\r\n  import Konva from 'konva';\r\n  import { onMount } from 'svelte';\r\n  import { beforeUpdate, afterUpdate } from 'svelte';\r\n\r\n/*\r\nAuthentication check procedure:-\r\n1. When user logged in, It's uid from auth.currentuser of firebase is stored in a localStorage \r\n2. Now, that uid is enough for validation everywhere and i can access localstorage anywhere.\r\n3. thus, uid is the only thing needed after user is logged in, which can be retrieved with localstorage.getitem and its key 'usrkey'\r\n4. on logging out, localstorage is cleared.\r\n*/\r\nimport { auth, db, firebaseAnalytics } from '../firebase';\r\nlet authinfo = localStorage.getItem('usrkey');\r\nlet user = JSON.parse(authinfo);\r\n\r\nlet allowProAccess = false;\r\n\r\nfunction proAccessCheck() {\r\ndb.collection('PROusers').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n      console.log(\"Pro Access ENABLED :)\");\r\n      allowProAccess = true;\r\n  } else {\r\n      // doc.data() will be undefined in this case\r\n      console.log(\"Pro Access Disabled\");\r\n      allowProAccess = false;\r\n  }\r\n  }).catch(function(error) {\r\n      console.log(\"Error:\", error);\r\n  });\r\n}\r\n  let flag = 0;\r\n  let user_text, website_name;\r\n  let stage, width=720,height=350;\r\n  let textNode = new Konva.Text();\r\n  let minortextNode = new Konva.Text();\r\n  let layer = new Konva.Layer();\r\n  let bglayer = new Konva.Layer();\r\n  let shapelayer = new Konva.Layer();\r\n  \r\n  let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n  \r\n//code to check if user downloaded and then increment.\r\nlet timesave, contentMadeSoFar=0;\r\n\r\n\r\nfunction statsCounter(){\r\n  db.collection('usersDB').doc(user).get().then(doc => {\r\n      if (doc.exists) {\r\n          //alert(\"stat counter if statement me aya hu\")\r\n          //if user is already there, then add +1\r\n              let val = contentMadeSoFar+1\r\n              db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      } else {\r\n         // alert(\"stat counter else statement me aya hu\")\r\n          db.collection('usersDB').doc(user).set({\r\n                      totalCreated: val\r\n              })\r\n              contentMadeSoFar = val\r\n              timesaved()\r\n      }\r\n      }).catch(function(error) {\r\n          console.log(\"Error getting document:\", error);\r\n      });\r\n}\r\n\r\nfunction remix() {\r\n        //stage.destroyChildren();\r\n        bglayer.destroy();\r\n        shapelayer.destroy();\r\n        //layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        layer.moveToTop();\r\n        //stage.add(layer);\r\n  \r\n        svgPaths = FiveBlobs();\r\n        colorArr = colorPalette();\r\n        \r\n        addBackground();\r\n}\r\n\r\nfunction loadCustomFont(){\r\n     // FONT LOADING DETECTION CODE:\r\n     var canvas = document.createElement('canvas');\r\n      var ctx = canvas.getContext('2d');\r\n      ctx.font = 'normal 20px CustomFont';\r\n\r\n      var isFontLoaded = false;\r\n      var TEXT_TEXT = 'Some test text;';\r\n      var initialMeasure = ctx.measureText(TEXT_TEXT);\r\n      var initialWidth = initialMeasure.width;\r\n\r\n      // here is how the function works\r\n      // different fontFamily may have different width of symbols\r\n      // when font is not loaded a browser will use startard font as a fallback\r\n      // probably Arial\r\n      // when font is loaded measureText will return another width\r\n      function whenFontIsLoaded(callback, attemptCount) {\r\n        if (attemptCount === undefined) {\r\n          attemptCount = 0;\r\n        }\r\n        if (attemptCount >= 20) {\r\n          callback();\r\n          return;\r\n        }\r\n        if (isFontLoaded) {\r\n          callback();\r\n          return;\r\n        }\r\n        const metrics = ctx.measureText(TEXT_TEXT);\r\n        const width = metrics.width;\r\n        if (width !== initialWidth) {\r\n          isFontLoaded = true;\r\n          callback();\r\n        } else {\r\n          setTimeout(function () {\r\n            whenFontIsLoaded(callback, attemptCount + 1);\r\n          }, 1000);\r\n        }\r\n      }\r\n\r\n      whenFontIsLoaded(function () {\r\n        // set font style when font is loaded\r\n        // so Konva will recalculate text wrapping if it has limited width\r\n        textNode.fontFamily('CustomFont');\r\n        layer.draw();\r\n      });\r\n}\r\n\r\nlet heading = JSON.parse(localStorage.getItem('heading'));\r\nlet companyinfo = JSON.parse(localStorage.getItem('companyinfo'));\r\n\r\nfunction subHeadingText(){\r\n    loadCustomFont();\r\n  //The minor heading text\r\n  minortextNode = new Konva.Text({\r\n        text: '@yourusername',\r\n        x: 20,\r\n        y: 320,\r\n        fontSize: 20,\r\n        fontFamily: 'CustomFont',\r\n        fill: 'white',\r\n      });\r\n      minortextNode.width(500)\r\n      layer.add(minortextNode);\r\n      \r\n      layer.draw();\r\n\r\n      minortextNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = minortextNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = minortextNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = minortextNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            minortextNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction headingText(){\r\n    loadCustomFont();\r\n    textNode = new Konva.Text({\r\n        text: '6 Simple Ways to relieve your anxiety',\r\n        x: 170,\r\n        y: 100,\r\n        fontSize: 50,\r\n        fontFamily: 'CustomFont',\r\n        fill: 'white',\r\n        align: 'center',\r\n        draggable: 'true'\r\n      });\r\n      textNode.width(400)\r\n      layer.add(textNode);\r\n      layer.draw();\r\n      \r\n      textNode.on('dblclick', () => {\r\n        // create textarea over canvas with absolute position\r\n\r\n        // first we need to find position for textarea\r\n        // how to find it?\r\n\r\n        // at first lets find position of text node relative to the stage:\r\n        var textPosition = textNode.getAbsolutePosition();\r\n        console.log(textPosition);\r\n\r\n        // then lets find position of stage container on the page:\r\n        var stageBox = stage.container().getBoundingClientRect();\r\n        console.log(stageBox);\r\n\r\n        // so position of textarea will be the sum of positions above:\r\n        var areaPosition = {\r\n          x: width + textPosition.x,\r\n          y: height + textPosition.y\r\n        };\r\n\r\n        // create textarea and style it\r\n        var textarea = document.createElement('textarea');\r\n        document.body.appendChild(textarea);\r\n\r\n        textarea.value = textNode.text();\r\n        textarea.style.position = 'absolute';\r\n        textarea.style.rows = 10;\r\n        textarea.style.cols = 50;\r\n        textarea.style.top = areaPosition.y + 'px';\r\n        textarea.style.left = (areaPosition.x - 300) + 'px';\r\n        textarea.style.width = textNode.width();\r\n\r\n        textarea.focus();\r\n\r\n        textarea.addEventListener('keydown', function (e) {\r\n          // hide on enter\r\n          if (e.keyCode === 13) {\r\n            textNode.text(textarea.value);\r\n            layer.draw();\r\n            document.body.removeChild(textarea);\r\n          }\r\n        });\r\n      });\r\n}\r\n\r\nfunction addBackground(){\r\n//this code below is to apply random background.\r\nlet bgRect = new Konva.Rect({\r\n            x:0,y:0,\r\n            width: width,\r\n            height: height,\r\n            fill: colorArr[3],\r\n            draggable: false,\r\n        });\r\n        bglayer.add(bgRect)\r\n        bglayer.draw();\r\n}\r\n\r\nfunction returnRandom(){\r\n        return Math.floor(Math.random() * 300) + 50 ;\r\n}\r\n\r\nfunction returnRandomY(){\r\n        return Math.floor(Math.random() * 100) + 50 ;\r\n}\r\n\r\nfunction forTwitter() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 1 });\r\n\t\t\tdownloadURI(dataURL, 'posterTW.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forFacebook() {\r\n\t\tif (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterFB.png');\r\n        }\r\n        statsCounter();\r\n\r\n}\r\n\r\nfunction forLinkedIn() {\r\n    if (isMobile) {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 4 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        else {\r\n            var dataURL = stage.toDataURL({  pixelRatio: 2 });\r\n\t\t\tdownloadURI(dataURL, 'posterLN.png');\r\n        }\r\n        statsCounter();\r\n}\r\n\r\nfunction downloadURI(uri, name) {\r\n\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }\r\n\r\n  beforeUpdate(() => {\r\n\tconsole.log(\"beforeUpdate was called\");\r\n\t\t//setting default values to canvas dimensions\r\n\t\twidth = 720;\r\n\t\theight = 350;\r\n\t\t// then create default one layer\r\n        //layer = new Konva.Layer();\r\n        \r\n\t});\r\n\r\n  afterUpdate(() => {\r\n    function fitStageIntoParentContainer() {\r\n      let lcontainer = document.getElementById('stage-parent');\r\n\r\n      // now we need to fit stage into parent\r\n      var containerWidth = document.getElementById('stage-parent').offsetWidth;\r\n      // to do this we need to scale the stage\r\n      var scale = containerWidth / width;\r\n\r\n      stage.width(width * scale);\r\n      stage.height(height * scale);\r\n      stage.scale({\r\n        x: scale,\r\n        y: scale\r\n      });\r\n      stage.draw();\r\n    }\r\n\r\n    fitStageIntoParentContainer();\r\n    // adapt the stage on any window resize\r\n    window.addEventListener('resize', fitStageIntoParentContainer);\r\n  })\r\n    \r\n  onMount(() => {\r\n        proAccessCheck();\r\n        firebaseAnalytics.logEvent('Simple_Template');\r\n         //code to intialize counter for stats\r\n         db.collection('usersDB').doc(user).get().then(doc => {\r\n            if (doc.exists) {\r\n                let userData = doc.data();\r\n                contentMadeSoFar = userData.totalCreated;\r\n            } else {\r\n                db.collection('usersDB').doc(user).set({\r\n                            totalCreated: 0\r\n                })\r\n            }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n        // code to intialize counter for stats\r\n        db.collection('usersDB').doc(user).get().then(doc => {\r\n            if (doc.exists) {\r\n                let userData = doc.data();\r\n                contentMadeSoFar = userData.totalCreated;\r\n            } else {\r\n                db.collection('usersDB').doc(user).set({\r\n                            totalCreated: 0\r\n                })\r\n            }\r\n            }).catch(function(error) {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n            \r\n        // first we need to create a stage\r\n        stage = new Konva.Stage({\r\n          container: 'konva-stage',   // id of container <div>\r\n          width: 720,\r\n          height: 350\r\n        });\r\n\r\n        layer = new Konva.Layer();\r\n        bglayer = new Konva.Layer();\r\n        shapelayer = new Konva.Layer();\r\n\r\n        bglayer.moveToBottom();\r\n        shapelayer.moveToTop();\r\n        stage.add(bglayer);\r\n        stage.add(shapelayer);\r\n        stage.add(layer);\r\n\r\n        addBackground();\r\n        headingText();\r\n        subHeadingText();\r\n\r\n        \r\n      if(localStorage.getItem('heading')){\r\n          textNode.text(heading)\r\n          layer.draw(); \r\n          \r\n        }\r\n        if(localStorage.getItem('companyinfo')){\r\n          minortextNode.text(companyinfo)\r\n          layer.draw(); \r\n        }\r\n    });\r\n</script>\r\n<div>\r\n    <Container fluid>\r\n    {#if user}\r\n\t<Row class=\"pt-5\">\r\n\t\t<Col sm=\"12\" class=\"p-3\">\r\n\t\t\t<h1 class=\"textBlue gradient-text font-weight-bold text-center\">Minimal Template</h1>\r\n\t\t</Col>\r\n        <Col sm=\"12\" class=\"text-center\">\r\n            <h4 class=\"font-weight-bold\">Edit with your text. You can also move the main text.</h4>\r\n\t\t</Col>\r\n    </Row>\r\n\r\n    <Row>\r\n      <Col class=\"d-flex justify-content-center\">\r\n        <div id=\"stage-parent\">\r\n          <div id=\"konva-stage\"></div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n\r\n        <Row class=\"mt-2 justify-content-center\">\r\n        <div>\r\n            <Row class=\"pt-3\">\r\n              <!--{#if !allowProAccess}\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                  <h5 class=\"textBlue font-weight-bold\">⚠ This feature requires PRO account.</h5>\r\n                  <button id=\"toggleForPro\" class=\"pressDownDisabled btn-block btn-lg\" disabled>Remix Design</button>\r\n              </Col>\r\n              {:else}\r\n              {/if}-->\r\n              <Col sm=\"12\" class=\"text-center\">\r\n                <button id=\"toggleForPro\" class=\"pressDown btn-block btn-lg\" on:click={remix}>Remix Design</button>\r\n              </Col>\r\n            </Row>\r\n                <div>\r\n                    <Row class=\"pt-5\">\r\n                        <Col sm=\"12\" class=\"text-center\">\r\n                            <h4>Download For Different Social Media.</h4>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row class=\"mt-2 mx-4 text-center\">\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forFacebook}>Facebook</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forTwitter}>Twitter</button>\r\n                    </Col>\r\n                    <Col>\r\n                    <button class=\"pressDown btn-block btn-lg\" on:click={forLinkedIn}>Linkedin</button>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n        </div>\r\n        </Row>\r\n{:else}\r\n<NotFound />\r\n{/if}\r\n<hr/>\r\n<Footer />\r\n</Container>\r\n</div>"
  ],
  "names": [],
  "mappings": "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"
}